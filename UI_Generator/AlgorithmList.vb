' this file is automatically generated in a pre-build step.  Do not waste your time modifying manually.
Public Class algorithmList
Public Enum functionNames
_CPP_AddWeighted_Basics
_CPP_Mesh_Agast
_CPP_Mesh_Basics
_CPP_RedMin_Basics
_CPP_RedMin_Core
_CPP_Palette_Basics
_CPP_FeatureLess_History
_CPP_Line_Basics
_CPP_Convex_Basics
_CPP_Resize_Preserve
_CPP_History_Basics
_CPP_Motion_Core
_CPP_Histogram_Kalman
_CPP_Kalman_Basics
_CPP_RedCloud_Core
_CPP_FPoly_TopFeatures
_CPP_Random_Enumerable
_CPP_Bezier_Basics
_CPP_Feature_Agast
_CPP_Resize_Basics
_CPP_Delaunay_Basics
_CPP_Delaunay_GenerationsNoKNN
_CPP_KNN_Basics
_CPP_Random_Basics
_CPP_KNN_Lossy
_CPP_Delaunay_Generations
_CPP_Stable_Basics
_CPP_Feature_Basics
_CPP_Remap_Basics
_CPP_Edge_Canny
_CPP_Edge_Sobel
_CPP_Edge_Scharr
_CPP_Mat_4to1
_CPP_Grid_Basics
_CPP_Depth_Colorizer
_CPP_RedCloud_Flood
_CPP_Depth_PointCloud
_CPP_IMU_GMatrix
_CPP_IMU_GMatrix_QT
_CPP_Depth_PointCloud_IMU
_CPP_Binarize_Simple
_CPP_Plot_Histogram
_CPP_Histogram_Basics
_CPP_BackProject_Basics
_CPP_Rectangle_Basics
_CPP_Rectangle_Rotated
_CPP_Contour_Largest
_CPP_Diff_Basics
_CPP_ApproxPoly_FindandDraw
_CPP_ApproxPoly_Basics
_CPP_Hull_Basics
_CPP_ApproxPoly_Hull
_CPP_Edge_Segments
_CPP_Motion_Basics
_CPP_Edge_MotionAccum
_CPP_Edge_MotionFrames
_CPP_Edge_Preserving
_CPP_EdgeDraw_Basics
_CPP_Distance_Basics
_CPP_FeatureLess_Basics
_CPP_FeatureLess_Edge
_CPP_Stable_BasicsCount
End Enum
Public Function createAlgorithm( algorithmName as string) As Object
	If algorithmName.endsWith(".py") then return new Python_Run()
if algorithmName = "AddWeighted_Basics" Then return new AddWeighted_Basics
if algorithmName = "AddWeighted_Edges" Then return new AddWeighted_Edges
if algorithmName = "AddWeighted_ImageAccumulate" Then return new AddWeighted_ImageAccumulate
if algorithmName = "AddWeighted_InfraRed" Then return new AddWeighted_InfraRed
if algorithmName = "AlphaChannel_Basics" Then return new AlphaChannel_Basics
if algorithmName = "Annealing_Basics_CPP" Then return new Annealing_Basics_CPP
if algorithmName = "Annealing_MultiThreaded" Then return new Annealing_MultiThreaded
if algorithmName = "ApproxPoly_Basics" Then return new ApproxPoly_Basics
if algorithmName = "ApproxPoly_FindandDraw" Then return new ApproxPoly_FindandDraw
if algorithmName = "ApproxPoly_Hull" Then return new ApproxPoly_Hull
if algorithmName = "Area_FindNonZero" Then return new Area_FindNonZero
if algorithmName = "Area_MinMotionRect" Then return new Area_MinMotionRect
if algorithmName = "Area_MinRect" Then return new Area_MinRect
if algorithmName = "Area_MinTriangle_CPP" Then return new Area_MinTriangle_CPP
if algorithmName = "Area_SoloPoints" Then return new Area_SoloPoints
if algorithmName = "AsciiArt_Basics" Then return new AsciiArt_Basics
if algorithmName = "AsciiArt_Diff" Then return new AsciiArt_Diff
if algorithmName = "AsciiArt_Gray" Then return new AsciiArt_Gray
if algorithmName = "BackProject_Basics" Then return new BackProject_Basics
if algorithmName = "BackProject_BasicsKeyboard" Then return new BackProject_BasicsKeyboard
if algorithmName = "BackProject_Depth" Then return new BackProject_Depth
if algorithmName = "BackProject_Display" Then return new BackProject_Display
if algorithmName = "BackProject_FeatureLess" Then return new BackProject_FeatureLess
if algorithmName = "BackProject_Full" Then return new BackProject_Full
if algorithmName = "BackProject_FullEqualized" Then return new BackProject_FullEqualized
if algorithmName = "BackProject_FullLines" Then return new BackProject_FullLines
if algorithmName = "BackProject_Horizontal" Then return new BackProject_Horizontal
if algorithmName = "BackProject_Image" Then return new BackProject_Image
if algorithmName = "BackProject_LineSide" Then return new BackProject_LineSide
if algorithmName = "BackProject_LineTop" Then return new BackProject_LineTop
if algorithmName = "BackProject_MaskLines" Then return new BackProject_MaskLines
if algorithmName = "BackProject_Masks" Then return new BackProject_Masks
if algorithmName = "BackProject_MeterByMeter" Then return new BackProject_MeterByMeter
if algorithmName = "BackProject_Mouse" Then return new BackProject_Mouse
if algorithmName = "BackProject_PointCloud" Then return new BackProject_PointCloud
if algorithmName = "BackProject_Reduction" Then return new BackProject_Reduction
if algorithmName = "BackProject_ReductionLines" Then return new BackProject_ReductionLines
if algorithmName = "BackProject_Side" Then return new BackProject_Side
if algorithmName = "BackProject_SoloSide" Then return new BackProject_SoloSide
if algorithmName = "BackProject_SoloTop" Then return new BackProject_SoloTop
if algorithmName = "BackProject_Top" Then return new BackProject_Top
if algorithmName = "BackProject_Unstable" Then return new BackProject_Unstable
if algorithmName = "BackProject_Vertical" Then return new BackProject_Vertical
if algorithmName = "BackProject2D_Basics" Then return new BackProject2D_Basics
if algorithmName = "BackProject2D_Compare" Then return new BackProject2D_Compare
if algorithmName = "BackProject2D_Filter" Then return new BackProject2D_Filter
if algorithmName = "BackProject2D_FilterBoth" Then return new BackProject2D_FilterBoth
if algorithmName = "BackProject2D_FilterSide" Then return new BackProject2D_FilterSide
if algorithmName = "BackProject2D_FilterTop" Then return new BackProject2D_FilterTop
if algorithmName = "BackProject2D_FullImage" Then return new BackProject2D_FullImage
if algorithmName = "BackProject2D_RowCol" Then return new BackProject2D_RowCol
if algorithmName = "BackProject2D_Side" Then return new BackProject2D_Side
if algorithmName = "BackProject2D_Top" Then return new BackProject2D_Top
if algorithmName = "Benford_Basics" Then return new Benford_Basics
if algorithmName = "Benford_Depth" Then return new Benford_Depth
if algorithmName = "Benford_DepthRGB" Then return new Benford_DepthRGB
if algorithmName = "Benford_JPEG" Then return new Benford_JPEG
if algorithmName = "Benford_JPEG99" Then return new Benford_JPEG99
if algorithmName = "Benford_NormalizedImage" Then return new Benford_NormalizedImage
if algorithmName = "Benford_NormalizedImage99" Then return new Benford_NormalizedImage99
if algorithmName = "Benford_PNG" Then return new Benford_PNG
if algorithmName = "Benford_Primes" Then return new Benford_Primes
if algorithmName = "Bezier_Basics" Then return new Bezier_Basics
if algorithmName = "Bezier_Example" Then return new Bezier_Example
if algorithmName = "BGRPattern_Basics" Then return new BGRPattern_Basics
if algorithmName = "BGSubtract_Basics" Then return new BGSubtract_Basics
if algorithmName = "BGSubtract_Basics_CPP" Then return new BGSubtract_Basics_CPP
if algorithmName = "BGSubtract_DepthOrColorMotion" Then return new BGSubtract_DepthOrColorMotion
if algorithmName = "BGSubtract_GMG_KNN" Then return new BGSubtract_GMG_KNN
if algorithmName = "BGSubtract_MOG" Then return new BGSubtract_MOG
if algorithmName = "BGSubtract_MOG_Retina" Then return new BGSubtract_MOG_Retina
if algorithmName = "BGSubtract_MOG_RGBDepth" Then return new BGSubtract_MOG_RGBDepth
if algorithmName = "BGSubtract_MOG2" Then return new BGSubtract_MOG2
if algorithmName = "BGSubtract_MotionDetect" Then return new BGSubtract_MotionDetect
if algorithmName = "BGSubtract_Reduction" Then return new BGSubtract_Reduction
if algorithmName = "BGSubtract_Synthetic" Then return new BGSubtract_Synthetic
if algorithmName = "BGSubtract_Synthetic_CPP" Then return new BGSubtract_Synthetic_CPP
if algorithmName = "BGSubtract_Video" Then return new BGSubtract_Video
if algorithmName = "Binarize_Basics" Then return new Binarize_Basics
if algorithmName = "Binarize_Bernson" Then return new Binarize_Bernson
if algorithmName = "Binarize_Bernson_MT" Then return new Binarize_Bernson_MT
if algorithmName = "Binarize_KMeansMasks" Then return new Binarize_KMeansMasks
if algorithmName = "Binarize_KMeansRGB" Then return new Binarize_KMeansRGB
if algorithmName = "Binarize_Niblack_Nick" Then return new Binarize_Niblack_Nick
if algorithmName = "Binarize_Niblack_Sauvola" Then return new Binarize_Niblack_Sauvola
if algorithmName = "Binarize_OTSU" Then return new Binarize_OTSU
if algorithmName = "Binarize_Recurse" Then return new Binarize_Recurse
if algorithmName = "Binarize_RecurseAdd" Then return new Binarize_RecurseAdd
if algorithmName = "Binarize_Simple" Then return new Binarize_Simple
if algorithmName = "Bitmap_ToMat" Then return new Bitmap_ToMat
if algorithmName = "Blob_Basics" Then return new Blob_Basics
if algorithmName = "Blob_Input" Then return new Blob_Input
if algorithmName = "Blob_RenderBlobs" Then return new Blob_RenderBlobs
if algorithmName = "BlockMatching_Basics" Then return new BlockMatching_Basics
if algorithmName = "Blur_Basics" Then return new Blur_Basics
if algorithmName = "Blur_Bilateral" Then return new Blur_Bilateral
if algorithmName = "Blur_Depth" Then return new Blur_Depth
if algorithmName = "Blur_Detection" Then return new Blur_Detection
if algorithmName = "Blur_Gaussian" Then return new Blur_Gaussian
if algorithmName = "Blur_Homogeneous" Then return new Blur_Homogeneous
if algorithmName = "Blur_Median" Then return new Blur_Median
if algorithmName = "Blur_Median_CS" Then return new Blur_Median_CS
if algorithmName = "Blur_PlusHistogram" Then return new Blur_PlusHistogram
if algorithmName = "Blur_TopoMap" Then return new Blur_TopoMap
if algorithmName = "BRISK_Basics" Then return new BRISK_Basics
if algorithmName = "CamShift_Basics" Then return new CamShift_Basics
if algorithmName = "CamShift_Foreground" Then return new CamShift_Foreground
if algorithmName = "CamShift_RedHue" Then return new CamShift_RedHue
if algorithmName = "Cartoonify_Basics" Then return new Cartoonify_Basics
if algorithmName = "CComp_Basics" Then return new CComp_Basics
if algorithmName = "CComp_Both" Then return new CComp_Both
if algorithmName = "CComp_Hulls" Then return new CComp_Hulls
if algorithmName = "CComp_Shapes" Then return new CComp_Shapes
if algorithmName = "CComp_Stats" Then return new CComp_Stats
if algorithmName = "Cell_Basics" Then return new Cell_Basics
if algorithmName = "Cell_Binarize" Then return new Cell_Binarize
if algorithmName = "Cell_Distance" Then return new Cell_Distance
if algorithmName = "Cell_DistanceDepth" Then return new Cell_DistanceDepth
if algorithmName = "Cell_Join" Then return new Cell_Join
if algorithmName = "Cell_JumpDown" Then return new Cell_JumpDown
if algorithmName = "Cell_JumpUnstable" Then return new Cell_JumpUnstable
if algorithmName = "Cell_JumpUp" Then return new Cell_JumpUp
if algorithmName = "Cell_Overlaps" Then return new Cell_Overlaps
if algorithmName = "Cell_PixelCountCompare" Then return new Cell_PixelCountCompare
if algorithmName = "Cell_Stable" Then return new Cell_Stable
if algorithmName = "Cell_StableColors" Then return new Cell_StableColors
if algorithmName = "Cell_StableMax" Then return new Cell_StableMax
if algorithmName = "Cell_ValidateColorCells" Then return new Cell_ValidateColorCells
if algorithmName = "CellularAutomata_All256" Then return new CellularAutomata_All256
if algorithmName = "CellularAutomata_Basics" Then return new CellularAutomata_Basics
if algorithmName = "CellularAutomata_Basics_MT" Then return new CellularAutomata_Basics_MT
if algorithmName = "CellularAutomata_Life" Then return new CellularAutomata_Life
if algorithmName = "CellularAutomata_LifeColor" Then return new CellularAutomata_LifeColor
if algorithmName = "CellularAutomata_LifePopulation" Then return new CellularAutomata_LifePopulation
if algorithmName = "CellularAutomata_MultiPoint" Then return new CellularAutomata_MultiPoint
if algorithmName = "Clone_Basics" Then return new Clone_Basics
if algorithmName = "Clone_ColorChange" Then return new Clone_ColorChange
if algorithmName = "Clone_Eagle" Then return new Clone_Eagle
if algorithmName = "Clone_IlluminationChange" Then return new Clone_IlluminationChange
if algorithmName = "Clone_Seamless" Then return new Clone_Seamless
if algorithmName = "Clone_TextureFlattening" Then return new Clone_TextureFlattening
if algorithmName = "Coherence_Basics" Then return new Coherence_Basics
if algorithmName = "Coherence_Depth" Then return new Coherence_Depth
if algorithmName = "Color_Basics" Then return new Color_Basics
if algorithmName = "Color_Common_VB" Then return new Color_Common_VB
if algorithmName = "Color_Complementary" Then return new Color_Complementary
if algorithmName = "Color_ComplementaryTest" Then return new Color_ComplementaryTest
if algorithmName = "Color_Denoise" Then return new Color_Denoise
if algorithmName = "Color_Depth" Then return new Color_Depth
if algorithmName = "Color_Grayscale" Then return new Color_Grayscale
if algorithmName = "Color_InRange" Then return new Color_InRange
if algorithmName = "Color_KMeans" Then return new Color_KMeans
if algorithmName = "Color_RedHue" Then return new Color_RedHue
if algorithmName = "Color_Smoothing" Then return new Color_Smoothing
if algorithmName = "Color_TopX_VB" Then return new Color_TopX_VB
if algorithmName = "Complexity_Basics" Then return new Complexity_Basics
if algorithmName = "Complexity_Dots" Then return new Complexity_Dots
if algorithmName = "Complexity_PlotOpenCV" Then return new Complexity_PlotOpenCV
if algorithmName = "Concat_4way" Then return new Concat_4way
if algorithmName = "Concat_Basics" Then return new Concat_Basics
if algorithmName = "Contour_Basics" Then return new Contour_Basics
if algorithmName = "Contour_BasicsWithOptions" Then return new Contour_BasicsWithOptions
if algorithmName = "Contour_Compare" Then return new Contour_Compare
if algorithmName = "Contour_CompareToFeatureless" Then return new Contour_CompareToFeatureless
if algorithmName = "Contour_Depth" Then return new Contour_Depth
if algorithmName = "Contour_Edges" Then return new Contour_Edges
if algorithmName = "Contour_Foreground" Then return new Contour_Foreground
if algorithmName = "Contour_Image" Then return new Contour_Image
if algorithmName = "Contour_Largest" Then return new Contour_Largest
if algorithmName = "Contour_Outline" Then return new Contour_Outline
if algorithmName = "Contour_RedCloud" Then return new Contour_RedCloud
if algorithmName = "Contour_RedCloudCorners" Then return new Contour_RedCloudCorners
if algorithmName = "Contour_RedCloudEdges" Then return new Contour_RedCloudEdges
if algorithmName = "Contour_RemoveLines" Then return new Contour_RemoveLines
if algorithmName = "Contour_RotatedRects" Then return new Contour_RotatedRects
if algorithmName = "Contour_SelfIntersect" Then return new Contour_SelfIntersect
if algorithmName = "Contour_SidePoints" Then return new Contour_SidePoints
if algorithmName = "Contour_Smoothing" Then return new Contour_Smoothing
if algorithmName = "Contour_Sorted" Then return new Contour_Sorted
if algorithmName = "Contour_WholeImage" Then return new Contour_WholeImage
if algorithmName = "Contrast_Basics" Then return new Contrast_Basics
if algorithmName = "Contrast_POW" Then return new Contrast_POW
if algorithmName = "Convex_Basics" Then return new Convex_Basics
if algorithmName = "Convex_Defects" Then return new Convex_Defects
if algorithmName = "Convex_RedCloud" Then return new Convex_RedCloud
if algorithmName = "Convex_RedCloudDefects" Then return new Convex_RedCloudDefects
if algorithmName = "Corners_FAST" Then return new Corners_FAST
if algorithmName = "Corners_FASTCentroid" Then return new Corners_FASTCentroid
if algorithmName = "Corners_FASTCentroids" Then return new Corners_FASTCentroids
if algorithmName = "Corners_FASTStablePoints" Then return new Corners_FASTStablePoints
if algorithmName = "Corners_Harris" Then return new Corners_Harris
if algorithmName = "Corners_Harris_CPP" Then return new Corners_Harris_CPP
if algorithmName = "Corners_HarrisDetector" Then return new Corners_HarrisDetector
if algorithmName = "Corners_PreCornerDetect" Then return new Corners_PreCornerDetect
if algorithmName = "Corners_RedCloud" Then return new Corners_RedCloud
if algorithmName = "Corners_ShiTomasi_CPP" Then return new Corners_ShiTomasi_CPP
if algorithmName = "Corners_SubPix" Then return new Corners_SubPix
if algorithmName = "Corners_Surf" Then return new Corners_Surf
if algorithmName = "Corners_SurfDraw" Then return new Corners_SurfDraw
if algorithmName = "Correlation_Basics" Then return new Correlation_Basics
if algorithmName = "Covariance_Basics" Then return new Covariance_Basics
if algorithmName = "Covariance_Images" Then return new Covariance_Images
if algorithmName = "Covariance_Test" Then return new Covariance_Test
if algorithmName = "CPP_Basics" Then return new CPP_Basics
if algorithmName = "CPP_AddWeighted_Basics" Then return new CPP_Basics(functionNames._CPP_AddWeighted_Basics)
if algorithmName = "CPP_ApproxPoly_Basics" Then return new CPP_Basics(functionNames._CPP_ApproxPoly_Basics)
if algorithmName = "CPP_ApproxPoly_FindandDraw" Then return new CPP_Basics(functionNames._CPP_ApproxPoly_FindandDraw)
if algorithmName = "CPP_ApproxPoly_Hull" Then return new CPP_Basics(functionNames._CPP_ApproxPoly_Hull)
if algorithmName = "CPP_BackProject_Basics" Then return new CPP_Basics(functionNames._CPP_BackProject_Basics)
if algorithmName = "CPP_Bezier_Basics" Then return new CPP_Basics(functionNames._CPP_Bezier_Basics)
if algorithmName = "CPP_Binarize_Simple" Then return new CPP_Basics(functionNames._CPP_Binarize_Simple)
if algorithmName = "CPP_Contour_Largest" Then return new CPP_Basics(functionNames._CPP_Contour_Largest)
if algorithmName = "CPP_Convex_Basics" Then return new CPP_Basics(functionNames._CPP_Convex_Basics)
if algorithmName = "CPP_Delaunay_Basics" Then return new CPP_Basics(functionNames._CPP_Delaunay_Basics)
if algorithmName = "CPP_Delaunay_Generations" Then return new CPP_Basics(functionNames._CPP_Delaunay_Generations)
if algorithmName = "CPP_Delaunay_GenerationsNoKNN" Then return new CPP_Basics(functionNames._CPP_Delaunay_GenerationsNoKNN)
if algorithmName = "CPP_Depth_Colorizer" Then return new CPP_Basics(functionNames._CPP_Depth_Colorizer)
if algorithmName = "CPP_Depth_PointCloud" Then return new CPP_Basics(functionNames._CPP_Depth_PointCloud)
if algorithmName = "CPP_Depth_PointCloud_IMU" Then return new CPP_Basics(functionNames._CPP_Depth_PointCloud_IMU)
if algorithmName = "CPP_Diff_Basics" Then return new CPP_Basics(functionNames._CPP_Diff_Basics)
if algorithmName = "CPP_Distance_Basics" Then return new CPP_Basics(functionNames._CPP_Distance_Basics)
if algorithmName = "CPP_Edge_Canny" Then return new CPP_Basics(functionNames._CPP_Edge_Canny)
if algorithmName = "CPP_Edge_MotionAccum" Then return new CPP_Basics(functionNames._CPP_Edge_MotionAccum)
if algorithmName = "CPP_Edge_MotionFrames" Then return new CPP_Basics(functionNames._CPP_Edge_MotionFrames)
if algorithmName = "CPP_Edge_Preserving" Then return new CPP_Basics(functionNames._CPP_Edge_Preserving)
if algorithmName = "CPP_Edge_Scharr" Then return new CPP_Basics(functionNames._CPP_Edge_Scharr)
if algorithmName = "CPP_Edge_Segments" Then return new CPP_Basics(functionNames._CPP_Edge_Segments)
if algorithmName = "CPP_Edge_Sobel" Then return new CPP_Basics(functionNames._CPP_Edge_Sobel)
if algorithmName = "CPP_EdgeDraw_Basics" Then return new CPP_Basics(functionNames._CPP_EdgeDraw_Basics)
if algorithmName = "CPP_Feature_Agast" Then return new CPP_Basics(functionNames._CPP_Feature_Agast)
if algorithmName = "CPP_Feature_Basics" Then return new CPP_Basics(functionNames._CPP_Feature_Basics)
if algorithmName = "CPP_FeatureLess_Basics" Then return new CPP_Basics(functionNames._CPP_FeatureLess_Basics)
if algorithmName = "CPP_FeatureLess_Edge" Then return new CPP_Basics(functionNames._CPP_FeatureLess_Edge)
if algorithmName = "CPP_FeatureLess_History" Then return new CPP_Basics(functionNames._CPP_FeatureLess_History)
if algorithmName = "CPP_FPoly_TopFeatures" Then return new CPP_Basics(functionNames._CPP_FPoly_TopFeatures)
if algorithmName = "CPP_Grid_Basics" Then return new CPP_Basics(functionNames._CPP_Grid_Basics)
if algorithmName = "CPP_Histogram_Basics" Then return new CPP_Basics(functionNames._CPP_Histogram_Basics)
if algorithmName = "CPP_Histogram_Kalman" Then return new CPP_Basics(functionNames._CPP_Histogram_Kalman)
if algorithmName = "CPP_History_Basics" Then return new CPP_Basics(functionNames._CPP_History_Basics)
if algorithmName = "CPP_Hull_Basics" Then return new CPP_Basics(functionNames._CPP_Hull_Basics)
if algorithmName = "CPP_IMU_GMatrix" Then return new CPP_Basics(functionNames._CPP_IMU_GMatrix)
if algorithmName = "CPP_IMU_GMatrix_QT" Then return new CPP_Basics(functionNames._CPP_IMU_GMatrix_QT)
if algorithmName = "CPP_Kalman_Basics" Then return new CPP_Basics(functionNames._CPP_Kalman_Basics)
if algorithmName = "CPP_KNN_Basics" Then return new CPP_Basics(functionNames._CPP_KNN_Basics)
if algorithmName = "CPP_KNN_Lossy" Then return new CPP_Basics(functionNames._CPP_KNN_Lossy)
if algorithmName = "CPP_Line_Basics" Then return new CPP_Basics(functionNames._CPP_Line_Basics)
if algorithmName = "CPP_Mat_4to1" Then return new CPP_Basics(functionNames._CPP_Mat_4to1)
if algorithmName = "CPP_Mesh_Agast" Then return new CPP_Basics(functionNames._CPP_Mesh_Agast)
if algorithmName = "CPP_Mesh_Basics" Then return new CPP_Basics(functionNames._CPP_Mesh_Basics)
if algorithmName = "CPP_Motion_Basics" Then return new CPP_Basics(functionNames._CPP_Motion_Basics)
if algorithmName = "CPP_Motion_Core" Then return new CPP_Basics(functionNames._CPP_Motion_Core)
if algorithmName = "CPP_Palette_Basics" Then return new CPP_Basics(functionNames._CPP_Palette_Basics)
if algorithmName = "CPP_Plot_Histogram" Then return new CPP_Basics(functionNames._CPP_Plot_Histogram)
if algorithmName = "CPP_Random_Basics" Then return new CPP_Basics(functionNames._CPP_Random_Basics)
if algorithmName = "CPP_Random_Enumerable" Then return new CPP_Basics(functionNames._CPP_Random_Enumerable)
if algorithmName = "CPP_Rectangle_Basics" Then return new CPP_Basics(functionNames._CPP_Rectangle_Basics)
if algorithmName = "CPP_Rectangle_Rotated" Then return new CPP_Basics(functionNames._CPP_Rectangle_Rotated)
if algorithmName = "CPP_RedCloud_Core" Then return new CPP_Basics(functionNames._CPP_RedCloud_Core)
if algorithmName = "CPP_RedCloud_Flood" Then return new CPP_Basics(functionNames._CPP_RedCloud_Flood)
if algorithmName = "CPP_RedMin_Basics" Then return new CPP_Basics(functionNames._CPP_RedMin_Basics)
if algorithmName = "CPP_RedMin_Core" Then return new CPP_Basics(functionNames._CPP_RedMin_Core)
if algorithmName = "CPP_Remap_Basics" Then return new CPP_Basics(functionNames._CPP_Remap_Basics)
if algorithmName = "CPP_Resize_Basics" Then return new CPP_Basics(functionNames._CPP_Resize_Basics)
if algorithmName = "CPP_Resize_Preserve" Then return new CPP_Basics(functionNames._CPP_Resize_Preserve)
if algorithmName = "CPP_Stable_Basics" Then return new CPP_Basics(functionNames._CPP_Stable_Basics)
if algorithmName = "CPP_Stable_BasicsCount" Then return new CPP_Basics(functionNames._CPP_Stable_BasicsCount)
if algorithmName = "Crypto_Hash" Then return new Crypto_Hash
if algorithmName = "CSV_Basics" Then return new CSV_Basics
if algorithmName = "DCT_Basics" Then return new DCT_Basics
if algorithmName = "DCT_Depth" Then return new DCT_Depth
if algorithmName = "DCT_FeatureLess" Then return new DCT_FeatureLess
if algorithmName = "DCT_RGB" Then return new DCT_RGB
if algorithmName = "DCT_Surfaces_debug" Then return new DCT_Surfaces_debug
if algorithmName = "Delaunay_Basics" Then return new Delaunay_Basics
if algorithmName = "Delaunay_Generations" Then return new Delaunay_Generations
if algorithmName = "Delaunay_GenerationsNoKNN" Then return new Delaunay_GenerationsNoKNN
if algorithmName = "Delaunay_SubDiv" Then return new Delaunay_SubDiv
if algorithmName = "Delaunay_Subdiv2D" Then return new Delaunay_Subdiv2D
if algorithmName = "Denoise_Basics_CPP" Then return new Denoise_Basics_CPP
if algorithmName = "Denoise_Pixels" Then return new Denoise_Pixels
if algorithmName = "Density_Basics" Then return new Density_Basics
if algorithmName = "Density_Count_CPP" Then return new Density_Count_CPP
if algorithmName = "Density_Mask" Then return new Density_Mask
if algorithmName = "Density_Phase" Then return new Density_Phase
if algorithmName = "Depth_Averaging" Then return new Depth_Averaging
if algorithmName = "Depth_AveragingStable" Then return new Depth_AveragingStable
if algorithmName = "Depth_Basics" Then return new Depth_Basics
if algorithmName = "Depth_BGSubtract" Then return new Depth_BGSubtract
if algorithmName = "Depth_Colorizer_CPP" Then return new Depth_Colorizer_CPP
if algorithmName = "Depth_Colorizer_VB" Then return new Depth_Colorizer_VB
if algorithmName = "Depth_ColorMap" Then return new Depth_ColorMap
if algorithmName = "Depth_Contour" Then return new Depth_Contour
if algorithmName = "Depth_Dilate" Then return new Depth_Dilate
if algorithmName = "Depth_Display" Then return new Depth_Display
if algorithmName = "Depth_Far" Then return new Depth_Far
if algorithmName = "Depth_FirstLastDistance" Then return new Depth_FirstLastDistance
if algorithmName = "Depth_Flatland" Then return new Depth_Flatland
if algorithmName = "Depth_Foreground" Then return new Depth_Foreground
if algorithmName = "Depth_ForegroundHead" Then return new Depth_ForegroundHead
if algorithmName = "Depth_ForegroundOld" Then return new Depth_ForegroundOld
if algorithmName = "Depth_ForegroundOverTime" Then return new Depth_ForegroundOverTime
if algorithmName = "Depth_Fusion" Then return new Depth_Fusion
if algorithmName = "Depth_Grid" Then return new Depth_Grid
if algorithmName = "Depth_Holes" Then return new Depth_Holes
if algorithmName = "Depth_HolesOverTime" Then return new Depth_HolesOverTime
if algorithmName = "Depth_HolesRect" Then return new Depth_HolesRect
if algorithmName = "Depth_InRange" Then return new Depth_InRange
if algorithmName = "Depth_LocalMinMax_MT" Then return new Depth_LocalMinMax_MT
if algorithmName = "Depth_MaxMask" Then return new Depth_MaxMask
if algorithmName = "Depth_MeanStdev_MT" Then return new Depth_MeanStdev_MT
if algorithmName = "Depth_MeanStdevPlot" Then return new Depth_MeanStdevPlot
if algorithmName = "Depth_Median" Then return new Depth_Median
if algorithmName = "Depth_MinMaxNone" Then return new Depth_MinMaxNone
if algorithmName = "Depth_MinMaxToVoronoi" Then return new Depth_MinMaxToVoronoi
if algorithmName = "Depth_NotMissing" Then return new Depth_NotMissing
if algorithmName = "Depth_Outline" Then return new Depth_Outline
if algorithmName = "Depth_Palette" Then return new Depth_Palette
if algorithmName = "Depth_PunchBlob" Then return new Depth_PunchBlob
if algorithmName = "Depth_PunchBlobNew" Then return new Depth_PunchBlobNew
if algorithmName = "Depth_PunchDecreasing" Then return new Depth_PunchDecreasing
if algorithmName = "Depth_PunchIncreasing" Then return new Depth_PunchIncreasing
if algorithmName = "Depth_Regions" Then return new Depth_Regions
if algorithmName = "Depth_RGBShadow" Then return new Depth_RGBShadow
if algorithmName = "Depth_Smoothing" Then return new Depth_Smoothing
if algorithmName = "Depth_SmoothingMat" Then return new Depth_SmoothingMat
if algorithmName = "Depth_StableMax" Then return new Depth_StableMax
if algorithmName = "Depth_StableMin" Then return new Depth_StableMin
if algorithmName = "Depth_StableMinMax" Then return new Depth_StableMinMax
if algorithmName = "Depth_TierCount" Then return new Depth_TierCount
if algorithmName = "Depth_Tiers" Then return new Depth_Tiers
if algorithmName = "Depth_Uncertainty" Then return new Depth_Uncertainty
if algorithmName = "Depth_World" Then return new Depth_World
if algorithmName = "Depth_WorldXYZ" Then return new Depth_WorldXYZ
if algorithmName = "Depth_WorldXYZ_MT" Then return new Depth_WorldXYZ_MT
if algorithmName = "Derivative_PointCloudXY" Then return new Derivative_PointCloudXY
if algorithmName = "DFT_Basics" Then return new DFT_Basics
if algorithmName = "DFT_ButterworthDepth" Then return new DFT_ButterworthDepth
if algorithmName = "DFT_ButterworthFilter_MT" Then return new DFT_ButterworthFilter_MT
if algorithmName = "DFT_Inverse" Then return new DFT_Inverse
if algorithmName = "DFT_Shapes" Then return new DFT_Shapes
if algorithmName = "Diff_Basics" Then return new Diff_Basics
if algorithmName = "Diff_Color" Then return new Diff_Color
if algorithmName = "Diff_Depth" Then return new Diff_Depth
if algorithmName = "Diff_DepthAccum" Then return new Diff_DepthAccum
if algorithmName = "Diff_Heartbeat" Then return new Diff_Heartbeat
if algorithmName = "Diff_Lines" Then return new Diff_Lines
if algorithmName = "Diff_RGBAccum" Then return new Diff_RGBAccum
if algorithmName = "Diff_UnstableDepthAndColor" Then return new Diff_UnstableDepthAndColor
if algorithmName = "Dilate_Basics" Then return new Dilate_Basics
if algorithmName = "Dilate_Erode" Then return new Dilate_Erode
if algorithmName = "Dilate_OpenClose" Then return new Dilate_OpenClose
if algorithmName = "DisparityFunction_Basics" Then return new DisparityFunction_Basics
if algorithmName = "Distance_Background" Then return new Distance_Background
if algorithmName = "Distance_Basics" Then return new Distance_Basics
if algorithmName = "Distance_D3Cells" Then return new Distance_D3Cells
if algorithmName = "Distance_Foreground" Then return new Distance_Foreground
if algorithmName = "Distance_Labels" Then return new Distance_Labels
if algorithmName = "Distance_Point3D" Then return new Distance_Point3D
if algorithmName = "Distance_Point4D" Then return new Distance_Point4D
if algorithmName = "Distance_RedMin" Then return new Distance_RedMin
if algorithmName = "Distance_Threshold" Then return new Distance_Threshold
if algorithmName = "Dither_Basics" Then return new Dither_Basics
if algorithmName = "Dlib_iBug300WDownload" Then return new Dlib_iBug300WDownload
if algorithmName = "DNN_Basics" Then return new DNN_Basics
if algorithmName = "DNN_Caffe_CS" Then return new DNN_Caffe_CS
if algorithmName = "DNN_SuperRes" Then return new DNN_SuperRes
if algorithmName = "DNN_SuperResize" Then return new DNN_SuperResize
if algorithmName = "DNN_Test" Then return new DNN_Test
if algorithmName = "Download_Databases" Then return new Download_Databases
if algorithmName = "Draw_Arc" Then return new Draw_Arc
if algorithmName = "Draw_Circles" Then return new Draw_Circles
if algorithmName = "Draw_ClipLine" Then return new Draw_ClipLine
if algorithmName = "Draw_Ellipses" Then return new Draw_Ellipses
if algorithmName = "Draw_Frustrum" Then return new Draw_Frustrum
if algorithmName = "Draw_Hexagon" Then return new Draw_Hexagon
if algorithmName = "Draw_Line" Then return new Draw_Line
if algorithmName = "Draw_Lines" Then return new Draw_Lines
if algorithmName = "Draw_LineTest" Then return new Draw_LineTest
if algorithmName = "Draw_Noise" Then return new Draw_Noise
if algorithmName = "Draw_Polygon" Then return new Draw_Polygon
if algorithmName = "Draw_Shapes" Then return new Draw_Shapes
if algorithmName = "Draw_SymmetricalShapes" Then return new Draw_SymmetricalShapes
if algorithmName = "Edge_All" Then return new Edge_All
if algorithmName = "Edge_BackProjection" Then return new Edge_BackProjection
if algorithmName = "Edge_BinarizedBrightness" Then return new Edge_BinarizedBrightness
if algorithmName = "Edge_BinarizedCanny" Then return new Edge_BinarizedCanny
if algorithmName = "Edge_BinarizedReduction" Then return new Edge_BinarizedReduction
if algorithmName = "Edge_BinarizedSobel" Then return new Edge_BinarizedSobel
if algorithmName = "Edge_Canny" Then return new Edge_Canny
if algorithmName = "Edge_CannyCombined" Then return new Edge_CannyCombined
if algorithmName = "Edge_CannyHistory" Then return new Edge_CannyHistory
if algorithmName = "Edge_CannyLeftRight" Then return new Edge_CannyLeftRight
if algorithmName = "Edge_CannyMin" Then return new Edge_CannyMin
if algorithmName = "Edge_ColorGap_CPP" Then return new Edge_ColorGap_CPP
if algorithmName = "Edge_ColorGap_VB" Then return new Edge_ColorGap_VB
if algorithmName = "Edge_Combo" Then return new Edge_Combo
if algorithmName = "Edge_Consistent" Then return new Edge_Consistent
if algorithmName = "Edge_ConsistentExplore" Then return new Edge_ConsistentExplore
if algorithmName = "Edge_DCTfrequency" Then return new Edge_DCTfrequency
if algorithmName = "Edge_DCTinput" Then return new Edge_DCTinput
if algorithmName = "Edge_DepthAndColor" Then return new Edge_DepthAndColor
if algorithmName = "Edge_DepthEdgeTest" Then return new Edge_DepthEdgeTest
if algorithmName = "Edge_DepthGap_CPP" Then return new Edge_DepthGap_CPP
if algorithmName = "Edge_DepthGap_VB" Then return new Edge_DepthGap_VB
if algorithmName = "Edge_DepthRegions" Then return new Edge_DepthRegions
if algorithmName = "Edge_Deriche_CPP" Then return new Edge_Deriche_CPP
if algorithmName = "Edge_Features" Then return new Edge_Features
if algorithmName = "Edge_HSV" Then return new Edge_HSV
if algorithmName = "Edge_Laplacian" Then return new Edge_Laplacian
if algorithmName = "Edge_LaplacianDepth" Then return new Edge_LaplacianDepth
if algorithmName = "Edge_Matching" Then return new Edge_Matching
if algorithmName = "Edge_MotionAccum" Then return new Edge_MotionAccum
if algorithmName = "Edge_MotionFrames" Then return new Edge_MotionFrames
if algorithmName = "Edge_MotionOverlay" Then return new Edge_MotionOverlay
if algorithmName = "Edge_Preserving" Then return new Edge_Preserving
if algorithmName = "Edge_RandomForest_CPP" Then return new Edge_RandomForest_CPP
if algorithmName = "Edge_Reduction" Then return new Edge_Reduction
if algorithmName = "Edge_ResizeAdd" Then return new Edge_ResizeAdd
if algorithmName = "Edge_RGB" Then return new Edge_RGB
if algorithmName = "Edge_Scharr" Then return new Edge_Scharr
if algorithmName = "Edge_Sobel" Then return new Edge_Sobel
if algorithmName = "Edge_Sobel_Old" Then return new Edge_Sobel_Old
if algorithmName = "Edge_SobelCustom" Then return new Edge_SobelCustom
if algorithmName = "Edge_SobelCustomH" Then return new Edge_SobelCustomH
if algorithmName = "Edge_SobelCustomLeftRight" Then return new Edge_SobelCustomLeftRight
if algorithmName = "Edge_SobelCustomV" Then return new Edge_SobelCustomV
if algorithmName = "Edge_SobelHorizontal" Then return new Edge_SobelHorizontal
if algorithmName = "Edge_SobelLR" Then return new Edge_SobelLR
if algorithmName = "Edge_SobelLRBinarized" Then return new Edge_SobelLRBinarized
if algorithmName = "Edge_Stdev" Then return new Edge_Stdev
if algorithmName = "EdgeDraw_Basics" Then return new EdgeDraw_Basics
if algorithmName = "EdgeDraw_Segments" Then return new EdgeDraw_Segments
if algorithmName = "Eigen_Basics" Then return new Eigen_Basics
if algorithmName = "Eigen_Fitline" Then return new Eigen_Fitline
if algorithmName = "Eigen_FitLineInput" Then return new Eigen_FitLineInput
if algorithmName = "EMax_Basics" Then return new EMax_Basics
if algorithmName = "EMax_Centers" Then return new EMax_Centers
if algorithmName = "EMax_InputClusters" Then return new EMax_InputClusters
if algorithmName = "EMax_PointTracker" Then return new EMax_PointTracker
if algorithmName = "EMax_RandomClusters" Then return new EMax_RandomClusters
if algorithmName = "EMax_VB_Failing" Then return new EMax_VB_Failing
if algorithmName = "Encode_Basics" Then return new Encode_Basics
if algorithmName = "Entropy_Basics" Then return new Entropy_Basics
if algorithmName = "Entropy_DrawRect" Then return new Entropy_DrawRect
if algorithmName = "Entropy_FAST" Then return new Entropy_FAST
if algorithmName = "Entropy_Highest" Then return new Entropy_Highest
if algorithmName = "Erode_Basics" Then return new Erode_Basics
if algorithmName = "Erode_CloudXY" Then return new Erode_CloudXY
if algorithmName = "Erode_DepthSeed" Then return new Erode_DepthSeed
if algorithmName = "Erode_Dilate" Then return new Erode_Dilate
if algorithmName = "Etch_ASketch" Then return new Etch_ASketch
if algorithmName = "Extrinsics_Basics" Then return new Extrinsics_Basics
if algorithmName = "Extrinsics_Display" Then return new Extrinsics_Display
if algorithmName = "Face_Haar_Alt" Then return new Face_Haar_Alt
if algorithmName = "Face_Haar_LBP" Then return new Face_Haar_LBP
if algorithmName = "Feature_Agast" Then return new Feature_Agast
if algorithmName = "Feature_ArcY" Then return new Feature_ArcY
if algorithmName = "Feature_ArcYAll" Then return new Feature_ArcYAll
if algorithmName = "Feature_Basics" Then return new Feature_Basics
if algorithmName = "Feature_BasicsKNN" Then return new Feature_BasicsKNN
if algorithmName = "Feature_BasicsOld" Then return new Feature_BasicsOld
if algorithmName = "Feature_BasicsValidated" Then return new Feature_BasicsValidated
if algorithmName = "Feature_CellFinder" Then return new Feature_CellFinder
if algorithmName = "Feature_CellGrid" Then return new Feature_CellGrid
if algorithmName = "Feature_GoodFeatureTrace" Then return new Feature_GoodFeatureTrace
if algorithmName = "Feature_Grid" Then return new Feature_Grid
if algorithmName = "Feature_History" Then return new Feature_History
if algorithmName = "Feature_Line" Then return new Feature_Line
if algorithmName = "Feature_Lines" Then return new Feature_Lines
if algorithmName = "Feature_Lines_Tutorial1" Then return new Feature_Lines_Tutorial1
if algorithmName = "Feature_Lines_Tutorial2" Then return new Feature_Lines_Tutorial2
if algorithmName = "Feature_LinesVH" Then return new Feature_LinesVH
if algorithmName = "Feature_Longest" Then return new Feature_Longest
if algorithmName = "Feature_LongestV_Tutorial1" Then return new Feature_LongestV_Tutorial1
if algorithmName = "Feature_LongestV_Tutorial2" Then return new Feature_LongestV_Tutorial2
if algorithmName = "Feature_LongestVerticalKNN" Then return new Feature_LongestVerticalKNN
if algorithmName = "Feature_Points" Then return new Feature_Points
if algorithmName = "Feature_PointsDelaunay" Then return new Feature_PointsDelaunay
if algorithmName = "Feature_PointsKNN" Then return new Feature_PointsKNN
if algorithmName = "Feature_PointTracker" Then return new Feature_PointTracker
if algorithmName = "Feature_Reduction" Then return new Feature_Reduction
if algorithmName = "Feature_ShiTomasi" Then return new Feature_ShiTomasi
if algorithmName = "Feature_Sift" Then return new Feature_Sift
if algorithmName = "Feature_Sift_MT" Then return new Feature_Sift_MT
if algorithmName = "Feature_SiftPoints" Then return new Feature_SiftPoints
if algorithmName = "Feature_tCellTracker" Then return new Feature_tCellTracker
if algorithmName = "Feature_TraceKNN" Then return new Feature_TraceKNN
if algorithmName = "Feature_Tracer" Then return new Feature_Tracer
if algorithmName = "Feature_VerticalVerify" Then return new Feature_VerticalVerify
if algorithmName = "FeatureLess_Basics" Then return new FeatureLess_Basics
if algorithmName = "FeatureLess_Canny" Then return new FeatureLess_Canny
if algorithmName = "FeatureLess_DCT" Then return new FeatureLess_DCT
if algorithmName = "FeatureLess_Density" Then return new FeatureLess_Density
if algorithmName = "FeatureLess_Edge_CPP" Then return new FeatureLess_Edge_CPP
if algorithmName = "FeatureLess_EdgeDrawing" Then return new FeatureLess_EdgeDrawing
if algorithmName = "FeatureLess_Histogram" Then return new FeatureLess_Histogram
if algorithmName = "FeatureLess_History" Then return new FeatureLess_History
if algorithmName = "FeatureLess_LeftRight" Then return new FeatureLess_LeftRight
if algorithmName = "FeatureLess_MotionAccum" Then return new FeatureLess_MotionAccum
if algorithmName = "FeatureLess_Prediction" Then return new FeatureLess_Prediction
if algorithmName = "FeatureLess_RedCloud" Then return new FeatureLess_RedCloud
if algorithmName = "FeatureLess_Sobel" Then return new FeatureLess_Sobel
if algorithmName = "FeatureLess_Unique3Pixels" Then return new FeatureLess_Unique3Pixels
if algorithmName = "FeatureLess_UniquePixels" Then return new FeatureLess_UniquePixels
if algorithmName = "FeatureMatch_Basics" Then return new FeatureMatch_Basics
if algorithmName = "FeatureMatch_History" Then return new FeatureMatch_History
if algorithmName = "FeatureMatch_LeftRight" Then return new FeatureMatch_LeftRight
if algorithmName = "Fibonacci_Basics" Then return new Fibonacci_Basics
if algorithmName = "Fibonacci_Yield" Then return new Fibonacci_Yield
if algorithmName = "Filter_Laplacian" Then return new Filter_Laplacian
if algorithmName = "Filter_Maximum" Then return new Filter_Maximum
if algorithmName = "Filter_Mean" Then return new Filter_Mean
if algorithmName = "Filter_Median" Then return new Filter_Median
if algorithmName = "Filter_Minimum" Then return new Filter_Minimum
if algorithmName = "Filter_Normalized2D" Then return new Filter_Normalized2D
if algorithmName = "Filter_NormalizedKernel" Then return new Filter_NormalizedKernel
if algorithmName = "Filter_SepFilter2D" Then return new Filter_SepFilter2D
if algorithmName = "FitEllipse_AMS_CPP" Then return new FitEllipse_AMS_CPP
if algorithmName = "FitEllipse_Basics" Then return new FitEllipse_Basics
if algorithmName = "FitEllipse_Direct_CPP" Then return new FitEllipse_Direct_CPP
if algorithmName = "FitEllipse_RedCloud" Then return new FitEllipse_RedCloud
if algorithmName = "Fitline_3DBasics_MT" Then return new Fitline_3DBasics_MT
if algorithmName = "Fitline_Basics" Then return new Fitline_Basics
if algorithmName = "FLANN_Basics" Then return new FLANN_Basics
if algorithmName = "FLANN_Test" Then return new FLANN_Test
if algorithmName = "Flood_Basics" Then return new Flood_Basics
if algorithmName = "Flood_Click" Then return new Flood_Click
if algorithmName = "Flood_Featureless" Then return new Flood_Featureless
if algorithmName = "Flood_Point" Then return new Flood_Point
if algorithmName = "Flood_PointList" Then return new Flood_PointList
if algorithmName = "Flood_TopX" Then return new Flood_TopX
if algorithmName = "Font_FlowText" Then return new Font_FlowText
if algorithmName = "Font_OpenCV" Then return new Font_OpenCV
if algorithmName = "Font_TrueType" Then return new Font_TrueType
if algorithmName = "Foreground_Basics" Then return new Foreground_Basics
if algorithmName = "Foreground_Contours" Then return new Foreground_Contours
if algorithmName = "Foreground_Hist3D" Then return new Foreground_Hist3D
if algorithmName = "Foreground_KMeans2" Then return new Foreground_KMeans2
if algorithmName = "Foreground_RedMin" Then return new Foreground_RedMin
if algorithmName = "Foreground_RedMinBack" Then return new Foreground_RedMinBack
if algorithmName = "Foreground_RedMinFront" Then return new Foreground_RedMinFront
if algorithmName = "FPoly_Basics" Then return new FPoly_Basics
if algorithmName = "FPoly_BasicsOriginal" Then return new FPoly_BasicsOriginal
if algorithmName = "FPoly_Center" Then return new FPoly_Center
if algorithmName = "FPoly_Core" Then return new FPoly_Core
if algorithmName = "FPoly_EdgeRemoval" Then return new FPoly_EdgeRemoval
if algorithmName = "FPoly_Image" Then return new FPoly_Image
if algorithmName = "FPoly_ImageMask" Then return new FPoly_ImageMask
if algorithmName = "FPoly_ImageNew" Then return new FPoly_ImageNew
if algorithmName = "FPoly_LeftRight" Then return new FPoly_LeftRight
if algorithmName = "FPoly_Perpendiculars" Then return new FPoly_Perpendiculars
if algorithmName = "FPoly_PerpendicularsImage" Then return new FPoly_PerpendicularsImage
if algorithmName = "FPoly_PerpendicularsTest" Then return new FPoly_PerpendicularsTest
if algorithmName = "FPoly_Plot" Then return new FPoly_Plot
if algorithmName = "FPoly_PlotWeighted" Then return new FPoly_PlotWeighted
if algorithmName = "FPoly_PointCloud" Then return new FPoly_PointCloud
if algorithmName = "FPoly_ResyncCheck" Then return new FPoly_ResyncCheck
if algorithmName = "FPoly_RotatePoints" Then return new FPoly_RotatePoints
if algorithmName = "FPoly_Sides" Then return new FPoly_Sides
if algorithmName = "FPoly_Stablizer" Then return new FPoly_Stablizer
if algorithmName = "FPoly_StartPoints" Then return new FPoly_StartPoints
if algorithmName = "FPoly_TopFeatures" Then return new FPoly_TopFeatures
if algorithmName = "FPoly_Triangle" Then return new FPoly_Triangle
if algorithmName = "FPoly_WarpAffineImage" Then return new FPoly_WarpAffineImage
if algorithmName = "FPoly_WarpAffinePoly" Then return new FPoly_WarpAffinePoly
if algorithmName = "Fractal_Dimension" Then return new Fractal_Dimension
if algorithmName = "Fractal_Julia" Then return new Fractal_Julia
if algorithmName = "Fractal_Mandelbrot" Then return new Fractal_Mandelbrot
if algorithmName = "Fractal_MandelbrotZoom" Then return new Fractal_MandelbrotZoom
if algorithmName = "Fractal_MandelbrotZoomColor" Then return new Fractal_MandelbrotZoomColor
if algorithmName = "FrameRate_Basics" Then return new FrameRate_Basics
if algorithmName = "FrameRate_BasicsGray" Then return new FrameRate_BasicsGray
if algorithmName = "FREAK_Basics" Then return new FREAK_Basics
if algorithmName = "Fuzzy_Basics" Then return new Fuzzy_Basics
if algorithmName = "Fuzzy_ContoursDepth" Then return new Fuzzy_ContoursDepth
if algorithmName = "Fuzzy_Filter" Then return new Fuzzy_Filter
if algorithmName = "Fuzzy_NeighborProof" Then return new Fuzzy_NeighborProof
if algorithmName = "Fuzzy_TrackerDepth" Then return new Fuzzy_TrackerDepth
if algorithmName = "Fuzzy_TrackerDepthClick" Then return new Fuzzy_TrackerDepthClick
if algorithmName = "Gabor_Basics" Then return new Gabor_Basics
if algorithmName = "Gabor_Basics_MT" Then return new Gabor_Basics_MT
if algorithmName = "GeneticDrawing_Basics" Then return new GeneticDrawing_Basics
if algorithmName = "GeneticDrawing_Color" Then return new GeneticDrawing_Color
if algorithmName = "GeneticDrawing_Photo" Then return new GeneticDrawing_Photo
if algorithmName = "Gif_Basics" Then return new Gif_Basics
if algorithmName = "Gif_OpenCVB" Then return new Gif_OpenCVB
if algorithmName = "Gif_OpenGL" Then return new Gif_OpenGL
if algorithmName = "Gif_OpenGLwithColor" Then return new Gif_OpenGLwithColor
if algorithmName = "GrabCut_Basics" Then return new GrabCut_Basics
if algorithmName = "GrabCut_FineTune" Then return new GrabCut_FineTune
if algorithmName = "GrabCut_ImageMask" Then return new GrabCut_ImageMask
if algorithmName = "GrabCut_ImageRect" Then return new GrabCut_ImageRect
if algorithmName = "Gradient_Basics" Then return new Gradient_Basics
if algorithmName = "Gradient_CartToPolar" Then return new Gradient_CartToPolar
if algorithmName = "Gradient_Color" Then return new Gradient_Color
if algorithmName = "Gradient_Depth" Then return new Gradient_Depth
if algorithmName = "Grid_Basics" Then return new Grid_Basics
if algorithmName = "Grid_BasicsTest" Then return new Grid_BasicsTest
if algorithmName = "Grid_FPS" Then return new Grid_FPS
if algorithmName = "Grid_List" Then return new Grid_List
if algorithmName = "Grid_Neighbors" Then return new Grid_Neighbors
if algorithmName = "Grid_Rectangles" Then return new Grid_Rectangles
if algorithmName = "Grid_Special" Then return new Grid_Special
if algorithmName = "Grid_TrackCenter" Then return new Grid_TrackCenter
if algorithmName = "Guess_Depth_CPP" Then return new Guess_Depth_CPP
if algorithmName = "Guess_ImageEdges_CPP" Then return new Guess_ImageEdges_CPP
if algorithmName = "GuidedBP_Basics" Then return new GuidedBP_Basics
if algorithmName = "GuidedBP_CellHistograms" Then return new GuidedBP_CellHistograms
if algorithmName = "GuidedBP_Cells" Then return new GuidedBP_Cells
if algorithmName = "GuidedBP_Depth" Then return new GuidedBP_Depth
if algorithmName = "GuidedBP_History" Then return new GuidedBP_History
if algorithmName = "GuidedBP_HotPoints" Then return new GuidedBP_HotPoints
if algorithmName = "GuidedBP_HotPointsKNN" Then return new GuidedBP_HotPointsKNN
if algorithmName = "GuidedBP_Hulls" Then return new GuidedBP_Hulls
if algorithmName = "GuidedBP_kSide" Then return new GuidedBP_kSide
if algorithmName = "GuidedBP_kTop" Then return new GuidedBP_kTop
if algorithmName = "GuidedBP_kTopSide" Then return new GuidedBP_kTopSide
if algorithmName = "GuidedBP_Objects" Then return new GuidedBP_Objects
if algorithmName = "GuidedBP_ObjectStats" Then return new GuidedBP_ObjectStats
if algorithmName = "GuidedBP_PlanesPlot" Then return new GuidedBP_PlanesPlot
if algorithmName = "GuidedBP_Points" Then return new GuidedBP_Points
if algorithmName = "HeatMap_Basics" Then return new HeatMap_Basics
if algorithmName = "HeatMap_Grid" Then return new HeatMap_Grid
if algorithmName = "HeatMap_Hotspots" Then return new HeatMap_Hotspots
if algorithmName = "HeatMap_NotHotSpots" Then return new HeatMap_NotHotSpots
if algorithmName = "Hist3D_Basics" Then return new Hist3D_Basics
if algorithmName = "Hist3D_BuildHistogram" Then return new Hist3D_BuildHistogram
if algorithmName = "Hist3D_DepthWithMask" Then return new Hist3D_DepthWithMask
if algorithmName = "Hist3D_Pixel" Then return new Hist3D_Pixel
if algorithmName = "Hist3D_PixelCells" Then return new Hist3D_PixelCells
if algorithmName = "Hist3D_PixelClassify" Then return new Hist3D_PixelClassify
if algorithmName = "Hist3D_PixelDiffMask" Then return new Hist3D_PixelDiffMask
if algorithmName = "Hist3D_RedCloud" Then return new Hist3D_RedCloud
if algorithmName = "Hist3D_RedMin" Then return new Hist3D_RedMin
if algorithmName = "Hist3D_RedMinGrid" Then return new Hist3D_RedMinGrid
if algorithmName = "Hist3Dcloud_Basics" Then return new Hist3Dcloud_Basics
if algorithmName = "Hist3Dcloud_BP_Filter" Then return new Hist3Dcloud_BP_Filter
if algorithmName = "Hist3Dcloud_DepthSplit" Then return new Hist3Dcloud_DepthSplit
if algorithmName = "Hist3Dcloud_Highlights" Then return new Hist3Dcloud_Highlights
if algorithmName = "Hist3Dcloud_PlotHist1D" Then return new Hist3Dcloud_PlotHist1D
if algorithmName = "Hist3Dcolor_Basics" Then return new Hist3Dcolor_Basics
if algorithmName = "Hist3Dcolor_Basics_CPP" Then return new Hist3Dcolor_Basics_CPP
if algorithmName = "Hist3Dcolor_Diff" Then return new Hist3Dcolor_Diff
if algorithmName = "Hist3Dcolor_PlotHist1D" Then return new Hist3Dcolor_PlotHist1D
if algorithmName = "Hist3Dcolor_Reduction" Then return new Hist3Dcolor_Reduction
if algorithmName = "Hist3Dcolor_Select" Then return new Hist3Dcolor_Select
if algorithmName = "Hist3Dcolor_TopXColors" Then return new Hist3Dcolor_TopXColors
if algorithmName = "Hist3Dcolor_UniqueRGBPixels" Then return new Hist3Dcolor_UniqueRGBPixels
if algorithmName = "Hist3Dcolor_Vector" Then return new Hist3Dcolor_Vector
if algorithmName = "Hist3Dcolor_ZeroGroups" Then return new Hist3Dcolor_ZeroGroups
if algorithmName = "Histogram_Basics" Then return new Histogram_Basics
if algorithmName = "Histogram_Byte_CPP" Then return new Histogram_Byte_CPP
if algorithmName = "Histogram_Cell" Then return new Histogram_Cell
if algorithmName = "Histogram_Color" Then return new Histogram_Color
if algorithmName = "Histogram_ColorsAndGray" Then return new Histogram_ColorsAndGray
if algorithmName = "Histogram_CompareEMD_hsv" Then return new Histogram_CompareEMD_hsv
if algorithmName = "Histogram_CompareGray" Then return new Histogram_CompareGray
if algorithmName = "Histogram_CompareNumber" Then return new Histogram_CompareNumber
if algorithmName = "Histogram_ComparePlot" Then return new Histogram_ComparePlot
if algorithmName = "Histogram_Depth" Then return new Histogram_Depth
if algorithmName = "Histogram_EqualizeColor" Then return new Histogram_EqualizeColor
if algorithmName = "Histogram_EqualizeGray" Then return new Histogram_EqualizeGray
if algorithmName = "Histogram_FlatSurfaces" Then return new Histogram_FlatSurfaces
if algorithmName = "Histogram_Frustrum" Then return new Histogram_Frustrum
if algorithmName = "Histogram_Gotcha" Then return new Histogram_Gotcha
if algorithmName = "Histogram_Gotcha2D" Then return new Histogram_Gotcha2D
if algorithmName = "Histogram_GotchaFixed_CPP" Then return new Histogram_GotchaFixed_CPP
if algorithmName = "Histogram_Graph" Then return new Histogram_Graph
if algorithmName = "Histogram_Gray" Then return new Histogram_Gray
if algorithmName = "Histogram_Kalman" Then return new Histogram_Kalman
if algorithmName = "Histogram_KalmanAuto" Then return new Histogram_KalmanAuto
if algorithmName = "Histogram_Lab" Then return new Histogram_Lab
if algorithmName = "Histogram_NormalizeGray" Then return new Histogram_NormalizeGray
if algorithmName = "Histogram_PeakFinder" Then return new Histogram_PeakFinder
if algorithmName = "Histogram_PeakMax" Then return new Histogram_PeakMax
if algorithmName = "Histogram_Peaks" Then return new Histogram_Peaks
if algorithmName = "Histogram_PeaksDepth" Then return new Histogram_PeaksDepth
if algorithmName = "Histogram_PeaksRGB" Then return new Histogram_PeaksRGB
if algorithmName = "Histogram_PointCloud" Then return new Histogram_PointCloud
if algorithmName = "Histogram_PointCloudXYZ" Then return new Histogram_PointCloudXYZ
if algorithmName = "Histogram_ShapeSide" Then return new Histogram_ShapeSide
if algorithmName = "Histogram_ShapeTop" Then return new Histogram_ShapeTop
if algorithmName = "Histogram_Simple" Then return new Histogram_Simple
if algorithmName = "Histogram_SLR" Then return new Histogram_SLR
if algorithmName = "Histogram_Xdimension" Then return new Histogram_Xdimension
if algorithmName = "Histogram_Ydimension" Then return new Histogram_Ydimension
if algorithmName = "Histogram_Zdimension" Then return new Histogram_Zdimension
if algorithmName = "Histogram2D_Basics" Then return new Histogram2D_Basics
if algorithmName = "Histogram2D_BGR" Then return new Histogram2D_BGR
if algorithmName = "Histogram2D_Cloud" Then return new Histogram2D_Cloud
if algorithmName = "Histogram2D_Depth" Then return new Histogram2D_Depth
if algorithmName = "Histogram2D_HSV" Then return new Histogram2D_HSV
if algorithmName = "Histogram2D_PlotHistogram1D" Then return new Histogram2D_PlotHistogram1D
if algorithmName = "Histogram2D_Side" Then return new Histogram2D_Side
if algorithmName = "Histogram2D_Top" Then return new Histogram2D_Top
if algorithmName = "Histogram2D_Zoom" Then return new Histogram2D_Zoom
if algorithmName = "History_Basics" Then return new History_Basics
if algorithmName = "History_BasicsDiff" Then return new History_BasicsDiff
if algorithmName = "History_BasicsNoSaturation" Then return new History_BasicsNoSaturation
if algorithmName = "History_Cloud" Then return new History_Cloud
if algorithmName = "History_MaskCopy" Then return new History_MaskCopy
if algorithmName = "History_MaskCopy8U" Then return new History_MaskCopy8U
if algorithmName = "HistPeak2D_Basics" Then return new HistPeak2D_Basics
if algorithmName = "HistPeak2D_BGR" Then return new HistPeak2D_BGR
if algorithmName = "HistPeak2D_Edges" Then return new HistPeak2D_Edges
if algorithmName = "HistPeak2D_HotSide" Then return new HistPeak2D_HotSide
if algorithmName = "HistPeak2D_HotTop" Then return new HistPeak2D_HotTop
if algorithmName = "HistPeak2D_HSV" Then return new HistPeak2D_HSV
if algorithmName = "HistPeak2D_NotHotTop" Then return new HistPeak2D_NotHotTop
if algorithmName = "HistPeak2D_RGB" Then return new HistPeak2D_RGB
if algorithmName = "HistPeak2D_TopAndSide" Then return new HistPeak2D_TopAndSide
if algorithmName = "HistValley_Basics" Then return new HistValley_Basics
if algorithmName = "HistValley_BasicsOptionAuto" Then return new HistValley_BasicsOptionAuto
if algorithmName = "HistValley_Colors" Then return new HistValley_Colors
if algorithmName = "HistValley_Depth" Then return new HistValley_Depth
if algorithmName = "HistValley_DepthOld" Then return new HistValley_DepthOld
if algorithmName = "HistValley_Diff" Then return new HistValley_Diff
if algorithmName = "HistValley_EdgeDraw" Then return new HistValley_EdgeDraw
if algorithmName = "HistValley_Peaks" Then return new HistValley_Peaks
if algorithmName = "HistValley_Simple" Then return new HistValley_Simple
if algorithmName = "HistValley_Test" Then return new HistValley_Test
if algorithmName = "HMM_Example_CPP" Then return new HMM_Example_CPP
if algorithmName = "HOG_Basics" Then return new HOG_Basics
if algorithmName = "Homography_Basics" Then return new Homography_Basics
if algorithmName = "Homography_FPoly" Then return new Homography_FPoly
if algorithmName = "Hough_Basics" Then return new Hough_Basics
if algorithmName = "Hough_Circles" Then return new Hough_Circles
if algorithmName = "Hough_Featureless" Then return new Hough_Featureless
if algorithmName = "Hough_FeatureLessTopX" Then return new Hough_FeatureLessTopX
if algorithmName = "Hough_LaneFinder" Then return new Hough_LaneFinder
if algorithmName = "Hough_Lines_MT" Then return new Hough_Lines_MT
if algorithmName = "Hough_Sudoku" Then return new Hough_Sudoku
if algorithmName = "Hull_Basics" Then return new Hull_Basics
if algorithmName = "Hull_Contour" Then return new Hull_Contour
if algorithmName = "Image_Basics" Then return new Image_Basics
if algorithmName = "Image_CellStats" Then return new Image_CellStats
if algorithmName = "Image_MSER" Then return new Image_MSER
if algorithmName = "Image_RedCloudColor" Then return new Image_RedCloudColor
if algorithmName = "Image_RedCloudColorSeries" Then return new Image_RedCloudColorSeries
if algorithmName = "Image_Series" Then return new Image_Series
if algorithmName = "ImShow_Basics" Then return new ImShow_Basics
if algorithmName = "ImShow_CV32FC3" Then return new ImShow_CV32FC3
if algorithmName = "ImShow_WaitKey" Then return new ImShow_WaitKey
if algorithmName = "IMU_AllMethods" Then return new IMU_AllMethods
if algorithmName = "IMU_Average" Then return new IMU_Average
if algorithmName = "IMU_Basics" Then return new IMU_Basics
if algorithmName = "IMU_BasicsWithOptions" Then return new IMU_BasicsWithOptions
if algorithmName = "IMU_GMatrix" Then return new IMU_GMatrix
if algorithmName = "IMU_GMatrixWithOptions" Then return new IMU_GMatrixWithOptions
if algorithmName = "IMU_IscameraStable" Then return new IMU_IscameraStable
if algorithmName = "IMU_Kalman" Then return new IMU_Kalman
if algorithmName = "IMU_Lines" Then return new IMU_Lines
if algorithmName = "IMU_Plot" Then return new IMU_Plot
if algorithmName = "IMU_PlotAcceleration" Then return new IMU_PlotAcceleration
if algorithmName = "IMU_PlotAngularVelocity" Then return new IMU_PlotAngularVelocity
if algorithmName = "IMU_PlotCompareIMU" Then return new IMU_PlotCompareIMU
if algorithmName = "IMU_PlotGravityAngles" Then return new IMU_PlotGravityAngles
if algorithmName = "IMU_PlotHostFrameScalar" Then return new IMU_PlotHostFrameScalar
if algorithmName = "IMU_PlotHostFrameTimes" Then return new IMU_PlotHostFrameTimes
if algorithmName = "IMU_PlotIMUFrameTime" Then return new IMU_PlotIMUFrameTime
if algorithmName = "IMU_PlotTotalDelay" Then return new IMU_PlotTotalDelay
if algorithmName = "IMU_Stabilize" Then return new IMU_Stabilize
if algorithmName = "IMU_VelocityPlot" Then return new IMU_VelocityPlot
if algorithmName = "IMU_VerticalAngles" Then return new IMU_VerticalAngles
if algorithmName = "IMU_VerticalVerify" Then return new IMU_VerticalVerify
if algorithmName = "InPaint_Basics" Then return new InPaint_Basics
if algorithmName = "InPaint_Depth" Then return new InPaint_Depth
if algorithmName = "InPaint_Noise" Then return new InPaint_Noise
if algorithmName = "Interpolate_Basics" Then return new Interpolate_Basics
if algorithmName = "Interpolate_Kalman" Then return new Interpolate_Kalman
if algorithmName = "Interpolate_Lines" Then return new Interpolate_Lines
if algorithmName = "Kalman_Basics" Then return new Kalman_Basics
if algorithmName = "Kalman_Compare" Then return new Kalman_Compare
if algorithmName = "Kalman_CVMat" Then return new Kalman_CVMat
if algorithmName = "Kalman_Depth32f" Then return new Kalman_Depth32f
if algorithmName = "Kalman_DepthSmall" Then return new Kalman_DepthSmall
if algorithmName = "Kalman_ImageSmall" Then return new Kalman_ImageSmall
if algorithmName = "Kalman_MousePredict" Then return new Kalman_MousePredict
if algorithmName = "Kalman_RotatingPoint" Then return new Kalman_RotatingPoint
if algorithmName = "Kalman_Single" Then return new Kalman_Single
if algorithmName = "Kalman_VB" Then return new Kalman_VB
if algorithmName = "Kalman_VB_Basics" Then return new Kalman_VB_Basics
if algorithmName = "KAZE_KeypointsAKAZE_CS" Then return new KAZE_KeypointsAKAZE_CS
if algorithmName = "KAZE_KeypointsKAZE_CS" Then return new KAZE_KeypointsKAZE_CS
if algorithmName = "KAZE_LeftAligned_CS" Then return new KAZE_LeftAligned_CS
if algorithmName = "KAZE_Match_CS" Then return new KAZE_Match_CS
if algorithmName = "KAZE_Sample_CS" Then return new KAZE_Sample_CS
if algorithmName = "Keyboard_Basics" Then return new Keyboard_Basics
if algorithmName = "KLT_Basics" Then return new KLT_Basics
if algorithmName = "KLT_OpticalFlow" Then return new KLT_OpticalFlow
if algorithmName = "KMeans_Basics" Then return new KMeans_Basics
if algorithmName = "KMeans_CompareMulti" Then return new KMeans_CompareMulti
if algorithmName = "KMeans_CustomData" Then return new KMeans_CustomData
if algorithmName = "KMeans_Depth" Then return new KMeans_Depth
if algorithmName = "KMeans_DepthPlusGray" Then return new KMeans_DepthPlusGray
if algorithmName = "KMeans_Dimensions" Then return new KMeans_Dimensions
if algorithmName = "KMeans_Edges" Then return new KMeans_Edges
if algorithmName = "KMeans_Fuzzy" Then return new KMeans_Fuzzy
if algorithmName = "KMeans_Image" Then return new KMeans_Image
if algorithmName = "KMeans_k2_to_k8" Then return new KMeans_k2_to_k8
if algorithmName = "KMeans_MultiChannel" Then return new KMeans_MultiChannel
if algorithmName = "KMeans_MultiGaussian_CPP" Then return new KMeans_MultiGaussian_CPP
if algorithmName = "KMeans_SimKColor" Then return new KMeans_SimKColor
if algorithmName = "KMeans_SimKDepth" Then return new KMeans_SimKDepth
if algorithmName = "KMeans_Simple_CPP" Then return new KMeans_Simple_CPP
if algorithmName = "KMeans_TierCount" Then return new KMeans_TierCount
if algorithmName = "KMeans_Valleys" Then return new KMeans_Valleys
if algorithmName = "KNN_Basics" Then return new KNN_Basics
if algorithmName = "KNN_Basics2DTest" Then return new KNN_Basics2DTest
if algorithmName = "KNN_Basics3D" Then return new KNN_Basics3D
if algorithmName = "KNN_Basics3DTest" Then return new KNN_Basics3DTest
if algorithmName = "KNN_Basics4D" Then return new KNN_Basics4D
if algorithmName = "KNN_Basics4DTest" Then return new KNN_Basics4DTest
if algorithmName = "KNN_BasicsN" Then return new KNN_BasicsN
if algorithmName = "KNN_BasicsNTest" Then return new KNN_BasicsNTest
if algorithmName = "KNN_ClosestLine" Then return new KNN_ClosestLine
if algorithmName = "KNN_ClosestTracker" Then return new KNN_ClosestTracker
if algorithmName = "KNN_ClosestVertical" Then return new KNN_ClosestVertical
if algorithmName = "KNN_Emax" Then return new KNN_Emax
if algorithmName = "KNN_Farthest" Then return new KNN_Farthest
if algorithmName = "KNN_Input" Then return new KNN_Input
if algorithmName = "KNN_Lossy" Then return new KNN_Lossy
if algorithmName = "KNN_LossyOld" Then return new KNN_LossyOld
if algorithmName = "KNN_TrackEach" Then return new KNN_TrackEach
if algorithmName = "KNN_TrackMean" Then return new KNN_TrackMean
if algorithmName = "LaneFinder_Basics" Then return new LaneFinder_Basics
if algorithmName = "LaneFinder_Edges" Then return new LaneFinder_Edges
if algorithmName = "LaneFinder_HLSColor" Then return new LaneFinder_HLSColor
if algorithmName = "LaneFinder_ROI" Then return new LaneFinder_ROI
if algorithmName = "LaneFinder_SlopeIntercept" Then return new LaneFinder_SlopeIntercept
if algorithmName = "LaneFinder_Videos" Then return new LaneFinder_Videos
if algorithmName = "Laplacian_Basics" Then return new Laplacian_Basics
if algorithmName = "Laplacian_Blur" Then return new Laplacian_Blur
if algorithmName = "Laplacian_PyramidFilter" Then return new Laplacian_PyramidFilter
if algorithmName = "LDA_Test" Then return new LDA_Test
if algorithmName = "LeftRight_Basics" Then return new LeftRight_Basics
if algorithmName = "LeftRight_BRISK" Then return new LeftRight_BRISK
if algorithmName = "LeftRight_CompareRaw" Then return new LeftRight_CompareRaw
if algorithmName = "LeftRight_Edges" Then return new LeftRight_Edges
if algorithmName = "LeftRight_GoodFeatures" Then return new LeftRight_GoodFeatures
if algorithmName = "LeftRight_Lines" Then return new LeftRight_Lines
if algorithmName = "LeftRight_Markers" Then return new LeftRight_Markers
if algorithmName = "LeftRight_Palettized" Then return new LeftRight_Palettized
if algorithmName = "LeftRight_RedCloudBoth" Then return new LeftRight_RedCloudBoth
if algorithmName = "LeftRight_RedCloudLeft" Then return new LeftRight_RedCloudLeft
if algorithmName = "LeftRight_RedCloudRight" Then return new LeftRight_RedCloudRight
if algorithmName = "LeftRight_Reduction" Then return new LeftRight_Reduction
if algorithmName = "Line_Basics" Then return new Line_Basics
if algorithmName = "Line_Canny" Then return new Line_Canny
if algorithmName = "Line_Cells" Then return new Line_Cells
if algorithmName = "Line_CellsVertHoriz" Then return new Line_CellsVertHoriz
if algorithmName = "Line_ColorClass" Then return new Line_ColorClass
if algorithmName = "Line_DisplayInfo" Then return new Line_DisplayInfo
if algorithmName = "Line_GCloud" Then return new Line_GCloud
if algorithmName = "Line_IMUVerticals" Then return new Line_IMUVerticals
if algorithmName = "Line_IMUVerts" Then return new Line_IMUVerts
if algorithmName = "Line_InDepthAndBGR" Then return new Line_InDepthAndBGR
if algorithmName = "Line_Intercepts" Then return new Line_Intercepts
if algorithmName = "Line_InterceptsUI" Then return new Line_InterceptsUI
if algorithmName = "Line_Intersection" Then return new Line_Intersection
if algorithmName = "Line_KMeans" Then return new Line_KMeans
if algorithmName = "Line_LeftRightImages" Then return new Line_LeftRightImages
if algorithmName = "Line_LUT" Then return new Line_LUT
if algorithmName = "Line_Movement" Then return new Line_Movement
if algorithmName = "Line_Nearest" Then return new Line_Nearest
if algorithmName = "Line_Perpendicular" Then return new Line_Perpendicular
if algorithmName = "Line_PointSlope" Then return new Line_PointSlope
if algorithmName = "Line_Reduction" Then return new Line_Reduction
if algorithmName = "Line_RegionsVB" Then return new Line_RegionsVB
if algorithmName = "Line_TimeView" Then return new Line_TimeView
if algorithmName = "Line_TimeViewLines" Then return new Line_TimeViewLines
if algorithmName = "Line_Verify" Then return new Line_Verify
if algorithmName = "Line_ViewSide" Then return new Line_ViewSide
if algorithmName = "Line_ViewTop" Then return new Line_ViewTop
if algorithmName = "Line3D_CandidatesAll" Then return new Line3D_CandidatesAll
if algorithmName = "Line3D_CandidatesFirstLast" Then return new Line3D_CandidatesFirstLast
if algorithmName = "Line3D_Checks" Then return new Line3D_Checks
if algorithmName = "Line3D_Draw" Then return new Line3D_Draw
if algorithmName = "LongLine_Basics" Then return new LongLine_Basics
if algorithmName = "LongLine_Coincident" Then return new LongLine_Coincident
if algorithmName = "LongLine_Consistent" Then return new LongLine_Consistent
if algorithmName = "LongLine_Depth" Then return new LongLine_Depth
if algorithmName = "LongLine_Extend" Then return new LongLine_Extend
if algorithmName = "LongLine_ExtendAll" Then return new LongLine_ExtendAll
if algorithmName = "LongLine_ExtendParallel" Then return new LongLine_ExtendParallel
if algorithmName = "LongLine_ExtendTest" Then return new LongLine_ExtendTest
if algorithmName = "LongLine_Match" Then return new LongLine_Match
if algorithmName = "LongLine_Point" Then return new LongLine_Point
if algorithmName = "LUT_Basics" Then return new LUT_Basics
if algorithmName = "LUT_CustomColor" Then return new LUT_CustomColor
if algorithmName = "LUT_Depth32f" Then return new LUT_Depth32f
if algorithmName = "LUT_Equalized" Then return new LUT_Equalized
if algorithmName = "LUT_Reduction" Then return new LUT_Reduction
if algorithmName = "LUT_RGBDepth" Then return new LUT_RGBDepth
if algorithmName = "LUT_Sliders" Then return new LUT_Sliders
if algorithmName = "LUT_Watershed" Then return new LUT_Watershed
if algorithmName = "Magnify_Basics" Then return new Magnify_Basics
if algorithmName = "Magnify_Example" Then return new Magnify_Example
if algorithmName = "Mat_2to1" Then return new Mat_2to1
if algorithmName = "Mat_4Click" Then return new Mat_4Click
if algorithmName = "Mat_4to1" Then return new Mat_4to1
if algorithmName = "Mat_Inverse" Then return new Mat_Inverse
if algorithmName = "Mat_Managed" Then return new Mat_Managed
if algorithmName = "Mat_MatToPoint" Then return new Mat_MatToPoint
if algorithmName = "Mat_MultiplyReview" Then return new Mat_MultiplyReview
if algorithmName = "Mat_PointToMat" Then return new Mat_PointToMat
if algorithmName = "Mat_Repeat" Then return new Mat_Repeat
if algorithmName = "Mat_RowColRange" Then return new Mat_RowColRange
if algorithmName = "Mat_ToList" Then return new Mat_ToList
if algorithmName = "Mat_Transpose" Then return new Mat_Transpose
if algorithmName = "Mat_Tricks" Then return new Mat_Tricks
if algorithmName = "Match_Basics" Then return new Match_Basics
if algorithmName = "Match_BasicsTest" Then return new Match_BasicsTest
if algorithmName = "Match_BestEntropy" Then return new Match_BestEntropy
if algorithmName = "Match_DrawRect" Then return new Match_DrawRect
if algorithmName = "Match_FeatureLine" Then return new Match_FeatureLine
if algorithmName = "Match_GoodFeatureKNN" Then return new Match_GoodFeatureKNN
if algorithmName = "Match_LinePairTest" Then return new Match_LinePairTest
if algorithmName = "Match_Lines" Then return new Match_Lines
if algorithmName = "Match_Motion" Then return new Match_Motion
if algorithmName = "Match_Point" Then return new Match_Point
if algorithmName = "Match_Points" Then return new Match_Points
if algorithmName = "Match_PointSlope" Then return new Match_PointSlope
if algorithmName = "Match_RandomTest" Then return new Match_RandomTest
if algorithmName = "Match_tCell" Then return new Match_tCell
if algorithmName = "Match_TraceRedC" Then return new Match_TraceRedC
if algorithmName = "MatchShapes_Basics" Then return new MatchShapes_Basics
if algorithmName = "MatchShapes_Contours" Then return new MatchShapes_Contours
if algorithmName = "MatchShapes_Hulls" Then return new MatchShapes_Hulls
if algorithmName = "MatchShapes_LeftRight" Then return new MatchShapes_LeftRight
if algorithmName = "MatchShapes_Nearby" Then return new MatchShapes_Nearby
if algorithmName = "MatchShapes_NearbyHull" Then return new MatchShapes_NearbyHull
if algorithmName = "Math_DepthMeanStdev" Then return new Math_DepthMeanStdev
if algorithmName = "Math_ImageAverage" Then return new Math_ImageAverage
if algorithmName = "Math_ImageMaskedAverage" Then return new Math_ImageMaskedAverage
if algorithmName = "Math_Median_CDF" Then return new Math_Median_CDF
if algorithmName = "Math_ParallelTest" Then return new Math_ParallelTest
if algorithmName = "Math_RGBCorrelation" Then return new Math_RGBCorrelation
if algorithmName = "Math_Stdev" Then return new Math_Stdev
if algorithmName = "Math_StdevBoundary" Then return new Math_StdevBoundary
if algorithmName = "Math_Subtract" Then return new Math_Subtract
if algorithmName = "Math_Template" Then return new Math_Template
if algorithmName = "MatrixInverse_Basics_CS" Then return new MatrixInverse_Basics_CS
if algorithmName = "MatrixInverse_OpenCV" Then return new MatrixInverse_OpenCV
if algorithmName = "MeanShift_Basics" Then return new MeanShift_Basics
if algorithmName = "MeanShift_Depth" Then return new MeanShift_Depth
if algorithmName = "MeanSubtraction_Basics" Then return new MeanSubtraction_Basics
if algorithmName = "Mesh_Agast" Then return new Mesh_Agast
if algorithmName = "Mesh_Basics" Then return new Mesh_Basics
if algorithmName = "Mesh_Features" Then return new Mesh_Features
if algorithmName = "MFI_Basics" Then return new MFI_Basics
if algorithmName = "MFI_BasicsNew" Then return new MFI_BasicsNew
if algorithmName = "MFI_BasicsOld" Then return new MFI_BasicsOld
if algorithmName = "MFI_BinarizedSobel" Then return new MFI_BinarizedSobel
if algorithmName = "MFI_Depth" Then return new MFI_Depth
if algorithmName = "MFI_FloodFill" Then return new MFI_FloodFill
if algorithmName = "MFI_PointCloud" Then return new MFI_PointCloud
if algorithmName = "MFI_Sobel" Then return new MFI_Sobel
if algorithmName = "MiniCloud_Basics" Then return new MiniCloud_Basics
if algorithmName = "MiniCloud_Rotate" Then return new MiniCloud_Rotate
if algorithmName = "MiniCloud_RotateAngle" Then return new MiniCloud_RotateAngle
if algorithmName = "MiniCloud_RotateSinglePass" Then return new MiniCloud_RotateSinglePass
if algorithmName = "ML_Basics" Then return new ML_Basics
if algorithmName = "ML_DepthFromColor" Then return new ML_DepthFromColor
if algorithmName = "ML_DepthFromXYColor" Then return new ML_DepthFromXYColor
if algorithmName = "ML_FillRGBDepth_MT" Then return new ML_FillRGBDepth_MT
if algorithmName = "ML_RemoveDups_CPP" Then return new ML_RemoveDups_CPP
if algorithmName = "Model_Basics" Then return new Model_Basics
if algorithmName = "Model_CellZoom" Then return new Model_CellZoom
if algorithmName = "Model_FlatSurfaces" Then return new Model_FlatSurfaces
if algorithmName = "Model_OpenGL_Sliders" Then return new Model_OpenGL_Sliders
if algorithmName = "Model_RedCloud" Then return new Model_RedCloud
if algorithmName = "Moments_Basics" Then return new Moments_Basics
if algorithmName = "Moments_CentroidKalman" Then return new Moments_CentroidKalman
if algorithmName = "Motion_Basics" Then return new Motion_Basics
if algorithmName = "Motion_BasicsTest" Then return new Motion_BasicsTest
if algorithmName = "Motion_CCmerge" Then return new Motion_CCmerge
if algorithmName = "Motion_Contours" Then return new Motion_Contours
if algorithmName = "Motion_Contours2" Then return new Motion_Contours2
if algorithmName = "Motion_Core" Then return new Motion_Core
if algorithmName = "Motion_DepthReconstructed" Then return new Motion_DepthReconstructed
if algorithmName = "Motion_History" Then return new Motion_History
if algorithmName = "Motion_History2" Then return new Motion_History2
if algorithmName = "Motion_MinRect" Then return new Motion_MinRect
if algorithmName = "Motion_PixelDiff" Then return new Motion_PixelDiff
if algorithmName = "Motion_Rect" Then return new Motion_Rect
if algorithmName = "Motion_RectAlt" Then return new Motion_RectAlt
if algorithmName = "Motion_ThruCorrelation" Then return new Motion_ThruCorrelation
if algorithmName = "MotionBlur_Basics" Then return new MotionBlur_Basics
if algorithmName = "MotionBlur_Deblur" Then return new MotionBlur_Deblur
if algorithmName = "Mouse_Basics" Then return new Mouse_Basics
if algorithmName = "Mouse_LeftClickZoom" Then return new Mouse_LeftClickZoom
if algorithmName = "MSER_Basics" Then return new MSER_Basics
if algorithmName = "MSER_CPP" Then return new MSER_CPP
if algorithmName = "MSER_Detect" Then return new MSER_Detect
if algorithmName = "MSER_Grayscale" Then return new MSER_Grayscale
if algorithmName = "MSER_Hulls" Then return new MSER_Hulls
if algorithmName = "MSER_Left" Then return new MSER_Left
if algorithmName = "MSER_LeftRight" Then return new MSER_LeftRight
if algorithmName = "MSER_Mask_CPP" Then return new MSER_Mask_CPP
if algorithmName = "MSER_RedCloud" Then return new MSER_RedCloud
if algorithmName = "MSER_ReducedRGB" Then return new MSER_ReducedRGB
if algorithmName = "MSER_RegionLeft" Then return new MSER_RegionLeft
if algorithmName = "MSER_RegionLeftRight" Then return new MSER_RegionLeftRight
if algorithmName = "MSER_RegionRight" Then return new MSER_RegionRight
if algorithmName = "MSER_Regions" Then return new MSER_Regions
if algorithmName = "MSER_Right" Then return new MSER_Right
if algorithmName = "MSER_ROI" Then return new MSER_ROI
if algorithmName = "MSER_SyntheticInput" Then return new MSER_SyntheticInput
if algorithmName = "MSER_TestExample" Then return new MSER_TestExample
if algorithmName = "MSER_TestSynthetic" Then return new MSER_TestSynthetic
if algorithmName = "MultiDimensionScaling_Cities" Then return new MultiDimensionScaling_Cities
if algorithmName = "Neighbor_Basics" Then return new Neighbor_Basics
if algorithmName = "Neighbor_BasicsTest" Then return new Neighbor_BasicsTest
if algorithmName = "Neighbor_ColorOnly" Then return new Neighbor_ColorOnly
if algorithmName = "Neighbor_Corners" Then return new Neighbor_Corners
if algorithmName = "Neighbor_Flood" Then return new Neighbor_Flood
if algorithmName = "Neighbor_ImageEdges" Then return new Neighbor_ImageEdges
if algorithmName = "Neighbor_StableMax" Then return new Neighbor_StableMax
if algorithmName = "OilPaint_Cartoon" Then return new OilPaint_Cartoon
if algorithmName = "OilPaint_Manual" Then return new OilPaint_Manual
if algorithmName = "OilPaint_ManualVB" Then return new OilPaint_ManualVB
if algorithmName = "OilPaint_Pointilism" Then return new OilPaint_Pointilism
if algorithmName = "OpAuto_FloorCeiling" Then return new OpAuto_FloorCeiling
if algorithmName = "OpAuto_MSER" Then return new OpAuto_MSER
if algorithmName = "OpAuto_Peaks2D" Then return new OpAuto_Peaks2D
if algorithmName = "OpAuto_Peaks2DGrid" Then return new OpAuto_Peaks2DGrid
if algorithmName = "OpAuto_PixelDifference" Then return new OpAuto_PixelDifference
if algorithmName = "OpAuto_Valley" Then return new OpAuto_Valley
if algorithmName = "OpAuto_XRange" Then return new OpAuto_XRange
if algorithmName = "OpAuto_YRange" Then return new OpAuto_YRange
if algorithmName = "OpenGL_3D" Then return new OpenGL_3D
if algorithmName = "OpenGL_3DColors" Then return new OpenGL_3DColors
if algorithmName = "OpenGL_3DColorShape" Then return new OpenGL_3DColorShape
if algorithmName = "OpenGL_3Ddepth" Then return new OpenGL_3Ddepth
if algorithmName = "OpenGL_3DRGB" Then return new OpenGL_3DRGB
if algorithmName = "OpenGL_Basics" Then return new OpenGL_Basics
if algorithmName = "OpenGL_BasicsMouse" Then return new OpenGL_BasicsMouse
if algorithmName = "OpenGL_BasicsSliders" Then return new OpenGL_BasicsSliders
if algorithmName = "OpenGL_Bricks" Then return new OpenGL_Bricks
if algorithmName = "OpenGL_CloudHistory" Then return new OpenGL_CloudHistory
if algorithmName = "OpenGL_CloudMisses" Then return new OpenGL_CloudMisses
if algorithmName = "OpenGL_Contours" Then return new OpenGL_Contours
if algorithmName = "OpenGL_Density2D" Then return new OpenGL_Density2D
if algorithmName = "OpenGL_DepthAverage" Then return new OpenGL_DepthAverage
if algorithmName = "OpenGL_DiffDepth" Then return new OpenGL_DiffDepth
if algorithmName = "OpenGL_DrawCube" Then return new OpenGL_DrawCube
if algorithmName = "OpenGL_DrawHull" Then return new OpenGL_DrawHull
if algorithmName = "OpenGL_DrawHulls" Then return new OpenGL_DrawHulls
if algorithmName = "OpenGL_Filtered3D" Then return new OpenGL_Filtered3D
if algorithmName = "OpenGL_FilteredBoth" Then return new OpenGL_FilteredBoth
if algorithmName = "OpenGL_FilteredSideView" Then return new OpenGL_FilteredSideView
if algorithmName = "OpenGL_FilteredTopView" Then return new OpenGL_FilteredTopView
if algorithmName = "OpenGL_FlatCeiling" Then return new OpenGL_FlatCeiling
if algorithmName = "OpenGL_FlatFloor" Then return new OpenGL_FlatFloor
if algorithmName = "OpenGL_FlatStudy1" Then return new OpenGL_FlatStudy1
if algorithmName = "OpenGL_FlatStudy2" Then return new OpenGL_FlatStudy2
if algorithmName = "OpenGL_FlatStudy3" Then return new OpenGL_FlatStudy3
if algorithmName = "OpenGL_FlatSurfaces" Then return new OpenGL_FlatSurfaces
if algorithmName = "OpenGL_FPolyCloud" Then return new OpenGL_FPolyCloud
if algorithmName = "OpenGL_GradientPhase" Then return new OpenGL_GradientPhase
if algorithmName = "OpenGL_GravityAverage" Then return new OpenGL_GravityAverage
if algorithmName = "OpenGL_GravityKalman" Then return new OpenGL_GravityKalman
if algorithmName = "OpenGL_GravityTransform" Then return new OpenGL_GravityTransform
if algorithmName = "OpenGL_KWhere" Then return new OpenGL_KWhere
if algorithmName = "OpenGL_NoSolo" Then return new OpenGL_NoSolo
if algorithmName = "OpenGL_OnlyPlanes" Then return new OpenGL_OnlyPlanes
if algorithmName = "OpenGL_PatchHorizontal" Then return new OpenGL_PatchHorizontal
if algorithmName = "OpenGL_PCLineCandidates" Then return new OpenGL_PCLineCandidates
if algorithmName = "OpenGL_PClinesAll" Then return new OpenGL_PClinesAll
if algorithmName = "OpenGL_PClinesFirstLast" Then return new OpenGL_PClinesFirstLast
if algorithmName = "OpenGL_PCpoints" Then return new OpenGL_PCpoints
if algorithmName = "OpenGL_PCpointsPlane" Then return new OpenGL_PCpointsPlane
if algorithmName = "OpenGL_PeakFlat" Then return new OpenGL_PeakFlat
if algorithmName = "OpenGL_PlaneClusters3D" Then return new OpenGL_PlaneClusters3D
if algorithmName = "OpenGL_Profile" Then return new OpenGL_Profile
if algorithmName = "OpenGL_ProfileSweep" Then return new OpenGL_ProfileSweep
if algorithmName = "OpenGL_Pyramid" Then return new OpenGL_Pyramid
if algorithmName = "OpenGL_QuadHulls" Then return new OpenGL_QuadHulls
if algorithmName = "OpenGL_QuadMinMax" Then return new OpenGL_QuadMinMax
if algorithmName = "OpenGL_QuadSimple" Then return new OpenGL_QuadSimple
if algorithmName = "OpenGL_Rebuilt" Then return new OpenGL_Rebuilt
if algorithmName = "OpenGL_RedCloud" Then return new OpenGL_RedCloud
if algorithmName = "OpenGL_RedCloudCell" Then return new OpenGL_RedCloudCell
if algorithmName = "OpenGL_RedCloudSpectrum" Then return new OpenGL_RedCloudSpectrum
if algorithmName = "OpenGL_RedTrack" Then return new OpenGL_RedTrack
if algorithmName = "OpenGL_ReducedSideView" Then return new OpenGL_ReducedSideView
if algorithmName = "OpenGL_ReducedXYZ" Then return new OpenGL_ReducedXYZ
if algorithmName = "OpenGL_Reduction" Then return new OpenGL_Reduction
if algorithmName = "OpenGL_Sierpinski" Then return new OpenGL_Sierpinski
if algorithmName = "OpenGL_StableMinMaxNone" Then return new OpenGL_StableMinMaxNone
if algorithmName = "OpenGL_StructuredCloud" Then return new OpenGL_StructuredCloud
if algorithmName = "OpenGL_Tessellate" Then return new OpenGL_Tessellate
if algorithmName = "OpenGL_TessellateCell" Then return new OpenGL_TessellateCell
if algorithmName = "OpenGL_TessellateRGB" Then return new OpenGL_TessellateRGB
if algorithmName = "OpenGL_TextureShuffle" Then return new OpenGL_TextureShuffle
if algorithmName = "OpenGL_Tiles" Then return new OpenGL_Tiles
if algorithmName = "OpenGL_TilesQuad" Then return new OpenGL_TilesQuad
if algorithmName = "OpenGL_VerticalOrHorizontal" Then return new OpenGL_VerticalOrHorizontal
if algorithmName = "OpenGL_VerticalSingle" Then return new OpenGL_VerticalSingle
if algorithmName = "OpenGL_ViewObjects" Then return new OpenGL_ViewObjects
if algorithmName = "OpenGL_World" Then return new OpenGL_World
if algorithmName = "OpticalFlow_DenseBasics" Then return new OpticalFlow_DenseBasics
if algorithmName = "OpticalFlow_Sparse" Then return new OpticalFlow_Sparse
if algorithmName = "Options_AccordSuite" Then return new Options_AccordSuite
if algorithmName = "Options_Annealing" Then return new Options_Annealing
if algorithmName = "Options_Bernson" Then return new Options_Bernson
if algorithmName = "Options_BGSubtract" Then return new Options_BGSubtract
if algorithmName = "Options_BGSubtract_CPP" Then return new Options_BGSubtract_CPP
if algorithmName = "Options_BGSubtractSynthetic" Then return new Options_BGSubtractSynthetic
if algorithmName = "Options_BinarizeNiBlack" Then return new Options_BinarizeNiBlack
if algorithmName = "Options_Blob" Then return new Options_Blob
if algorithmName = "Options_BlockMatching" Then return new Options_BlockMatching
if algorithmName = "Options_Blur" Then return new Options_Blur
if algorithmName = "Options_Boundary" Then return new Options_Boundary
if algorithmName = "Options_CamShift" Then return new Options_CamShift
if algorithmName = "Options_Canny" Then return new Options_Canny
if algorithmName = "Options_Cartoonify" Then return new Options_Cartoonify
if algorithmName = "Options_CComp" Then return new Options_CComp
if algorithmName = "Options_Classifier" Then return new Options_Classifier
if algorithmName = "Options_ColorFormat" Then return new Options_ColorFormat
if algorithmName = "Options_ColorMatch" Then return new Options_ColorMatch
if algorithmName = "Options_Colors" Then return new Options_Colors
if algorithmName = "Options_Complexity" Then return new Options_Complexity
if algorithmName = "Options_Contours" Then return new Options_Contours
if algorithmName = "Options_Contours2" Then return new Options_Contours2
if algorithmName = "Options_DCT" Then return new Options_DCT
if algorithmName = "Options_Denoise" Then return new Options_Denoise
if algorithmName = "Options_DFT" Then return new Options_DFT
if algorithmName = "Options_Dilate" Then return new Options_Dilate
if algorithmName = "Options_Distance" Then return new Options_Distance
if algorithmName = "Options_Dither" Then return new Options_Dither
if algorithmName = "Options_DNN" Then return new Options_DNN
if algorithmName = "Options_Draw" Then return new Options_Draw
if algorithmName = "Options_DrawArc" Then return new Options_DrawArc
if algorithmName = "Options_Edges_All" Then return new Options_Edges_All
if algorithmName = "Options_Eigen" Then return new Options_Eigen
if algorithmName = "Options_Emax" Then return new Options_Emax
if algorithmName = "Options_Encode" Then return new Options_Encode
if algorithmName = "Options_Erode" Then return new Options_Erode
if algorithmName = "Options_Extrinsics" Then return new Options_Extrinsics
if algorithmName = "Options_FeatureMatch" Then return new Options_FeatureMatch
if algorithmName = "Options_Features" Then return new Options_Features
if algorithmName = "Options_Filter" Then return new Options_Filter
if algorithmName = "Options_FilterNorm" Then return new Options_FilterNorm
if algorithmName = "Options_FitLine" Then return new Options_FitLine
if algorithmName = "Options_Flood" Then return new Options_Flood
if algorithmName = "Options_ForeGround" Then return new Options_ForeGround
if algorithmName = "Options_FPoly" Then return new Options_FPoly
if algorithmName = "Options_Fractal" Then return new Options_Fractal
if algorithmName = "Options_GeneticDrawing" Then return new Options_GeneticDrawing
if algorithmName = "Options_Gif" Then return new Options_Gif
if algorithmName = "Options_Harris" Then return new Options_Harris
if algorithmName = "Options_HeatMap" Then return new Options_HeatMap
if algorithmName = "Options_HistCompare" Then return new Options_HistCompare
if algorithmName = "Options_HistXD" Then return new Options_HistXD
if algorithmName = "Options_Homography" Then return new Options_Homography
if algorithmName = "Options_Hough" Then return new Options_Hough
if algorithmName = "Options_IMU" Then return new Options_IMU
if algorithmName = "Options_IMUFrameTime" Then return new Options_IMUFrameTime
if algorithmName = "Options_InPaint" Then return new Options_InPaint
if algorithmName = "Options_Intercepts" Then return new Options_Intercepts
if algorithmName = "Options_Kalman_VB" Then return new Options_Kalman_VB
if algorithmName = "Options_KLT" Then return new Options_KLT
if algorithmName = "Options_KMeans" Then return new Options_KMeans
if algorithmName = "Options_Laplacian" Then return new Options_Laplacian
if algorithmName = "Options_LeftRight" Then return new Options_LeftRight
if algorithmName = "Options_Line" Then return new Options_Line
if algorithmName = "Options_LUT" Then return new Options_LUT
if algorithmName = "Options_MatchCell" Then return new Options_MatchCell
if algorithmName = "Options_MatchShapes" Then return new Options_MatchShapes
if algorithmName = "Options_MinArea" Then return new Options_MinArea
if algorithmName = "Options_MinMaxNone" Then return new Options_MinMaxNone
if algorithmName = "Options_Motion" Then return new Options_Motion
if algorithmName = "Options_MotionBlur" Then return new Options_MotionBlur
if algorithmName = "Options_MSER" Then return new Options_MSER
if algorithmName = "Options_Neighbors" Then return new Options_Neighbors
if algorithmName = "Options_OilPaint" Then return new Options_OilPaint
if algorithmName = "Options_OpenGL" Then return new Options_OpenGL
if algorithmName = "Options_OpenGL_Contours" Then return new Options_OpenGL_Contours
if algorithmName = "Options_OpenGLFunctions" Then return new Options_OpenGLFunctions
if algorithmName = "Options_OpticalFlow" Then return new Options_OpticalFlow
if algorithmName = "Options_OpticalFlowSparse" Then return new Options_OpticalFlowSparse
if algorithmName = "Options_Photoshop" Then return new Options_Photoshop
if algorithmName = "Options_Plane" Then return new Options_Plane
if algorithmName = "Options_PlaneEstimation" Then return new Options_PlaneEstimation
if algorithmName = "Options_Pointilism" Then return new Options_Pointilism
if algorithmName = "Options_ProCon" Then return new Options_ProCon
if algorithmName = "Options_Quaternion" Then return new Options_Quaternion
if algorithmName = "Options_Random" Then return new Options_Random
if algorithmName = "Options_Resize" Then return new Options_Resize
if algorithmName = "Options_RotatePoly" Then return new Options_RotatePoly
if algorithmName = "Options_SepFilter2D" Then return new Options_SepFilter2D
if algorithmName = "Options_ShapeDetect" Then return new Options_ShapeDetect
if algorithmName = "Options_Sift" Then return new Options_Sift
if algorithmName = "Options_Smoothing" Then return new Options_Smoothing
if algorithmName = "Options_Sobel" Then return new Options_Sobel
if algorithmName = "Options_SOM" Then return new Options_SOM
if algorithmName = "Options_Sort" Then return new Options_Sort
if algorithmName = "Options_Spectrum" Then return new Options_Spectrum
if algorithmName = "Options_Structured" Then return new Options_Structured
if algorithmName = "Options_SuperRes" Then return new Options_SuperRes
if algorithmName = "Options_SVM" Then return new Options_SVM
if algorithmName = "Options_SVM2" Then return new Options_SVM2
if algorithmName = "Options_SymmetricalShapes" Then return new Options_SymmetricalShapes
if algorithmName = "Options_Threshold" Then return new Options_Threshold
if algorithmName = "Options_Threshold_Adaptive" Then return new Options_Threshold_Adaptive
if algorithmName = "Options_Translation" Then return new Options_Translation
if algorithmName = "Options_Warp" Then return new Options_Warp
if algorithmName = "Options_WarpModel" Then return new Options_WarpModel
if algorithmName = "Options_WarpModel2" Then return new Options_WarpModel2
if algorithmName = "Options_Wavelet" Then return new Options_Wavelet
if algorithmName = "Options_XPhoto" Then return new Options_XPhoto
if algorithmName = "ORB_Basics" Then return new ORB_Basics
if algorithmName = "ORB_Match" Then return new ORB_Match
if algorithmName = "Palette_Basics" Then return new Palette_Basics
if algorithmName = "Palette_Color" Then return new Palette_Color
if algorithmName = "Palette_Create" Then return new Palette_Create
if algorithmName = "Palette_DepthColorMap" Then return new Palette_DepthColorMap
if algorithmName = "Palette_DrawTest" Then return new Palette_DrawTest
if algorithmName = "Palette_Gradient" Then return new Palette_Gradient
if algorithmName = "Palette_Layout2D" Then return new Palette_Layout2D
if algorithmName = "Palette_LeftRightImages" Then return new Palette_LeftRightImages
if algorithmName = "Palette_LinearPolar" Then return new Palette_LinearPolar
if algorithmName = "Palette_LoadColorMap" Then return new Palette_LoadColorMap
if algorithmName = "Palette_Random" Then return new Palette_Random
if algorithmName = "Palette_RandomColorMap" Then return new Palette_RandomColorMap
if algorithmName = "Palette_Reduction" Then return new Palette_Reduction
if algorithmName = "Palette_RGBDepth" Then return new Palette_RGBDepth
if algorithmName = "Palette_TaskColors" Then return new Palette_TaskColors
if algorithmName = "Palette_Variable" Then return new Palette_Variable
if algorithmName = "ParticleFilter_Basics" Then return new ParticleFilter_Basics
if algorithmName = "ParticleFilter_Example" Then return new ParticleFilter_Example
if algorithmName = "ParticleFilter_Net" Then return new ParticleFilter_Net
if algorithmName = "PCA_Basics" Then return new PCA_Basics
if algorithmName = "PCA_CellMask" Then return new PCA_CellMask
if algorithmName = "PCA_Depth" Then return new PCA_Depth
if algorithmName = "PCA_DrawImage" Then return new PCA_DrawImage
if algorithmName = "PCA_Prep_CPP" Then return new PCA_Prep_CPP
if algorithmName = "PCA_Reconstruct" Then return new PCA_Reconstruct
if algorithmName = "Pendulum_Basics" Then return new Pendulum_Basics
if algorithmName = "PhaseCorrelate_Basics" Then return new PhaseCorrelate_Basics
if algorithmName = "PhaseCorrelate_BasicsTest" Then return new PhaseCorrelate_BasicsTest
if algorithmName = "PhaseCorrelate_Depth" Then return new PhaseCorrelate_Depth
if algorithmName = "PhaseCorrelate_HanningWindow" Then return new PhaseCorrelate_HanningWindow
if algorithmName = "Photon_Basics" Then return new Photon_Basics
if algorithmName = "Photon_Subtraction" Then return new Photon_Subtraction
if algorithmName = "Photon_Test" Then return new Photon_Test
if algorithmName = "PhotoShop_AlphaBeta" Then return new PhotoShop_AlphaBeta
if algorithmName = "PhotoShop_Brightness" Then return new PhotoShop_Brightness
if algorithmName = "PhotoShop_ChangeMask" Then return new PhotoShop_ChangeMask
if algorithmName = "PhotoShop_Clahe" Then return new PhotoShop_Clahe
if algorithmName = "PhotoShop_DuoTone" Then return new PhotoShop_DuoTone
if algorithmName = "PhotoShop_Emboss" Then return new PhotoShop_Emboss
if algorithmName = "PhotoShop_EmbossAll" Then return new PhotoShop_EmbossAll
if algorithmName = "PhotoShop_Gamma" Then return new PhotoShop_Gamma
if algorithmName = "PhotoShop_Hue" Then return new PhotoShop_Hue
if algorithmName = "PhotoShop_Pencil_Basics" Then return new PhotoShop_Pencil_Basics
if algorithmName = "PhotoShop_Pencil_Manual" Then return new PhotoShop_Pencil_Manual
if algorithmName = "PhotoShop_PlotHist" Then return new PhotoShop_PlotHist
if algorithmName = "PhotoShop_Sepia" Then return new PhotoShop_Sepia
if algorithmName = "PhotoShop_SharpenDetail" Then return new PhotoShop_SharpenDetail
if algorithmName = "PhotoShop_SharpenStylize" Then return new PhotoShop_SharpenStylize
if algorithmName = "PhotoShop_UnsharpMask" Then return new PhotoShop_UnsharpMask
if algorithmName = "PhotoShop_Vignetting" Then return new PhotoShop_Vignetting
if algorithmName = "PhotoShop_WhiteBalance" Then return new PhotoShop_WhiteBalance
if algorithmName = "PhotoShop_WhiteBalancePlot" Then return new PhotoShop_WhiteBalancePlot
if algorithmName = "Pixel_GetSet" Then return new Pixel_GetSet
if algorithmName = "Pixel_Measure" Then return new Pixel_Measure
if algorithmName = "Pixel_NeighborsHorizontal" Then return new Pixel_NeighborsHorizontal
if algorithmName = "Pixel_NeighborsMask" Then return new Pixel_NeighborsMask
if algorithmName = "Pixel_NeighborsMaskH" Then return new Pixel_NeighborsMaskH
if algorithmName = "Pixel_NeighborsMaskV" Then return new Pixel_NeighborsMaskV
if algorithmName = "Pixel_NeighborsPatchNeighbors" Then return new Pixel_NeighborsPatchNeighbors
if algorithmName = "Pixel_NeighborsVertical" Then return new Pixel_NeighborsVertical
if algorithmName = "Pixel_SampleColor" Then return new Pixel_SampleColor
if algorithmName = "Pixel_Sampler" Then return new Pixel_Sampler
if algorithmName = "Pixel_SubPixel" Then return new Pixel_SubPixel
if algorithmName = "Pixel_Unstable" Then return new Pixel_Unstable
if algorithmName = "Pixel_Viewer" Then return new Pixel_Viewer
if algorithmName = "Pixel_Zoom" Then return new Pixel_Zoom
if algorithmName = "Plane_Basics" Then return new Plane_Basics
if algorithmName = "Plane_CellColor" Then return new Plane_CellColor
if algorithmName = "Plane_EqCorrelation" Then return new Plane_EqCorrelation
if algorithmName = "Plane_Equation" Then return new Plane_Equation
if algorithmName = "Plane_FlatSurfaces" Then return new Plane_FlatSurfaces
if algorithmName = "Plane_FloorStudy" Then return new Plane_FloorStudy
if algorithmName = "Plane_From3Points" Then return new Plane_From3Points
if algorithmName = "Plane_Histogram" Then return new Plane_Histogram
if algorithmName = "Plane_Horizontals" Then return new Plane_Horizontals
if algorithmName = "Plane_OnlyPlanes" Then return new Plane_OnlyPlanes
if algorithmName = "Plane_Points" Then return new Plane_Points
if algorithmName = "Plane_SoloPoints" Then return new Plane_SoloPoints
if algorithmName = "Plane_Verticals" Then return new Plane_Verticals
if algorithmName = "Plot_Basics" Then return new Plot_Basics
if algorithmName = "Plot_Basics_CPP" Then return new Plot_Basics_CPP
if algorithmName = "Plot_Beats" Then return new Plot_Beats
if algorithmName = "Plot_Depth" Then return new Plot_Depth
if algorithmName = "Plot_Dots" Then return new Plot_Dots
if algorithmName = "Plot_Histogram" Then return new Plot_Histogram
if algorithmName = "Plot_Histogram2D" Then return new Plot_Histogram2D
if algorithmName = "Plot_OverTime" Then return new Plot_OverTime
if algorithmName = "Plot_OverTimeFixedScale" Then return new Plot_OverTimeFixedScale
if algorithmName = "Plot_OverTimeScalar" Then return new Plot_OverTimeScalar
if algorithmName = "Plot_OverTimeSingle" Then return new Plot_OverTimeSingle
if algorithmName = "PointCloud_Average" Then return new PointCloud_Average
if algorithmName = "PointCloud_Basics" Then return new PointCloud_Basics
if algorithmName = "PointCloud_Continuous_VB" Then return new PointCloud_Continuous_VB
if algorithmName = "PointCloud_FrustrumSide" Then return new PointCloud_FrustrumSide
if algorithmName = "PointCloud_FrustrumTop" Then return new PointCloud_FrustrumTop
if algorithmName = "PointCloud_Histograms" Then return new PointCloud_Histograms
if algorithmName = "PointCloud_Inspector" Then return new PointCloud_Inspector
if algorithmName = "PointCloud_NeighborV" Then return new PointCloud_NeighborV
if algorithmName = "PointCloud_PCPoints" Then return new PointCloud_PCPoints
if algorithmName = "PointCloud_PCpointsMask" Then return new PointCloud_PCpointsMask
if algorithmName = "PointCloud_PCPointsPlane" Then return new PointCloud_PCPointsPlane
if algorithmName = "PointCloud_Point3f" Then return new PointCloud_Point3f
if algorithmName = "PointCloud_Raw" Then return new PointCloud_Raw
if algorithmName = "PointCloud_Raw_CPP" Then return new PointCloud_Raw_CPP
if algorithmName = "PointCloud_ReducedSideView" Then return new PointCloud_ReducedSideView
if algorithmName = "PointCloud_ReducedTopView" Then return new PointCloud_ReducedTopView
if algorithmName = "PointCloud_SetupSide" Then return new PointCloud_SetupSide
if algorithmName = "PointCloud_SetupTop" Then return new PointCloud_SetupTop
if algorithmName = "PointCloud_Solo" Then return new PointCloud_Solo
if algorithmName = "PointCloud_SoloRegions" Then return new PointCloud_SoloRegions
if algorithmName = "PointCloud_Spin" Then return new PointCloud_Spin
if algorithmName = "PointCloud_Spin2" Then return new PointCloud_Spin2
if algorithmName = "PointCloud_SurfaceH" Then return new PointCloud_SurfaceH
if algorithmName = "PointCloud_SurfaceH_CPP" Then return new PointCloud_SurfaceH_CPP
if algorithmName = "PointCloud_Visualize" Then return new PointCloud_Visualize
if algorithmName = "PointCloud_YRangeTest" Then return new PointCloud_YRangeTest
if algorithmName = "Polylines_IEnumerableExample" Then return new Polylines_IEnumerableExample
if algorithmName = "Polylines_Random" Then return new Polylines_Random
if algorithmName = "ProCon_Basics" Then return new ProCon_Basics
if algorithmName = "ProCon_Variation" Then return new ProCon_Variation
if algorithmName = "Profile_Basics" Then return new Profile_Basics
if algorithmName = "Profile_ConcentrationSide" Then return new Profile_ConcentrationSide
if algorithmName = "Profile_ConcentrationTop" Then return new Profile_ConcentrationTop
if algorithmName = "Profile_Derivative" Then return new Profile_Derivative
if algorithmName = "Profile_Kalman" Then return new Profile_Kalman
if algorithmName = "Profile_OpenGL" Then return new Profile_OpenGL
if algorithmName = "Profile_Rotation" Then return new Profile_Rotation
if algorithmName = "Projection_Basics" Then return new Projection_Basics
if algorithmName = "Projection_Lines" Then return new Projection_Lines
if algorithmName = "Puzzle_Basics" Then return new Puzzle_Basics
if algorithmName = "Puzzle_Solver" Then return new Puzzle_Solver
if algorithmName = "Puzzle_SolverDynamic" Then return new Puzzle_SolverDynamic
if algorithmName = "Pyramid_Basics" Then return new Pyramid_Basics
if algorithmName = "Pyramid_Filter" Then return new Pyramid_Filter
if algorithmName = "PyrFilter_Basics" Then return new PyrFilter_Basics
if algorithmName = "PyrFilter_RedCloud" Then return new PyrFilter_RedCloud
if algorithmName = "Python_Basics" Then return new Python_Basics
if algorithmName = "Python_MemMap" Then return new Python_MemMap
if algorithmName = "Python_Run" Then return new Python_Run
if algorithmName = "Python_Stream" Then return new Python_Stream
if algorithmName = "QRcode_Basics" Then return new QRcode_Basics
if algorithmName = "Quaterion_Basics" Then return new Quaterion_Basics
if algorithmName = "Quaterion_IMUPrediction" Then return new Quaterion_IMUPrediction
if algorithmName = "Random_Basics" Then return new Random_Basics
if algorithmName = "Random_Basics3D" Then return new Random_Basics3D
if algorithmName = "Random_Basics4D" Then return new Random_Basics4D
if algorithmName = "Random_CheckNormalDist" Then return new Random_CheckNormalDist
if algorithmName = "Random_CheckNormalDistSmoothed" Then return new Random_CheckNormalDistSmoothed
if algorithmName = "Random_CheckUniformDist" Then return new Random_CheckUniformDist
if algorithmName = "Random_CheckUniformSmoothed" Then return new Random_CheckUniformSmoothed
if algorithmName = "Random_Clusters" Then return new Random_Clusters
if algorithmName = "Random_CustomDistribution" Then return new Random_CustomDistribution
if algorithmName = "Random_CustomHistogram" Then return new Random_CustomHistogram
if algorithmName = "Random_Enumerable" Then return new Random_Enumerable
if algorithmName = "Random_KalmanPoints" Then return new Random_KalmanPoints
if algorithmName = "Random_LUTMask" Then return new Random_LUTMask
if algorithmName = "Random_MonteCarlo" Then return new Random_MonteCarlo
if algorithmName = "Random_NormalDist" Then return new Random_NormalDist
if algorithmName = "Random_PatternGenerator_CPP" Then return new Random_PatternGenerator_CPP
if algorithmName = "Random_Point2d" Then return new Random_Point2d
if algorithmName = "Random_Shuffle" Then return new Random_Shuffle
if algorithmName = "Random_StaticTV" Then return new Random_StaticTV
if algorithmName = "Random_StaticTVFaster" Then return new Random_StaticTVFaster
if algorithmName = "Random_StaticTVFastSimple" Then return new Random_StaticTVFastSimple
if algorithmName = "Random_UniformDist" Then return new Random_UniformDist
if algorithmName = "Rectangle_Basics" Then return new Rectangle_Basics
if algorithmName = "Rectangle_Intersection" Then return new Rectangle_Intersection
if algorithmName = "Rectangle_MultiOverlap" Then return new Rectangle_MultiOverlap
if algorithmName = "Rectangle_Overlap" Then return new Rectangle_Overlap
if algorithmName = "Rectangle_Rotated" Then return new Rectangle_Rotated
if algorithmName = "Rectangle_Union" Then return new Rectangle_Union
if algorithmName = "RecursiveBilateralFilter_CPP" Then return new RecursiveBilateralFilter_CPP
if algorithmName = "RedCloud_Basics" Then return new RedCloud_Basics
if algorithmName = "RedCloud_BasicsOld" Then return new RedCloud_BasicsOld
if algorithmName = "RedCloud_BProject3D" Then return new RedCloud_BProject3D
if algorithmName = "RedCloud_CellChanges" Then return new RedCloud_CellChanges
if algorithmName = "RedCloud_CellsAtDepth" Then return new RedCloud_CellsAtDepth
if algorithmName = "RedCloud_CellStats" Then return new RedCloud_CellStats
if algorithmName = "RedCloud_ColorAndCloud" Then return new RedCloud_ColorAndCloud
if algorithmName = "RedCloud_ColorInDepth" Then return new RedCloud_ColorInDepth
if algorithmName = "RedCloud_Combine" Then return new RedCloud_Combine
if algorithmName = "RedCloud_Combine2Pass" Then return new RedCloud_Combine2Pass
if algorithmName = "RedCloud_Combine2Runs" Then return new RedCloud_Combine2Runs
if algorithmName = "RedCloud_Core" Then return new RedCloud_Core
if algorithmName = "RedCloud_CoreTest" Then return new RedCloud_CoreTest
if algorithmName = "RedCloud_CPP" Then return new RedCloud_CPP
if algorithmName = "RedCloud_DelaunayGuidedFeatures" Then return new RedCloud_DelaunayGuidedFeatures
if algorithmName = "RedCloud_DepthOutline" Then return new RedCloud_DepthOutline
if algorithmName = "RedCloud_Diff" Then return new RedCloud_Diff
if algorithmName = "RedCloud_Equations" Then return new RedCloud_Equations
if algorithmName = "RedCloud_FeatureLess" Then return new RedCloud_FeatureLess
if algorithmName = "RedCloud_Features" Then return new RedCloud_Features
if algorithmName = "RedCloud_FindCells" Then return new RedCloud_FindCells
if algorithmName = "RedCloud_FloodPoints" Then return new RedCloud_FloodPoints
if algorithmName = "RedCloud_FPS" Then return new RedCloud_FPS
if algorithmName = "RedCloud_Hulls" Then return new RedCloud_Hulls
if algorithmName = "RedCloud_JoinCells" Then return new RedCloud_JoinCells
if algorithmName = "RedCloud_KMeans" Then return new RedCloud_KMeans
if algorithmName = "RedCloud_LikelyFlatSurfaces" Then return new RedCloud_LikelyFlatSurfaces
if algorithmName = "RedCloud_MatchCell" Then return new RedCloud_MatchCell
if algorithmName = "RedCloud_MeterByMeter" Then return new RedCloud_MeterByMeter
if algorithmName = "RedCloud_MostlyColor" Then return new RedCloud_MostlyColor
if algorithmName = "RedCloud_Motion" Then return new RedCloud_Motion
if algorithmName = "RedCloud_NearestStableCell" Then return new RedCloud_NearestStableCell
if algorithmName = "RedCloud_NoDepth" Then return new RedCloud_NoDepth
if algorithmName = "RedCloud_OnlyColor" Then return new RedCloud_OnlyColor
if algorithmName = "RedCloud_OnlyDepth" Then return new RedCloud_OnlyDepth
if algorithmName = "RedCloud_Other" Then return new RedCloud_Other
if algorithmName = "RedCloud_OutlineColor" Then return new RedCloud_OutlineColor
if algorithmName = "RedCloud_PlaneColor" Then return new RedCloud_PlaneColor
if algorithmName = "RedCloud_PlaneEq3D" Then return new RedCloud_PlaneEq3D
if algorithmName = "RedCloud_PlaneFromContour" Then return new RedCloud_PlaneFromContour
if algorithmName = "RedCloud_PlaneFromMask" Then return new RedCloud_PlaneFromMask
if algorithmName = "RedCloud_Planes" Then return new RedCloud_Planes
if algorithmName = "RedCloud_ProjectCell" Then return new RedCloud_ProjectCell
if algorithmName = "RedCloud_ShapeCorrelation" Then return new RedCloud_ShapeCorrelation
if algorithmName = "RedCloud_StructuredH" Then return new RedCloud_StructuredH
if algorithmName = "RedCloud_StructuredV" Then return new RedCloud_StructuredV
if algorithmName = "RedCloud_UnstableCells" Then return new RedCloud_UnstableCells
if algorithmName = "RedCloud_UnstableHulls" Then return new RedCloud_UnstableHulls
if algorithmName = "RedCloud_World" Then return new RedCloud_World
if algorithmName = "RedCloud_XZ" Then return new RedCloud_XZ
if algorithmName = "RedCloud_YZ" Then return new RedCloud_YZ
if algorithmName = "RedColor_Basics" Then return new RedColor_Basics
if algorithmName = "RedColor_Binarize" Then return new RedColor_Binarize
if algorithmName = "RedColor_CComp" Then return new RedColor_CComp
if algorithmName = "RedColor_CCompBinarized" Then return new RedColor_CCompBinarized
if algorithmName = "RedColor_Cells" Then return new RedColor_Cells
if algorithmName = "RedColor_FeatureLess" Then return new RedColor_FeatureLess
if algorithmName = "RedColor_Histogram3DBP" Then return new RedColor_Histogram3DBP
if algorithmName = "RedColor_InputColor" Then return new RedColor_InputColor
if algorithmName = "RedColor_LeftRight" Then return new RedColor_LeftRight
if algorithmName = "RedMin_Basics" Then return new RedMin_Basics
if algorithmName = "RedMin_BasicsMotion" Then return new RedMin_BasicsMotion
if algorithmName = "RedMin_Blobs" Then return new RedMin_Blobs
if algorithmName = "RedMin_ContourVsFeatureLess" Then return new RedMin_ContourVsFeatureLess
if algorithmName = "RedMin_Core" Then return new RedMin_Core
if algorithmName = "RedMin_FindPixels_CPP" Then return new RedMin_FindPixels_CPP
if algorithmName = "RedMin_Gaps" Then return new RedMin_Gaps
if algorithmName = "RedMin_Motion" Then return new RedMin_Motion
if algorithmName = "RedMin_PixelClassifier" Then return new RedMin_PixelClassifier
if algorithmName = "RedMin_PixelVector3D" Then return new RedMin_PixelVector3D
if algorithmName = "RedMin_PixelVectors" Then return new RedMin_PixelVectors
if algorithmName = "RedMin_RedCloud" Then return new RedMin_RedCloud
if algorithmName = "RedTrack_Basics" Then return new RedTrack_Basics
if algorithmName = "RedTrack_Features" Then return new RedTrack_Features
if algorithmName = "RedTrack_FeaturesKNN" Then return new RedTrack_FeaturesKNN
if algorithmName = "RedTrack_GoodCell" Then return new RedTrack_GoodCell
if algorithmName = "RedTrack_GoodCellInput" Then return new RedTrack_GoodCellInput
if algorithmName = "RedTrack_GoodCells" Then return new RedTrack_GoodCells
if algorithmName = "RedTrack_Lines" Then return new RedTrack_Lines
if algorithmName = "RedTrack_LineSingle" Then return new RedTrack_LineSingle
if algorithmName = "RedTrack_Points" Then return new RedTrack_Points
if algorithmName = "Reduction_Basics" Then return new Reduction_Basics
if algorithmName = "Reduction_BGR" Then return new Reduction_BGR
if algorithmName = "Reduction_Edges" Then return new Reduction_Edges
if algorithmName = "Reduction_Floodfill" Then return new Reduction_Floodfill
if algorithmName = "Reduction_HeatMapLines" Then return new Reduction_HeatMapLines
if algorithmName = "Reduction_Histogram" Then return new Reduction_Histogram
if algorithmName = "Reduction_PointCloud" Then return new Reduction_PointCloud
if algorithmName = "Reduction_XYZ" Then return new Reduction_XYZ
if algorithmName = "Remap_Basics" Then return new Remap_Basics
if algorithmName = "Remap_Flip" Then return new Remap_Flip
if algorithmName = "Replay_OpenGL" Then return new Replay_OpenGL
if algorithmName = "Replay_Play" Then return new Replay_Play
if algorithmName = "Replay_Record" Then return new Replay_Record
if algorithmName = "Resize_Basics" Then return new Resize_Basics
if algorithmName = "Resize_Preserve" Then return new Resize_Preserve
if algorithmName = "Resize_Proportional" Then return new Resize_Proportional
if algorithmName = "Resize_Smaller" Then return new Resize_Smaller
if algorithmName = "Retina_Basics_CPP" Then return new Retina_Basics_CPP
if algorithmName = "Retina_Depth" Then return new Retina_Depth
if algorithmName = "ROI_Accumulate" Then return new ROI_Accumulate
if algorithmName = "ROI_AccumulateOld" Then return new ROI_AccumulateOld
if algorithmName = "ROI_Basics" Then return new ROI_Basics
if algorithmName = "ROI_FindNonZeroNoSingle" Then return new ROI_FindNonZeroNoSingle
if algorithmName = "Rotate_Basics" Then return new Rotate_Basics
if algorithmName = "Rotate_BasicsQT" Then return new Rotate_BasicsQT
if algorithmName = "Rotate_Box" Then return new Rotate_Box
if algorithmName = "Rotate_Example" Then return new Rotate_Example
if algorithmName = "Rotate_Poly" Then return new Rotate_Poly
if algorithmName = "Rotate_PolyQT" Then return new Rotate_PolyQT
if algorithmName = "Salience_Basics_CPP" Then return new Salience_Basics_CPP
if algorithmName = "Salience_Basics_MT" Then return new Salience_Basics_MT
if algorithmName = "SemiGlobalMatching_CPP" Then return new SemiGlobalMatching_CPP
if algorithmName = "Sides_Basics" Then return new Sides_Basics
if algorithmName = "Sides_ColorC" Then return new Sides_ColorC
if algorithmName = "Sides_Corner" Then return new Sides_Corner
if algorithmName = "Sides_Profile" Then return new Sides_Profile
if algorithmName = "Sieve_Basics" Then return new Sieve_Basics
if algorithmName = "Sieve_BasicsVB" Then return new Sieve_BasicsVB
if algorithmName = "Sieve_Image" Then return new Sieve_Image
if algorithmName = "SLR_Basics" Then return new SLR_Basics
if algorithmName = "SLR_Data" Then return new SLR_Data
if algorithmName = "SLR_Image" Then return new SLR_Image
if algorithmName = "SLR_SurfaceH" Then return new SLR_SurfaceH
if algorithmName = "SLR_TrendCompare" Then return new SLR_TrendCompare
if algorithmName = "SLR_TrendImages" Then return new SLR_TrendImages
if algorithmName = "SLR_Trends" Then return new SLR_Trends
if algorithmName = "Smoothing_Exterior" Then return new Smoothing_Exterior
if algorithmName = "Smoothing_Interior" Then return new Smoothing_Interior
if algorithmName = "Solve_ByArray" Then return new Solve_ByArray
if algorithmName = "Solve_ByMat" Then return new Solve_ByMat
if algorithmName = "Sort_1Channel" Then return new Sort_1Channel
if algorithmName = "Sort_3Channel" Then return new Sort_3Channel
if algorithmName = "Sort_Basics" Then return new Sort_Basics
if algorithmName = "Sort_MLPrepTest_CPP" Then return new Sort_MLPrepTest_CPP
if algorithmName = "Sort_RectAndMask" Then return new Sort_RectAndMask
if algorithmName = "Sound_Basics" Then return new Sound_Basics
if algorithmName = "Sound_Display" Then return new Sound_Display
if algorithmName = "Sound_GenWaveDisplay" Then return new Sound_GenWaveDisplay
if algorithmName = "Sound_SignalGenerator" Then return new Sound_SignalGenerator
if algorithmName = "Sound_WaveDisplay" Then return new Sound_WaveDisplay
if algorithmName = "Spectrum_Basics" Then return new Spectrum_Basics
if algorithmName = "Spectrum_Breakdown" Then return new Spectrum_Breakdown
if algorithmName = "Spectrum_CellZoom" Then return new Spectrum_CellZoom
if algorithmName = "Spectrum_Cloud" Then return new Spectrum_Cloud
if algorithmName = "Spectrum_Gray" Then return new Spectrum_Gray
if algorithmName = "Spectrum_GrayAndCloud" Then return new Spectrum_GrayAndCloud
if algorithmName = "Spectrum_Mask" Then return new Spectrum_Mask
if algorithmName = "Spectrum_RedCloud" Then return new Spectrum_RedCloud
if algorithmName = "Spectrum_RGB" Then return new Spectrum_RGB
if algorithmName = "Spectrum_X" Then return new Spectrum_X
if algorithmName = "Spectrum_Y" Then return new Spectrum_Y
if algorithmName = "Spectrum_Z" Then return new Spectrum_Z
if algorithmName = "Stabilizer_Basics" Then return new Stabilizer_Basics
if algorithmName = "Stabilizer_BasicsRandomInput" Then return new Stabilizer_BasicsRandomInput
if algorithmName = "Stabilizer_BasicsTest" Then return new Stabilizer_BasicsTest
if algorithmName = "Stabilizer_OpticalFlow" Then return new Stabilizer_OpticalFlow
if algorithmName = "Stabilizer_VerticalIMU" Then return new Stabilizer_VerticalIMU
if algorithmName = "Stabilizer_VerticalIMUKalman" Then return new Stabilizer_VerticalIMUKalman
if algorithmName = "Stable_Basics" Then return new Stable_Basics
if algorithmName = "Stable_BasicsCount" Then return new Stable_BasicsCount
if algorithmName = "Stable_FAST" Then return new Stable_FAST
if algorithmName = "Stable_GoodFeatures" Then return new Stable_GoodFeatures
if algorithmName = "Stable_Lines" Then return new Stable_Lines
if algorithmName = "SteadyCam_Basics" Then return new SteadyCam_Basics
if algorithmName = "Stitch_Basics" Then return new Stitch_Basics
if algorithmName = "Structured_Cloud" Then return new Structured_Cloud
if algorithmName = "Structured_Cloud2" Then return new Structured_Cloud2
if algorithmName = "Structured_CountSide" Then return new Structured_CountSide
if algorithmName = "Structured_CountSideSum" Then return new Structured_CountSideSum
if algorithmName = "Structured_CountTop" Then return new Structured_CountTop
if algorithmName = "Structured_Crosshairs" Then return new Structured_Crosshairs
if algorithmName = "Structured_Depth" Then return new Structured_Depth
if algorithmName = "Structured_FeatureLines" Then return new Structured_FeatureLines
if algorithmName = "Structured_FloorCeiling" Then return new Structured_FloorCeiling
if algorithmName = "Structured_LinearizeFloor" Then return new Structured_LinearizeFloor
if algorithmName = "Structured_MouseSlice" Then return new Structured_MouseSlice
if algorithmName = "Structured_MultiSlice" Then return new Structured_MultiSlice
if algorithmName = "Structured_MultiSliceH" Then return new Structured_MultiSliceH
if algorithmName = "Structured_MultiSliceLines" Then return new Structured_MultiSliceLines
if algorithmName = "Structured_MultiSlicePolygon" Then return new Structured_MultiSlicePolygon
if algorithmName = "Structured_MultiSliceV" Then return new Structured_MultiSliceV
if algorithmName = "Structured_Rebuild" Then return new Structured_Rebuild
if algorithmName = "Structured_ROI" Then return new Structured_ROI
if algorithmName = "Structured_SliceEither" Then return new Structured_SliceEither
if algorithmName = "Structured_SliceH" Then return new Structured_SliceH
if algorithmName = "Structured_SliceV" Then return new Structured_SliceV
if algorithmName = "Structured_SliceXPlot" Then return new Structured_SliceXPlot
if algorithmName = "Structured_SliceYPlot" Then return new Structured_SliceYPlot
if algorithmName = "Structured_Tiles" Then return new Structured_Tiles
if algorithmName = "Structured_TilesQuad" Then return new Structured_TilesQuad
if algorithmName = "Structured_TransformH" Then return new Structured_TransformH
if algorithmName = "Structured_TransformV" Then return new Structured_TransformV
if algorithmName = "SuperPixel_Basics" Then return new SuperPixel_Basics
if algorithmName = "SuperPixel_Basics_CPP" Then return new SuperPixel_Basics_CPP
if algorithmName = "SuperPixel_BinarizedImage" Then return new SuperPixel_BinarizedImage
if algorithmName = "SuperPixel_Depth" Then return new SuperPixel_Depth
if algorithmName = "SuperPixel_WithCanny" Then return new SuperPixel_WithCanny
if algorithmName = "SuperPixel_WithLineDetector" Then return new SuperPixel_WithLineDetector
if algorithmName = "SuperRes_Basics" Then return new SuperRes_Basics
if algorithmName = "SuperRes_Input" Then return new SuperRes_Input
if algorithmName = "SuperRes_SubPixelZoom" Then return new SuperRes_SubPixelZoom
if algorithmName = "SVD_Example" Then return new SVD_Example
if algorithmName = "SVD_Example2" Then return new SVD_Example2
if algorithmName = "SVD_Gaussian" Then return new SVD_Gaussian
if algorithmName = "SVM_Basics" Then return new SVM_Basics
if algorithmName = "SVM_ReuseBasics" Then return new SVM_ReuseBasics
if algorithmName = "SVM_ReuseRandom" Then return new SVM_ReuseRandom
if algorithmName = "SVM_SampleData" Then return new SVM_SampleData
if algorithmName = "SVM_TestCase" Then return new SVM_TestCase
if algorithmName = "Tessallate_Basics" Then return new Tessallate_Basics
if algorithmName = "Tessallate_Bricks" Then return new Tessallate_Bricks
if algorithmName = "Tessallate_QuadHulls" Then return new Tessallate_QuadHulls
if algorithmName = "Tessallate_QuadMinMax" Then return new Tessallate_QuadMinMax
if algorithmName = "Tessallate_QuadSimple" Then return new Tessallate_QuadSimple
if algorithmName = "Tessallate_Triangles" Then return new Tessallate_Triangles
if algorithmName = "Texture_Basics" Then return new Texture_Basics
if algorithmName = "Texture_Flow" Then return new Texture_Flow
if algorithmName = "Texture_Flow_Depth" Then return new Texture_Flow_Depth
if algorithmName = "Texture_Flow_Reduction" Then return new Texture_Flow_Reduction
if algorithmName = "Thickness_Basics" Then return new Thickness_Basics
if algorithmName = "Threading_Test" Then return new Threading_Test
if algorithmName = "Threshold_Adaptive" Then return new Threshold_Adaptive
if algorithmName = "Threshold_Basics" Then return new Threshold_Basics
if algorithmName = "Threshold_Definitions" Then return new Threshold_Definitions
if algorithmName = "Tracker_Basics" Then return new Tracker_Basics
if algorithmName = "Transform_Affine3D" Then return new Transform_Affine3D
if algorithmName = "Transform_Resize" Then return new Transform_Resize
if algorithmName = "Transform_Rotate" Then return new Transform_Rotate
if algorithmName = "TransformationMatrix_Basics" Then return new TransformationMatrix_Basics
if algorithmName = "Triangle_Basics" Then return new Triangle_Basics
if algorithmName = "Triangle_Cell" Then return new Triangle_Cell
if algorithmName = "Triangle_HullContour" Then return new Triangle_HullContour
if algorithmName = "Triangle_Mask" Then return new Triangle_Mask
if algorithmName = "Triangle_RedCloud" Then return new Triangle_RedCloud
if algorithmName = "Vector_Magnitude" Then return new Vector_Magnitude
if algorithmName = "Video_Basics" Then return new Video_Basics
if algorithmName = "Video_CarCComp" Then return new Video_CarCComp
if algorithmName = "Video_CarCounting" Then return new Video_CarCounting
if algorithmName = "Video_MinCircle" Then return new Video_MinCircle
if algorithmName = "Video_MinRect" Then return new Video_MinRect
if algorithmName = "Vignetting_Basics" Then return new Vignetting_Basics
if algorithmName = "Vignetting_Devignetting" Then return new Vignetting_Devignetting
if algorithmName = "Vignetting_Removal" Then return new Vignetting_Removal
if algorithmName = "Vignetting_VB" Then return new Vignetting_VB
if algorithmName = "Volume_Basics" Then return new Volume_Basics
if algorithmName = "Voronoi_Basics" Then return new Voronoi_Basics
if algorithmName = "Voronoi_Compare" Then return new Voronoi_Compare
if algorithmName = "Voronoi_CPP" Then return new Voronoi_CPP
if algorithmName = "WarpAffine_3Points" Then return new WarpAffine_3Points
if algorithmName = "WarpAffine_4Points" Then return new WarpAffine_4Points
if algorithmName = "WarpAffine_Basics" Then return new WarpAffine_Basics
if algorithmName = "WarpAffine_BasicsQT" Then return new WarpAffine_BasicsQT
if algorithmName = "WarpAffine_Captcha" Then return new WarpAffine_Captcha
if algorithmName = "WarpAffine_Repeated" Then return new WarpAffine_Repeated
if algorithmName = "WarpAffine_RepeatedExample8" Then return new WarpAffine_RepeatedExample8
if algorithmName = "WarpModel_Basics" Then return new WarpModel_Basics
if algorithmName = "WarpModel_ECC" Then return new WarpModel_ECC
if algorithmName = "WarpModel_Input" Then return new WarpModel_Input
if algorithmName = "WarpPerspective_Basics" Then return new WarpPerspective_Basics
if algorithmName = "WarpPerspective_WidthHeight" Then return new WarpPerspective_WidthHeight
if algorithmName = "Watershed_Basics" Then return new Watershed_Basics
if algorithmName = "Watershed_DepthAuto" Then return new Watershed_DepthAuto
if algorithmName = "Watershed_DepthReduction" Then return new Watershed_DepthReduction
if algorithmName = "XFeatures2D_StarDetector" Then return new XFeatures2D_StarDetector
if algorithmName = "XPhoto_Bm3dDenoise" Then return new XPhoto_Bm3dDenoise
if algorithmName = "XPhoto_Bm3dDenoiseDepthImage" Then return new XPhoto_Bm3dDenoiseDepthImage
if algorithmName = "XPhoto_Inpaint" Then return new XPhoto_Inpaint
if algorithmName = "XPhoto_Inpaint_CPP" Then return new XPhoto_Inpaint_CPP
if algorithmName = "XPhoto_OilPaint_CPP" Then return new XPhoto_OilPaint_CPP
return nothing
End Function
End Class
