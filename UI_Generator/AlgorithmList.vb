' this file is automatically generated in a pre-build step.  Do not waste your time modifying manually.
Public Class AlgorithmList
Public Enum cppFunctionNames
_CPP_AddWeighted_Basics
_CPP_RedCloud_BasicsNative
_CPP_RedCloud_Basics
_CPP_BGSubtract_Basics
_CPP_Stable_Basics
_CPP_Feature_StableSorted
_CPP_Plot_Histogram2D
_CPP_Hist_RedOptions
_CPP_Palette_Random
_CPP_Blur_Basics
_CPP_Color_Basics
_CPP_Bin4Way_RegionsCombine
_CPP_Bin4Way_Regions
_CPP_Mat_4Click
_CPP_Area_MinRect
_CPP_Mesh_Features
_CPP_Mesh_Agast
_CPP_Mesh_Basics
_CPP_RedColor_FeatureLess
_CPP_RedColor_FeatureLessCore
_CPP_Palette_Basics
_CPP_FeatureLess_History
_CPP_Line_BasicsOld
_CPP_Convex_Basics
_CPP_Resize_Preserve
_CPP_History_Basics
_CPP_Motion_Simple
_CPP_Hist_Kalman
_CPP_Kalman_Basics
_CPP_RedCloud_Reduce
_CPP_FPoly_TopFeatures
_CPP_Random_Enumerable
_CPP_Bezier_Basics
_CPP_Feature_Agast
_CPP_Resize_Basics
_CPP_Delaunay_Basics
_CPP_Delaunay_GenerationsNoKNN
_CPP_KNN_Core
_CPP_Random_Basics
_CPP_KNN_Basics
_CPP_Delaunay_Generations
_CPP_Feature_Basics
_CPP_Remap_Basics
_CPP_Edge_Canny
_CPP_Edge_Sobel
_CPP_Edge_Scharr
_CPP_Mat_4to1
_CPP_Grid_Basics
_CPP_Depth_Colorizer
_CPP_RedCloud_Flood
_CPP_Depth_PointCloud
_CPP_IMU_GMatrix
_CPP_IMU_GMatrix_QT
_CPP_Depth_PointCloud_IMU
_CPP_Binarize_Simple
_CPP_Plot_Histogram
_CPP_Hist_Basics
_CPP_BackProject_Basics
_CPP_Rectangle_Basics
_CPP_Rectangle_Rotated
_CPP_Contour_Largest
_CPP_Diff_Basics
_CPP_ApproxPoly_FindandDraw
_CPP_ApproxPoly_Basics
_CPP_Hull_Basics
_CPP_ApproxPoly_Hull
_CPP_Edge_Segments
_CPP_Motion_Basics
_CPP_Edge_MotionFrames
_CPP_Edge_Preserving
_CPP_EdgeDraw_Basics
_CPP_Distance_Basics
_CPP_FeatureLess_Basics
_CPP_FeatureLess_Edge
_CPP_Stable_BasicsCount
End Enum
Public Function createVBAlgorithm( algorithmName as string) As VB_Parent
	If algorithmName.endsWith(".py") then return new Python_Run()
	if algorithmName = "AddWeighted_Basics" Then return new AddWeighted_Basics
	if algorithmName = "AddWeighted_Edges" Then return new AddWeighted_Edges
	if algorithmName = "AddWeighted_ImageAccumulate" Then return new AddWeighted_ImageAccumulate
	if algorithmName = "AddWeighted_InfraRed" Then return new AddWeighted_InfraRed
	if algorithmName = "AlphaChannel_Basics" Then return new AlphaChannel_Basics
	if algorithmName = "Annealing_Basics_CPP" Then return new Annealing_Basics_CPP
	if algorithmName = "Annealing_MultiThreaded_CPP" Then return new Annealing_MultiThreaded_CPP
	if algorithmName = "ApproxPoly_Basics" Then return new ApproxPoly_Basics
	if algorithmName = "ApproxPoly_FindandDraw" Then return new ApproxPoly_FindandDraw
	if algorithmName = "ApproxPoly_Hull" Then return new ApproxPoly_Hull
	if algorithmName = "Area_FindNonZero" Then return new Area_FindNonZero
	if algorithmName = "Area_MinMotionRect" Then return new Area_MinMotionRect
	if algorithmName = "Area_MinRect" Then return new Area_MinRect
	if algorithmName = "Area_MinTriangle_CPP" Then return new Area_MinTriangle_CPP
	if algorithmName = "Area_SoloPoints" Then return new Area_SoloPoints
	if algorithmName = "AsciiArt_Basics" Then return new AsciiArt_Basics
	if algorithmName = "AsciiArt_Color" Then return new AsciiArt_Color
	if algorithmName = "AsciiArt_Diff" Then return new AsciiArt_Diff
	if algorithmName = "BackProject_Basics" Then return new BackProject_Basics
	if algorithmName = "BackProject_BasicsKeyboard" Then return new BackProject_BasicsKeyboard
	if algorithmName = "BackProject_Depth" Then return new BackProject_Depth
	if algorithmName = "BackProject_Display" Then return new BackProject_Display
	if algorithmName = "BackProject_FeatureLess" Then return new BackProject_FeatureLess
	if algorithmName = "BackProject_Full" Then return new BackProject_Full
	if algorithmName = "BackProject_FullEqualized" Then return new BackProject_FullEqualized
	if algorithmName = "BackProject_FullLines" Then return new BackProject_FullLines
	if algorithmName = "BackProject_Horizontal" Then return new BackProject_Horizontal
	if algorithmName = "BackProject_Hue" Then return new BackProject_Hue
	if algorithmName = "BackProject_Image" Then return new BackProject_Image
	if algorithmName = "BackProject_LineSide" Then return new BackProject_LineSide
	if algorithmName = "BackProject_LineTop" Then return new BackProject_LineTop
	if algorithmName = "BackProject_MaskLines" Then return new BackProject_MaskLines
	if algorithmName = "BackProject_Masks" Then return new BackProject_Masks
	if algorithmName = "BackProject_MeterByMeter" Then return new BackProject_MeterByMeter
	if algorithmName = "BackProject_Mouse" Then return new BackProject_Mouse
	if algorithmName = "BackProject_PointCloud" Then return new BackProject_PointCloud
	if algorithmName = "BackProject_Reduction" Then return new BackProject_Reduction
	if algorithmName = "BackProject_Side" Then return new BackProject_Side
	if algorithmName = "BackProject_SoloSide" Then return new BackProject_SoloSide
	if algorithmName = "BackProject_SoloTop" Then return new BackProject_SoloTop
	if algorithmName = "BackProject_Top" Then return new BackProject_Top
	if algorithmName = "BackProject_Unstable" Then return new BackProject_Unstable
	if algorithmName = "BackProject_Vertical" Then return new BackProject_Vertical
	if algorithmName = "BackProject2D_Basics" Then return new BackProject2D_Basics
	if algorithmName = "BackProject2D_BasicsOld" Then return new BackProject2D_BasicsOld
	if algorithmName = "BackProject2D_Compare" Then return new BackProject2D_Compare
	if algorithmName = "BackProject2D_Filter" Then return new BackProject2D_Filter
	if algorithmName = "BackProject2D_FilterBoth" Then return new BackProject2D_FilterBoth
	if algorithmName = "BackProject2D_FilterSide" Then return new BackProject2D_FilterSide
	if algorithmName = "BackProject2D_FilterTop" Then return new BackProject2D_FilterTop
	if algorithmName = "BackProject2D_Full" Then return new BackProject2D_Full
	if algorithmName = "BackProject2D_RowCol" Then return new BackProject2D_RowCol
	if algorithmName = "BackProject2D_Side" Then return new BackProject2D_Side
	if algorithmName = "BackProject2D_Top" Then return new BackProject2D_Top
	if algorithmName = "Benford_Basics" Then return new Benford_Basics
	if algorithmName = "Benford_Depth" Then return new Benford_Depth
	if algorithmName = "Benford_JPEG" Then return new Benford_JPEG
	if algorithmName = "Benford_JPEG99" Then return new Benford_JPEG99
	if algorithmName = "Benford_NormalizedImage" Then return new Benford_NormalizedImage
	if algorithmName = "Benford_NormalizedImage99" Then return new Benford_NormalizedImage99
	if algorithmName = "Benford_PNG" Then return new Benford_PNG
	if algorithmName = "Benford_Primes" Then return new Benford_Primes
	if algorithmName = "Bezier_Basics" Then return new Bezier_Basics
	if algorithmName = "Bezier_Example" Then return new Bezier_Example
	if algorithmName = "BGRPattern_Basics" Then return new BGRPattern_Basics
	if algorithmName = "BGSubtract_Basics" Then return new BGSubtract_Basics
	if algorithmName = "BGSubtract_Basics_QT" Then return new BGSubtract_Basics_QT
	if algorithmName = "BGSubtract_DepthOrColorMotion" Then return new BGSubtract_DepthOrColorMotion
	if algorithmName = "BGSubtract_GMG_KNN" Then return new BGSubtract_GMG_KNN
	if algorithmName = "BGSubtract_MOG" Then return new BGSubtract_MOG
	if algorithmName = "BGSubtract_MOG_Retina" Then return new BGSubtract_MOG_Retina
	if algorithmName = "BGSubtract_MOG_RGBDepth" Then return new BGSubtract_MOG_RGBDepth
	if algorithmName = "BGSubtract_MOG2" Then return new BGSubtract_MOG2
	if algorithmName = "BGSubtract_MOG2_QT" Then return new BGSubtract_MOG2_QT
	if algorithmName = "BGSubtract_MotionDetect" Then return new BGSubtract_MotionDetect
	if algorithmName = "BGSubtract_Reduction" Then return new BGSubtract_Reduction
	if algorithmName = "BGSubtract_Synthetic" Then return new BGSubtract_Synthetic
	if algorithmName = "BGSubtract_Synthetic_CPP" Then return new BGSubtract_Synthetic_CPP
	if algorithmName = "BGSubtract_Video" Then return new BGSubtract_Video
	if algorithmName = "Bin2Way_Basics" Then return new Bin2Way_Basics
	if algorithmName = "Bin2Way_KMeans" Then return new Bin2Way_KMeans
	if algorithmName = "Bin2Way_RecurseOnce" Then return new Bin2Way_RecurseOnce
	if algorithmName = "Bin2Way_RedCloud" Then return new Bin2Way_RedCloud
	if algorithmName = "Bin2Way_RedCloudDarkest" Then return new Bin2Way_RedCloudDarkest
	if algorithmName = "Bin2Way_RedCloudLightest" Then return new Bin2Way_RedCloudLightest
	if algorithmName = "Bin3Way_Basics" Then return new Bin3Way_Basics
	if algorithmName = "Bin3Way_Color" Then return new Bin3Way_Color
	if algorithmName = "Bin3Way_KMeans" Then return new Bin3Way_KMeans
	if algorithmName = "Bin3Way_RedCloud" Then return new Bin3Way_RedCloud
	if algorithmName = "Bin3Way_RedCloud1" Then return new Bin3Way_RedCloud1
	if algorithmName = "Bin3Way_RedCloudDarkest" Then return new Bin3Way_RedCloudDarkest
	if algorithmName = "Bin3Way_RedCloudLightest" Then return new Bin3Way_RedCloudLightest
	if algorithmName = "Bin3Way_RedCloudOther" Then return new Bin3Way_RedCloudOther
	if algorithmName = "Bin4Way_Basics" Then return new Bin4Way_Basics
	if algorithmName = "Bin4Way_BasicsColors" Then return new Bin4Way_BasicsColors
	if algorithmName = "Bin4Way_BasicsRed" Then return new Bin4Way_BasicsRed
	if algorithmName = "Bin4Way_Canny" Then return new Bin4Way_Canny
	if algorithmName = "Bin4Way_RedCloud" Then return new Bin4Way_RedCloud
	if algorithmName = "Bin4Way_Regions" Then return new Bin4Way_Regions
	if algorithmName = "Bin4Way_Regions1" Then return new Bin4Way_Regions1
	if algorithmName = "Bin4Way_RegionsLeftRight" Then return new Bin4Way_RegionsLeftRight
	if algorithmName = "Bin4Way_Sobel" Then return new Bin4Way_Sobel
	if algorithmName = "Bin4Way_SplitGaps" Then return new Bin4Way_SplitGaps
	if algorithmName = "Bin4Way_SplitMean" Then return new Bin4Way_SplitMean
	if algorithmName = "Bin4Way_SplitMean1" Then return new Bin4Way_SplitMean1
	if algorithmName = "Bin4Way_SplitMean2" Then return new Bin4Way_SplitMean2
	if algorithmName = "Bin4Way_SplitValley" Then return new Bin4Way_SplitValley
	if algorithmName = "Bin4Way_Unstable" Then return new Bin4Way_Unstable
	if algorithmName = "Bin4Way_Unstable1" Then return new Bin4Way_Unstable1
	if algorithmName = "Bin4Way_UnstableEdges" Then return new Bin4Way_UnstableEdges
	if algorithmName = "Bin4Way_UnstablePixels" Then return new Bin4Way_UnstablePixels
	if algorithmName = "Bin4Way_UnstablePixels1" Then return new Bin4Way_UnstablePixels1
	if algorithmName = "Binarize_Basics" Then return new Binarize_Basics
	if algorithmName = "Binarize_DepthTiers" Then return new Binarize_DepthTiers
	if algorithmName = "Binarize_FourPixelFlips" Then return new Binarize_FourPixelFlips
	if algorithmName = "Binarize_KMeansMasks" Then return new Binarize_KMeansMasks
	if algorithmName = "Binarize_KMeansRGB" Then return new Binarize_KMeansRGB
	if algorithmName = "Binarize_Niblack_Sauvola1" Then return new Binarize_Niblack_Sauvola1
	if algorithmName = "Binarize_OTSU" Then return new Binarize_OTSU
	if algorithmName = "Binarize_Simple" Then return new Binarize_Simple
	if algorithmName = "Binarize_Wolf_Nick" Then return new Binarize_Wolf_Nick
	if algorithmName = "Bitmap_ToMat" Then return new Bitmap_ToMat
	if algorithmName = "Blob_Input" Then return new Blob_Input
	if algorithmName = "Blob_RenderBlobs" Then return new Blob_RenderBlobs
	if algorithmName = "BlockMatching_Basics" Then return new BlockMatching_Basics
	if algorithmName = "Blur_Basics" Then return new Blur_Basics
	if algorithmName = "Blur_Bilateral" Then return new Blur_Bilateral
	if algorithmName = "Blur_Depth" Then return new Blur_Depth
	if algorithmName = "Blur_Detection" Then return new Blur_Detection
	if algorithmName = "Blur_Homogeneous" Then return new Blur_Homogeneous
	if algorithmName = "Blur_Median" Then return new Blur_Median
	if algorithmName = "Blur_PlusHistogram" Then return new Blur_PlusHistogram
	if algorithmName = "Blur_TopoMap" Then return new Blur_TopoMap
	if algorithmName = "BlurMotion_Basics" Then return new BlurMotion_Basics
	if algorithmName = "BlurMotion_Deblur" Then return new BlurMotion_Deblur
	if algorithmName = "Boundary_Basics" Then return new Boundary_Basics
	if algorithmName = "Boundary_Overlap" Then return new Boundary_Overlap
	if algorithmName = "Boundary_Rectangles" Then return new Boundary_Rectangles
	if algorithmName = "Boundary_RemovedRects" Then return new Boundary_RemovedRects
	if algorithmName = "Boundary_Tiers" Then return new Boundary_Tiers
	if algorithmName = "Brightness_Basics" Then return new Brightness_Basics
	if algorithmName = "Brightness_HSV" Then return new Brightness_HSV
	if algorithmName = "BRISK_Basics" Then return new BRISK_Basics
	if algorithmName = "CameraMotion_Basics" Then return new CameraMotion_Basics
	if algorithmName = "CameraMotion_SceneMotion" Then return new CameraMotion_SceneMotion
	if algorithmName = "CameraMotion_WithRotation" Then return new CameraMotion_WithRotation
	if algorithmName = "CamShift_Basics" Then return new CamShift_Basics
	if algorithmName = "CamShift_RedHue" Then return new CamShift_RedHue
	if algorithmName = "Cartoonify_Basics" Then return new Cartoonify_Basics
	if algorithmName = "CComp_Basics" Then return new CComp_Basics
	if algorithmName = "CComp_Both" Then return new CComp_Both
	if algorithmName = "CComp_Hulls" Then return new CComp_Hulls
	if algorithmName = "CComp_Shapes" Then return new CComp_Shapes
	if algorithmName = "CComp_Stats" Then return new CComp_Stats
	if algorithmName = "Cell_Basics" Then return new Cell_Basics
	if algorithmName = "Cell_BasicsPlot" Then return new Cell_BasicsPlot
	if algorithmName = "Cell_Binarize" Then return new Cell_Binarize
	if algorithmName = "Cell_Distance" Then return new Cell_Distance
	if algorithmName = "Cell_Floodfill" Then return new Cell_Floodfill
	if algorithmName = "Cell_Generate" Then return new Cell_Generate
	if algorithmName = "Cell_PixelCountCompare" Then return new Cell_PixelCountCompare
	if algorithmName = "Cell_Stable" Then return new Cell_Stable
	if algorithmName = "Cell_ValidateColorCells" Then return new Cell_ValidateColorCells
	if algorithmName = "CellularAutomata_All256" Then return new CellularAutomata_All256
	if algorithmName = "CellularAutomata_Basics" Then return new CellularAutomata_Basics
	if algorithmName = "CellularAutomata_Life" Then return new CellularAutomata_Life
	if algorithmName = "CellularAutomata_LifeColor" Then return new CellularAutomata_LifeColor
	if algorithmName = "CellularAutomata_LifePopulation" Then return new CellularAutomata_LifePopulation
	if algorithmName = "CellularAutomata_MultiPoint" Then return new CellularAutomata_MultiPoint
	if algorithmName = "Classifier_Basics" Then return new Classifier_Basics
	if algorithmName = "Classifier_Bayesian" Then return new Classifier_Bayesian
	if algorithmName = "Classifier_BayesianTest" Then return new Classifier_BayesianTest
	if algorithmName = "Clone_Basics" Then return new Clone_Basics
	if algorithmName = "Clone_ColorChange" Then return new Clone_ColorChange
	if algorithmName = "Clone_Eagle" Then return new Clone_Eagle
	if algorithmName = "Clone_IlluminationChange" Then return new Clone_IlluminationChange
	if algorithmName = "Clone_Seamless" Then return new Clone_Seamless
	if algorithmName = "Clone_TextureFlattening" Then return new Clone_TextureFlattening
	if algorithmName = "Cluster_Basics" Then return new Cluster_Basics
	if algorithmName = "Cluster_Hulls" Then return new Cluster_Hulls
	if algorithmName = "Coherence_Basics" Then return new Coherence_Basics
	if algorithmName = "Coherence_Depth" Then return new Coherence_Depth
	if algorithmName = "Color_Basics" Then return new Color_Basics
	if algorithmName = "Color8U_Basics" Then return new Color8U_Basics
	if algorithmName = "Color8U_BlackAndWhite" Then return new Color8U_BlackAndWhite
	if algorithmName = "Color8U_Common_VB" Then return new Color8U_Common_VB
	if algorithmName = "Color8U_Complementary" Then return new Color8U_Complementary
	if algorithmName = "Color8U_ComplementaryTest" Then return new Color8U_ComplementaryTest
	if algorithmName = "Color8U_Denoise" Then return new Color8U_Denoise
	if algorithmName = "Color8U_Depth" Then return new Color8U_Depth
	if algorithmName = "Color8U_Grayscale" Then return new Color8U_Grayscale
	if algorithmName = "Color8U_Hue" Then return new Color8U_Hue
	if algorithmName = "Color8U_InRange" Then return new Color8U_InRange
	if algorithmName = "Color8U_KMeans" Then return new Color8U_KMeans
	if algorithmName = "Color8U_MotionFiltered" Then return new Color8U_MotionFiltered
	if algorithmName = "Color8U_RedHue" Then return new Color8U_RedHue
	if algorithmName = "Color8U_Smoothing" Then return new Color8U_Smoothing
	if algorithmName = "Color8U_TopX_VB" Then return new Color8U_TopX_VB
	if algorithmName = "Complexity_Basics" Then return new Complexity_Basics
	if algorithmName = "Complexity_Dots" Then return new Complexity_Dots
	if algorithmName = "Complexity_PlotOpenCV" Then return new Complexity_PlotOpenCV
	if algorithmName = "Concat_4way" Then return new Concat_4way
	if algorithmName = "Concat_Basics" Then return new Concat_Basics
	if algorithmName = "Contour_Basics" Then return new Contour_Basics
	if algorithmName = "Contour_Compare" Then return new Contour_Compare
	if algorithmName = "Contour_CompareToFeatureless" Then return new Contour_CompareToFeatureless
	if algorithmName = "Contour_DepthTiers" Then return new Contour_DepthTiers
	if algorithmName = "Contour_Edges" Then return new Contour_Edges
	if algorithmName = "Contour_Foreground" Then return new Contour_Foreground
	if algorithmName = "Contour_FromPoints" Then return new Contour_FromPoints
	if algorithmName = "Contour_General" Then return new Contour_General
	if algorithmName = "Contour_GeneralWithOptions" Then return new Contour_GeneralWithOptions
	if algorithmName = "Contour_Gray" Then return new Contour_Gray
	if algorithmName = "Contour_Largest" Then return new Contour_Largest
	if algorithmName = "Contour_Outline" Then return new Contour_Outline
	if algorithmName = "Contour_RC_AddContour" Then return new Contour_RC_AddContour
	if algorithmName = "Contour_RedCloud" Then return new Contour_RedCloud
	if algorithmName = "Contour_RedCloudCorners" Then return new Contour_RedCloudCorners
	if algorithmName = "Contour_RedCloudEdges" Then return new Contour_RedCloudEdges
	if algorithmName = "Contour_RemoveLines" Then return new Contour_RemoveLines
	if algorithmName = "Contour_RotatedRects" Then return new Contour_RotatedRects
	if algorithmName = "Contour_SelfIntersect" Then return new Contour_SelfIntersect
	if algorithmName = "Contour_SidePoints" Then return new Contour_SidePoints
	if algorithmName = "Contour_Smoothing" Then return new Contour_Smoothing
	if algorithmName = "Contour_Sorted" Then return new Contour_Sorted
	if algorithmName = "Contour_WholeImage" Then return new Contour_WholeImage
	if algorithmName = "Contrast_Basics" Then return new Contrast_Basics
	if algorithmName = "Contrast_POW" Then return new Contrast_POW
	if algorithmName = "Convex_Basics" Then return new Convex_Basics
	if algorithmName = "Convex_Defects" Then return new Convex_Defects
	if algorithmName = "Convex_RedCloud" Then return new Convex_RedCloud
	if algorithmName = "Convex_RedCloudDefects" Then return new Convex_RedCloudDefects
	if algorithmName = "Corners_Basics" Then return new Corners_Basics
	if algorithmName = "Corners_BasicsCentroid" Then return new Corners_BasicsCentroid
	if algorithmName = "Corners_BasicsCentroids" Then return new Corners_BasicsCentroids
	if algorithmName = "Corners_BasicsStablePoints" Then return new Corners_BasicsStablePoints
	if algorithmName = "Corners_Harris" Then return new Corners_Harris
	if algorithmName = "Corners_Harris_CPP" Then return new Corners_Harris_CPP
	if algorithmName = "Corners_HarrisDetector" Then return new Corners_HarrisDetector
	if algorithmName = "Corners_PreCornerDetect" Then return new Corners_PreCornerDetect
	if algorithmName = "Corners_RedCloud" Then return new Corners_RedCloud
	if algorithmName = "Corners_ShiTomasi_CPP" Then return new Corners_ShiTomasi_CPP
	if algorithmName = "Corners_SubPix" Then return new Corners_SubPix
	if algorithmName = "Correlation_Basics" Then return new Correlation_Basics
	if algorithmName = "Covariance_Basics" Then return new Covariance_Basics
	if algorithmName = "Covariance_Images" Then return new Covariance_Images
	if algorithmName = "Covariance_Test" Then return new Covariance_Test
	if algorithmName = "CPP_Basics" Then return new CPP_Basics
if algorithmName = "CPP_AddWeighted_Basics" Then return new CPP_Basics(cppFunctionNames._CPP_AddWeighted_Basics)
if algorithmName = "CPP_ApproxPoly_Basics" Then return new CPP_Basics(cppFunctionNames._CPP_ApproxPoly_Basics)
if algorithmName = "CPP_ApproxPoly_FindandDraw" Then return new CPP_Basics(cppFunctionNames._CPP_ApproxPoly_FindandDraw)
if algorithmName = "CPP_ApproxPoly_Hull" Then return new CPP_Basics(cppFunctionNames._CPP_ApproxPoly_Hull)
if algorithmName = "CPP_Area_MinRect" Then return new CPP_Basics(cppFunctionNames._CPP_Area_MinRect)
if algorithmName = "CPP_BackProject_Basics" Then return new CPP_Basics(cppFunctionNames._CPP_BackProject_Basics)
if algorithmName = "CPP_Bezier_Basics" Then return new CPP_Basics(cppFunctionNames._CPP_Bezier_Basics)
if algorithmName = "CPP_BGSubtract_Basics" Then return new CPP_Basics(cppFunctionNames._CPP_BGSubtract_Basics)
if algorithmName = "CPP_Bin4Way_Regions" Then return new CPP_Basics(cppFunctionNames._CPP_Bin4Way_Regions)
if algorithmName = "CPP_Bin4Way_RegionsCombine" Then return new CPP_Basics(cppFunctionNames._CPP_Bin4Way_RegionsCombine)
if algorithmName = "CPP_Binarize_Simple" Then return new CPP_Basics(cppFunctionNames._CPP_Binarize_Simple)
if algorithmName = "CPP_Blur_Basics" Then return new CPP_Basics(cppFunctionNames._CPP_Blur_Basics)
if algorithmName = "CPP_Color_Basics" Then return new CPP_Basics(cppFunctionNames._CPP_Color_Basics)
if algorithmName = "CPP_Contour_Largest" Then return new CPP_Basics(cppFunctionNames._CPP_Contour_Largest)
if algorithmName = "CPP_Convex_Basics" Then return new CPP_Basics(cppFunctionNames._CPP_Convex_Basics)
if algorithmName = "CPP_Delaunay_Basics" Then return new CPP_Basics(cppFunctionNames._CPP_Delaunay_Basics)
if algorithmName = "CPP_Delaunay_Generations" Then return new CPP_Basics(cppFunctionNames._CPP_Delaunay_Generations)
if algorithmName = "CPP_Delaunay_GenerationsNoKNN" Then return new CPP_Basics(cppFunctionNames._CPP_Delaunay_GenerationsNoKNN)
if algorithmName = "CPP_Depth_Colorizer" Then return new CPP_Basics(cppFunctionNames._CPP_Depth_Colorizer)
if algorithmName = "CPP_Depth_PointCloud" Then return new CPP_Basics(cppFunctionNames._CPP_Depth_PointCloud)
if algorithmName = "CPP_Depth_PointCloud_IMU" Then return new CPP_Basics(cppFunctionNames._CPP_Depth_PointCloud_IMU)
if algorithmName = "CPP_Diff_Basics" Then return new CPP_Basics(cppFunctionNames._CPP_Diff_Basics)
if algorithmName = "CPP_Distance_Basics" Then return new CPP_Basics(cppFunctionNames._CPP_Distance_Basics)
if algorithmName = "CPP_Edge_Canny" Then return new CPP_Basics(cppFunctionNames._CPP_Edge_Canny)
if algorithmName = "CPP_Edge_MotionFrames" Then return new CPP_Basics(cppFunctionNames._CPP_Edge_MotionFrames)
if algorithmName = "CPP_Edge_Preserving" Then return new CPP_Basics(cppFunctionNames._CPP_Edge_Preserving)
if algorithmName = "CPP_Edge_Scharr" Then return new CPP_Basics(cppFunctionNames._CPP_Edge_Scharr)
if algorithmName = "CPP_Edge_Segments" Then return new CPP_Basics(cppFunctionNames._CPP_Edge_Segments)
if algorithmName = "CPP_Edge_Sobel" Then return new CPP_Basics(cppFunctionNames._CPP_Edge_Sobel)
if algorithmName = "CPP_EdgeDraw_Basics" Then return new CPP_Basics(cppFunctionNames._CPP_EdgeDraw_Basics)
if algorithmName = "CPP_Feature_Agast" Then return new CPP_Basics(cppFunctionNames._CPP_Feature_Agast)
if algorithmName = "CPP_Feature_Basics" Then return new CPP_Basics(cppFunctionNames._CPP_Feature_Basics)
if algorithmName = "CPP_Feature_StableSorted" Then return new CPP_Basics(cppFunctionNames._CPP_Feature_StableSorted)
if algorithmName = "CPP_FeatureLess_Basics" Then return new CPP_Basics(cppFunctionNames._CPP_FeatureLess_Basics)
if algorithmName = "CPP_FeatureLess_Edge" Then return new CPP_Basics(cppFunctionNames._CPP_FeatureLess_Edge)
if algorithmName = "CPP_FeatureLess_History" Then return new CPP_Basics(cppFunctionNames._CPP_FeatureLess_History)
if algorithmName = "CPP_FPoly_TopFeatures" Then return new CPP_Basics(cppFunctionNames._CPP_FPoly_TopFeatures)
if algorithmName = "CPP_Grid_Basics" Then return new CPP_Basics(cppFunctionNames._CPP_Grid_Basics)
if algorithmName = "CPP_Hist_Basics" Then return new CPP_Basics(cppFunctionNames._CPP_Hist_Basics)
if algorithmName = "CPP_Hist_Kalman" Then return new CPP_Basics(cppFunctionNames._CPP_Hist_Kalman)
if algorithmName = "CPP_Hist_RedOptions" Then return new CPP_Basics(cppFunctionNames._CPP_Hist_RedOptions)
if algorithmName = "CPP_History_Basics" Then return new CPP_Basics(cppFunctionNames._CPP_History_Basics)
if algorithmName = "CPP_Hull_Basics" Then return new CPP_Basics(cppFunctionNames._CPP_Hull_Basics)
if algorithmName = "CPP_IMU_GMatrix" Then return new CPP_Basics(cppFunctionNames._CPP_IMU_GMatrix)
if algorithmName = "CPP_IMU_GMatrix_QT" Then return new CPP_Basics(cppFunctionNames._CPP_IMU_GMatrix_QT)
if algorithmName = "CPP_Kalman_Basics" Then return new CPP_Basics(cppFunctionNames._CPP_Kalman_Basics)
if algorithmName = "CPP_KNN_Basics" Then return new CPP_Basics(cppFunctionNames._CPP_KNN_Basics)
if algorithmName = "CPP_KNN_Core" Then return new CPP_Basics(cppFunctionNames._CPP_KNN_Core)
if algorithmName = "CPP_Line_BasicsOld" Then return new CPP_Basics(cppFunctionNames._CPP_Line_BasicsOld)
if algorithmName = "CPP_Mat_4Click" Then return new CPP_Basics(cppFunctionNames._CPP_Mat_4Click)
if algorithmName = "CPP_Mat_4to1" Then return new CPP_Basics(cppFunctionNames._CPP_Mat_4to1)
if algorithmName = "CPP_Mesh_Agast" Then return new CPP_Basics(cppFunctionNames._CPP_Mesh_Agast)
if algorithmName = "CPP_Mesh_Basics" Then return new CPP_Basics(cppFunctionNames._CPP_Mesh_Basics)
if algorithmName = "CPP_Mesh_Features" Then return new CPP_Basics(cppFunctionNames._CPP_Mesh_Features)
if algorithmName = "CPP_Motion_Basics" Then return new CPP_Basics(cppFunctionNames._CPP_Motion_Basics)
if algorithmName = "CPP_Motion_Simple" Then return new CPP_Basics(cppFunctionNames._CPP_Motion_Simple)
if algorithmName = "CPP_Palette_Basics" Then return new CPP_Basics(cppFunctionNames._CPP_Palette_Basics)
if algorithmName = "CPP_Palette_Random" Then return new CPP_Basics(cppFunctionNames._CPP_Palette_Random)
if algorithmName = "CPP_Plot_Histogram" Then return new CPP_Basics(cppFunctionNames._CPP_Plot_Histogram)
if algorithmName = "CPP_Plot_Histogram2D" Then return new CPP_Basics(cppFunctionNames._CPP_Plot_Histogram2D)
if algorithmName = "CPP_Random_Basics" Then return new CPP_Basics(cppFunctionNames._CPP_Random_Basics)
if algorithmName = "CPP_Random_Enumerable" Then return new CPP_Basics(cppFunctionNames._CPP_Random_Enumerable)
if algorithmName = "CPP_Rectangle_Basics" Then return new CPP_Basics(cppFunctionNames._CPP_Rectangle_Basics)
if algorithmName = "CPP_Rectangle_Rotated" Then return new CPP_Basics(cppFunctionNames._CPP_Rectangle_Rotated)
if algorithmName = "CPP_RedCloud_Basics" Then return new CPP_Basics(cppFunctionNames._CPP_RedCloud_Basics)
if algorithmName = "CPP_RedCloud_BasicsNative" Then return new CPP_Basics(cppFunctionNames._CPP_RedCloud_BasicsNative)
if algorithmName = "CPP_RedCloud_Flood" Then return new CPP_Basics(cppFunctionNames._CPP_RedCloud_Flood)
if algorithmName = "CPP_RedCloud_Reduce" Then return new CPP_Basics(cppFunctionNames._CPP_RedCloud_Reduce)
if algorithmName = "CPP_RedColor_FeatureLess" Then return new CPP_Basics(cppFunctionNames._CPP_RedColor_FeatureLess)
if algorithmName = "CPP_RedColor_FeatureLessCore" Then return new CPP_Basics(cppFunctionNames._CPP_RedColor_FeatureLessCore)
if algorithmName = "CPP_Remap_Basics" Then return new CPP_Basics(cppFunctionNames._CPP_Remap_Basics)
if algorithmName = "CPP_Resize_Basics" Then return new CPP_Basics(cppFunctionNames._CPP_Resize_Basics)
if algorithmName = "CPP_Resize_Preserve" Then return new CPP_Basics(cppFunctionNames._CPP_Resize_Preserve)
if algorithmName = "CPP_Stable_Basics" Then return new CPP_Basics(cppFunctionNames._CPP_Stable_Basics)
if algorithmName = "CPP_Stable_BasicsCount" Then return new CPP_Basics(cppFunctionNames._CPP_Stable_BasicsCount)
	if algorithmName = "Crypto_Hash" Then return new Crypto_Hash
	if algorithmName = "CSV_Basics" Then return new CSV_Basics
	if algorithmName = "DCT_Basics" Then return new DCT_Basics
	if algorithmName = "DCT_Depth" Then return new DCT_Depth
	if algorithmName = "DCT_FeatureLess" Then return new DCT_FeatureLess
	if algorithmName = "DCT_RGB" Then return new DCT_RGB
	if algorithmName = "DCT_Surfaces_debug" Then return new DCT_Surfaces_debug
	if algorithmName = "Delaunay_Basics" Then return new Delaunay_Basics
	if algorithmName = "Delaunay_ConsistentColor" Then return new Delaunay_ConsistentColor
	if algorithmName = "Delaunay_Contours" Then return new Delaunay_Contours
	if algorithmName = "Delaunay_Generations" Then return new Delaunay_Generations
	if algorithmName = "Delaunay_GenerationsNoKNN" Then return new Delaunay_GenerationsNoKNN
	if algorithmName = "Delaunay_SubDiv" Then return new Delaunay_SubDiv
	if algorithmName = "Delaunay_Subdiv2D" Then return new Delaunay_Subdiv2D
	if algorithmName = "Denoise_Basics_CPP" Then return new Denoise_Basics_CPP
	if algorithmName = "Denoise_Pixels" Then return new Denoise_Pixels
	if algorithmName = "Density_Basics" Then return new Density_Basics
	if algorithmName = "Density_Count_CPP" Then return new Density_Count_CPP
	if algorithmName = "Density_Mask" Then return new Density_Mask
	if algorithmName = "Density_Phase" Then return new Density_Phase
	if algorithmName = "Depth_Averaging" Then return new Depth_Averaging
	if algorithmName = "Depth_Basics" Then return new Depth_Basics
	if algorithmName = "Depth_BGSubtract" Then return new Depth_BGSubtract
	if algorithmName = "Depth_Colorizer_CPP" Then return new Depth_Colorizer_CPP
	if algorithmName = "Depth_Colorizer_VB" Then return new Depth_Colorizer_VB
	if algorithmName = "Depth_ColorMap" Then return new Depth_ColorMap
	if algorithmName = "Depth_Contour" Then return new Depth_Contour
	if algorithmName = "Depth_Dilate" Then return new Depth_Dilate
	if algorithmName = "Depth_Display" Then return new Depth_Display
	if algorithmName = "Depth_FirstLastDistance" Then return new Depth_FirstLastDistance
	if algorithmName = "Depth_Flatland" Then return new Depth_Flatland
	if algorithmName = "Depth_Foreground" Then return new Depth_Foreground
	if algorithmName = "Depth_ForegroundBlob" Then return new Depth_ForegroundBlob
	if algorithmName = "Depth_ForegroundHead" Then return new Depth_ForegroundHead
	if algorithmName = "Depth_ForegroundOverTime" Then return new Depth_ForegroundOverTime
	if algorithmName = "Depth_Grid" Then return new Depth_Grid
	if algorithmName = "Depth_Holes" Then return new Depth_Holes
	if algorithmName = "Depth_HolesOverTime" Then return new Depth_HolesOverTime
	if algorithmName = "Depth_HolesRect" Then return new Depth_HolesRect
	if algorithmName = "Depth_InRange" Then return new Depth_InRange
	if algorithmName = "Depth_LocalMinMax_MT" Then return new Depth_LocalMinMax_MT
	if algorithmName = "Depth_MaxMask" Then return new Depth_MaxMask
	if algorithmName = "Depth_MeanStdev_MT" Then return new Depth_MeanStdev_MT
	if algorithmName = "Depth_MeanStdevPlot" Then return new Depth_MeanStdevPlot
	if algorithmName = "Depth_Median" Then return new Depth_Median
	if algorithmName = "Depth_MinMaxNone" Then return new Depth_MinMaxNone
	if algorithmName = "Depth_MinMaxToVoronoi" Then return new Depth_MinMaxToVoronoi
	if algorithmName = "Depth_NotMissing" Then return new Depth_NotMissing
	if algorithmName = "Depth_Outline" Then return new Depth_Outline
	if algorithmName = "Depth_Palette" Then return new Depth_Palette
	if algorithmName = "Depth_PunchBlob" Then return new Depth_PunchBlob
	if algorithmName = "Depth_PunchBlobNew" Then return new Depth_PunchBlobNew
	if algorithmName = "Depth_PunchDecreasing" Then return new Depth_PunchDecreasing
	if algorithmName = "Depth_PunchIncreasing" Then return new Depth_PunchIncreasing
	if algorithmName = "Depth_Regions" Then return new Depth_Regions
	if algorithmName = "Depth_RGBShadow" Then return new Depth_RGBShadow
	if algorithmName = "Depth_Smoothing" Then return new Depth_Smoothing
	if algorithmName = "Depth_SmoothingMat" Then return new Depth_SmoothingMat
	if algorithmName = "Depth_StableAverage" Then return new Depth_StableAverage
	if algorithmName = "Depth_StableMax" Then return new Depth_StableMax
	if algorithmName = "Depth_StableMin" Then return new Depth_StableMin
	if algorithmName = "Depth_StableMinMax" Then return new Depth_StableMinMax
	if algorithmName = "Depth_TierCount" Then return new Depth_TierCount
	if algorithmName = "Depth_TiersZ" Then return new Depth_TiersZ
	if algorithmName = "Depth_Uncertainty" Then return new Depth_Uncertainty
	if algorithmName = "Depth_World" Then return new Depth_World
	if algorithmName = "Depth_WorldXYMT" Then return new Depth_WorldXYMT
	if algorithmName = "Depth_WorldXYZ" Then return new Depth_WorldXYZ
	if algorithmName = "Derivative_Basics" Then return new Derivative_Basics
	if algorithmName = "Derivative_Classes" Then return new Derivative_Classes
	if algorithmName = "Derivative_Laplacian" Then return new Derivative_Laplacian
	if algorithmName = "Derivative_Sobel" Then return new Derivative_Sobel
	if algorithmName = "DFT_Basics" Then return new DFT_Basics
	if algorithmName = "DFT_ButterworthDepth" Then return new DFT_ButterworthDepth
	if algorithmName = "DFT_ButterworthFilter_MT" Then return new DFT_ButterworthFilter_MT
	if algorithmName = "DFT_Inverse" Then return new DFT_Inverse
	if algorithmName = "DFT_Shapes" Then return new DFT_Shapes
	if algorithmName = "Diff_Basics" Then return new Diff_Basics
	if algorithmName = "Diff_Color" Then return new Diff_Color
	if algorithmName = "Diff_Depth32f" Then return new Diff_Depth32f
	if algorithmName = "Diff_Depth32S" Then return new Diff_Depth32S
	if algorithmName = "Diff_DepthAccum" Then return new Diff_DepthAccum
	if algorithmName = "Diff_Heartbeat" Then return new Diff_Heartbeat
	if algorithmName = "Diff_Lines" Then return new Diff_Lines
	if algorithmName = "Diff_RGBAccum" Then return new Diff_RGBAccum
	if algorithmName = "Diff_UnstableDepthAndColor" Then return new Diff_UnstableDepthAndColor
	if algorithmName = "Dilate_Basics" Then return new Dilate_Basics
	if algorithmName = "Dilate_Erode" Then return new Dilate_Erode
	if algorithmName = "Dilate_OpenClose" Then return new Dilate_OpenClose
	if algorithmName = "DisparityFunction_Basics" Then return new DisparityFunction_Basics
	if algorithmName = "Distance_Background" Then return new Distance_Background
	if algorithmName = "Distance_Basics" Then return new Distance_Basics
	if algorithmName = "Distance_BinaryImage" Then return new Distance_BinaryImage
	if algorithmName = "Distance_Foreground" Then return new Distance_Foreground
	if algorithmName = "Distance_Labels" Then return new Distance_Labels
	if algorithmName = "Distance_Point3D" Then return new Distance_Point3D
	if algorithmName = "Distance_Point4D" Then return new Distance_Point4D
	if algorithmName = "Distance_RedCloud" Then return new Distance_RedCloud
	if algorithmName = "Dither_Basics" Then return new Dither_Basics
	if algorithmName = "DNN_Basics" Then return new DNN_Basics
	if algorithmName = "DNN_SuperRes" Then return new DNN_SuperRes
	if algorithmName = "DNN_SuperResize" Then return new DNN_SuperResize
	if algorithmName = "DNN_Test" Then return new DNN_Test
	if algorithmName = "Download_Databases" Then return new Download_Databases
	if algorithmName = "Draw_Arc" Then return new Draw_Arc
	if algorithmName = "Draw_Circles" Then return new Draw_Circles
	if algorithmName = "Draw_ClipLine" Then return new Draw_ClipLine
	if algorithmName = "Draw_Ellipses" Then return new Draw_Ellipses
	if algorithmName = "Draw_Frustrum" Then return new Draw_Frustrum
	if algorithmName = "Draw_Hexagon" Then return new Draw_Hexagon
	if algorithmName = "Draw_Line" Then return new Draw_Line
	if algorithmName = "Draw_Lines" Then return new Draw_Lines
	if algorithmName = "Draw_LineTest" Then return new Draw_LineTest
	if algorithmName = "Draw_Noise" Then return new Draw_Noise
	if algorithmName = "Draw_Polygon" Then return new Draw_Polygon
	if algorithmName = "Draw_Shapes" Then return new Draw_Shapes
	if algorithmName = "Draw_SymmetricalShapes" Then return new Draw_SymmetricalShapes
	if algorithmName = "Duster_Basics" Then return new Duster_Basics
	if algorithmName = "Duster_BasicsY" Then return new Duster_BasicsY
	if algorithmName = "Duster_MaskZ" Then return new Duster_MaskZ
	if algorithmName = "Duster_RedCloud" Then return new Duster_RedCloud
	if algorithmName = "Edge_All" Then return new Edge_All
	if algorithmName = "Edge_BackProjection" Then return new Edge_BackProjection
	if algorithmName = "Edge_BinarizedBrightness" Then return new Edge_BinarizedBrightness
	if algorithmName = "Edge_BinarizedReduction" Then return new Edge_BinarizedReduction
	if algorithmName = "Edge_Canny" Then return new Edge_Canny
	if algorithmName = "Edge_CannyCombined" Then return new Edge_CannyCombined
	if algorithmName = "Edge_CannyHistory" Then return new Edge_CannyHistory
	if algorithmName = "Edge_CannyLeftRight" Then return new Edge_CannyLeftRight
	if algorithmName = "Edge_CannyMin" Then return new Edge_CannyMin
	if algorithmName = "Edge_ColorGap_CPP" Then return new Edge_ColorGap_CPP
	if algorithmName = "Edge_ColorGap_VB" Then return new Edge_ColorGap_VB
	if algorithmName = "Edge_Consistent" Then return new Edge_Consistent
	if algorithmName = "Edge_DCTfrequency" Then return new Edge_DCTfrequency
	if algorithmName = "Edge_DCTinput" Then return new Edge_DCTinput
	if algorithmName = "Edge_DepthAndColor" Then return new Edge_DepthAndColor
	if algorithmName = "Edge_DepthGap_CPP" Then return new Edge_DepthGap_CPP
	if algorithmName = "Edge_DepthGap_Native" Then return new Edge_DepthGap_Native
	if algorithmName = "Edge_Deriche_CPP" Then return new Edge_Deriche_CPP
	if algorithmName = "Edge_HSV" Then return new Edge_HSV
	if algorithmName = "Edge_Laplacian" Then return new Edge_Laplacian
	if algorithmName = "Edge_Matching" Then return new Edge_Matching
	if algorithmName = "Edge_MotionFrames" Then return new Edge_MotionFrames
	if algorithmName = "Edge_MotionOverlay" Then return new Edge_MotionOverlay
	if algorithmName = "Edge_Preserving" Then return new Edge_Preserving
	if algorithmName = "Edge_RandomForest_CPP" Then return new Edge_RandomForest_CPP
	if algorithmName = "Edge_Reduction" Then return new Edge_Reduction
	if algorithmName = "Edge_Regions" Then return new Edge_Regions
	if algorithmName = "Edge_ResizeAdd" Then return new Edge_ResizeAdd
	if algorithmName = "Edge_RGB" Then return new Edge_RGB
	if algorithmName = "Edge_Scharr" Then return new Edge_Scharr
	if algorithmName = "Edge_Sobel_Old" Then return new Edge_Sobel_Old
	if algorithmName = "Edge_SobelCustom" Then return new Edge_SobelCustom
	if algorithmName = "Edge_SobelCustomH" Then return new Edge_SobelCustomH
	if algorithmName = "Edge_SobelCustomLeftRight" Then return new Edge_SobelCustomLeftRight
	if algorithmName = "Edge_SobelCustomV" Then return new Edge_SobelCustomV
	if algorithmName = "Edge_SobelHorizontal" Then return new Edge_SobelHorizontal
	if algorithmName = "Edge_SobelLR" Then return new Edge_SobelLR
	if algorithmName = "Edge_SobelLRBinarized" Then return new Edge_SobelLRBinarized
	if algorithmName = "EdgeDraw_Basics" Then return new EdgeDraw_Basics
	if algorithmName = "EdgeDraw_Segments" Then return new EdgeDraw_Segments
	if algorithmName = "Eigen_Basics" Then return new Eigen_Basics
	if algorithmName = "Eigen_Fitline" Then return new Eigen_Fitline
	if algorithmName = "Eigen_FitLineInput" Then return new Eigen_FitLineInput
	if algorithmName = "EMax_Basics" Then return new EMax_Basics
	if algorithmName = "EMax_Centers" Then return new EMax_Centers
	if algorithmName = "EMax_InputClusters" Then return new EMax_InputClusters
	if algorithmName = "EMax_PointTracker" Then return new EMax_PointTracker
	if algorithmName = "EMax_RandomClusters" Then return new EMax_RandomClusters
	if algorithmName = "EMax_VB_Failing" Then return new EMax_VB_Failing
	if algorithmName = "Encode_Basics" Then return new Encode_Basics
	if algorithmName = "Encode_Scaling" Then return new Encode_Scaling
	if algorithmName = "Entropy_Basics" Then return new Entropy_Basics
	if algorithmName = "Entropy_BinaryImage" Then return new Entropy_BinaryImage
	if algorithmName = "Entropy_FAST" Then return new Entropy_FAST
	if algorithmName = "Entropy_Highest" Then return new Entropy_Highest
	if algorithmName = "Entropy_Rectangle" Then return new Entropy_Rectangle
	if algorithmName = "Entropy_SubDivisions" Then return new Entropy_SubDivisions
	if algorithmName = "Erode_Basics" Then return new Erode_Basics
	if algorithmName = "Erode_CloudXY" Then return new Erode_CloudXY
	if algorithmName = "Erode_DepthSeed" Then return new Erode_DepthSeed
	if algorithmName = "Erode_Dilate" Then return new Erode_Dilate
	if algorithmName = "Etch_ASketch" Then return new Etch_ASketch
	if algorithmName = "ExtractCPPresults_EdgeDrawing" Then return new ExtractCPPresults_EdgeDrawing
	if algorithmName = "ExtractCPPresults_FeatureLess" Then return new ExtractCPPresults_FeatureLess
	if algorithmName = "Extrinsics_Basics" Then return new Extrinsics_Basics
	if algorithmName = "Extrinsics_Display" Then return new Extrinsics_Display
	if algorithmName = "Face_Haar_Alt" Then return new Face_Haar_Alt
	if algorithmName = "Face_Haar_LBP" Then return new Face_Haar_LBP
	if algorithmName = "Feature_Basics" Then return new Feature_Basics
	if algorithmName = "Feature_BasicsNoFrills" Then return new Feature_BasicsNoFrills
	if algorithmName = "Feature_Compare" Then return new Feature_Compare
	if algorithmName = "Feature_Delaunay" Then return new Feature_Delaunay
	if algorithmName = "Feature_Gather" Then return new Feature_Gather
	if algorithmName = "Feature_Generations" Then return new Feature_Generations
	if algorithmName = "Feature_GridPopulation" Then return new Feature_GridPopulation
	if algorithmName = "Feature_History" Then return new Feature_History
	if algorithmName = "Feature_KNN" Then return new Feature_KNN
	if algorithmName = "Feature_LucasKanade" Then return new Feature_LucasKanade
	if algorithmName = "Feature_MultiPass" Then return new Feature_MultiPass
	if algorithmName = "Feature_NearestCell" Then return new Feature_NearestCell
	if algorithmName = "Feature_Points" Then return new Feature_Points
	if algorithmName = "Feature_PointTracker" Then return new Feature_PointTracker
	if algorithmName = "Feature_Reduction" Then return new Feature_Reduction
	if algorithmName = "Feature_ShiTomasi" Then return new Feature_ShiTomasi
	if algorithmName = "Feature_Trace" Then return new Feature_Trace
	if algorithmName = "Feature_TraceDelaunay" Then return new Feature_TraceDelaunay
	if algorithmName = "FeatureFlow_Basics" Then return new FeatureFlow_Basics
	if algorithmName = "FeatureFlow_Dense" Then return new FeatureFlow_Dense
	if algorithmName = "FeatureFlow_LeftRight" Then return new FeatureFlow_LeftRight
	if algorithmName = "FeatureFlow_LeftRight1" Then return new FeatureFlow_LeftRight1
	if algorithmName = "FeatureFlow_LeftRightHist" Then return new FeatureFlow_LeftRightHist
	if algorithmName = "FeatureFlow_LucasKanade" Then return new FeatureFlow_LucasKanade
	if algorithmName = "FeatureLeftRight_Basics" Then return new FeatureLeftRight_Basics
	if algorithmName = "FeatureLeftRight_Grid" Then return new FeatureLeftRight_Grid
	if algorithmName = "FeatureLeftRight_Input" Then return new FeatureLeftRight_Input
	if algorithmName = "FeatureLeftRight_LeftRightPrep" Then return new FeatureLeftRight_LeftRightPrep
	if algorithmName = "FeatureLess_Basics" Then return new FeatureLess_Basics
	if algorithmName = "FeatureLess_Canny" Then return new FeatureLess_Canny
	if algorithmName = "FeatureLess_DCT" Then return new FeatureLess_DCT
	if algorithmName = "FeatureLess_Edge_CPP" Then return new FeatureLess_Edge_CPP
	if algorithmName = "FeatureLess_Groups" Then return new FeatureLess_Groups
	if algorithmName = "FeatureLess_Histogram" Then return new FeatureLess_Histogram
	if algorithmName = "FeatureLess_History" Then return new FeatureLess_History
	if algorithmName = "FeatureLess_LeftRight" Then return new FeatureLess_LeftRight
	if algorithmName = "FeatureLess_RedCloud" Then return new FeatureLess_RedCloud
	if algorithmName = "FeatureLess_Sobel" Then return new FeatureLess_Sobel
	if algorithmName = "FeatureLess_Unique3Pixels" Then return new FeatureLess_Unique3Pixels
	if algorithmName = "FeatureLess_UniquePixels" Then return new FeatureLess_UniquePixels
	if algorithmName = "FeatureLine_Basics" Then return new FeatureLine_Basics
	if algorithmName = "FeatureLine_DetailsAll" Then return new FeatureLine_DetailsAll
	if algorithmName = "FeatureLine_Finder" Then return new FeatureLine_Finder
	if algorithmName = "FeatureLine_Longest" Then return new FeatureLine_Longest
	if algorithmName = "FeatureLine_LongestKNN" Then return new FeatureLine_LongestKNN
	if algorithmName = "FeatureLine_LongestV_Tutorial1" Then return new FeatureLine_LongestV_Tutorial1
	if algorithmName = "FeatureLine_LongestV_Tutorial2" Then return new FeatureLine_LongestV_Tutorial2
	if algorithmName = "FeatureLine_LongestVerticalKNN" Then return new FeatureLine_LongestVerticalKNN
	if algorithmName = "FeatureLine_Tutorial1" Then return new FeatureLine_Tutorial1
	if algorithmName = "FeatureLine_Tutorial2" Then return new FeatureLine_Tutorial2
	if algorithmName = "FeatureLine_VerticalLongLine" Then return new FeatureLine_VerticalLongLine
	if algorithmName = "FeatureLine_VerticalVerify" Then return new FeatureLine_VerticalVerify
	if algorithmName = "FeatureLine_VH" Then return new FeatureLine_VH
	if algorithmName = "FeaturePoly_Basics" Then return new FeaturePoly_Basics
	if algorithmName = "FeaturePoly_BasicsOriginal" Then return new FeaturePoly_BasicsOriginal
	if algorithmName = "FeaturePoly_Center" Then return new FeaturePoly_Center
	if algorithmName = "FeaturePoly_Core" Then return new FeaturePoly_Core
	if algorithmName = "FeaturePoly_EdgeRemoval" Then return new FeaturePoly_EdgeRemoval
	if algorithmName = "FeaturePoly_Image" Then return new FeaturePoly_Image
	if algorithmName = "FeaturePoly_ImageMask" Then return new FeaturePoly_ImageMask
	if algorithmName = "FeaturePoly_ImageNew" Then return new FeaturePoly_ImageNew
	if algorithmName = "FeaturePoly_LeftRight" Then return new FeaturePoly_LeftRight
	if algorithmName = "FeaturePoly_Perpendiculars" Then return new FeaturePoly_Perpendiculars
	if algorithmName = "FeaturePoly_PerpendicularsImage" Then return new FeaturePoly_PerpendicularsImage
	if algorithmName = "FeaturePoly_PerpendicularsTest" Then return new FeaturePoly_PerpendicularsTest
	if algorithmName = "FeaturePoly_Plot" Then return new FeaturePoly_Plot
	if algorithmName = "FeaturePoly_PlotWeighted" Then return new FeaturePoly_PlotWeighted
	if algorithmName = "FeaturePoly_PointCloud" Then return new FeaturePoly_PointCloud
	if algorithmName = "FeaturePoly_ResyncCheck" Then return new FeaturePoly_ResyncCheck
	if algorithmName = "FeaturePoly_RotatePoints" Then return new FeaturePoly_RotatePoints
	if algorithmName = "FeaturePoly_Sides" Then return new FeaturePoly_Sides
	if algorithmName = "FeaturePoly_Stablizer" Then return new FeaturePoly_Stablizer
	if algorithmName = "FeaturePoly_StartPoints" Then return new FeaturePoly_StartPoints
	if algorithmName = "FeaturePoly_TopFeatures" Then return new FeaturePoly_TopFeatures
	if algorithmName = "FeaturePoly_Triangle" Then return new FeaturePoly_Triangle
	if algorithmName = "FeaturePoly_WarpAffineImage" Then return new FeaturePoly_WarpAffineImage
	if algorithmName = "FeaturePoly_WarpAffinePoly" Then return new FeaturePoly_WarpAffinePoly
	if algorithmName = "FeatureROI_Basics" Then return new FeatureROI_Basics
	if algorithmName = "FeatureROI_Canny" Then return new FeatureROI_Canny
	if algorithmName = "FeatureROI_Color" Then return new FeatureROI_Color
	if algorithmName = "FeatureROI_ColorSplit" Then return new FeatureROI_ColorSplit
	if algorithmName = "FeatureROI_Correlation" Then return new FeatureROI_Correlation
	if algorithmName = "FeatureROI_LowStdev" Then return new FeatureROI_LowStdev
	if algorithmName = "FeatureROI_LowStdevCorrelation" Then return new FeatureROI_LowStdevCorrelation
	if algorithmName = "FeatureROI_LR" Then return new FeatureROI_LR
	if algorithmName = "FeatureROI_LRAll" Then return new FeatureROI_LRAll
	if algorithmName = "FeatureROI_LRClick" Then return new FeatureROI_LRClick
	if algorithmName = "FeatureROI_Sorted" Then return new FeatureROI_Sorted
	if algorithmName = "Fibonacci_Basics" Then return new Fibonacci_Basics
	if algorithmName = "Fibonacci_Yield" Then return new Fibonacci_Yield
	if algorithmName = "Filter_Laplacian" Then return new Filter_Laplacian
	if algorithmName = "Filter_Maximum" Then return new Filter_Maximum
	if algorithmName = "Filter_Mean" Then return new Filter_Mean
	if algorithmName = "Filter_Median" Then return new Filter_Median
	if algorithmName = "Filter_Minimum" Then return new Filter_Minimum
	if algorithmName = "Filter_Normalized2D" Then return new Filter_Normalized2D
	if algorithmName = "Filter_NormalizedKernel" Then return new Filter_NormalizedKernel
	if algorithmName = "Filter_SepFilter2D" Then return new Filter_SepFilter2D
	if algorithmName = "FitEllipse_AMS_CPP" Then return new FitEllipse_AMS_CPP
	if algorithmName = "FitEllipse_Basics" Then return new FitEllipse_Basics
	if algorithmName = "FitEllipse_Direct_CPP" Then return new FitEllipse_Direct_CPP
	if algorithmName = "FitEllipse_RedCloud" Then return new FitEllipse_RedCloud
	if algorithmName = "Fitline_3DBasics_MT" Then return new Fitline_3DBasics_MT
	if algorithmName = "FitLine_Basics" Then return new FitLine_Basics
	if algorithmName = "FLANN_Basics" Then return new FLANN_Basics
	if algorithmName = "FLANN_Test" Then return new FLANN_Test
	if algorithmName = "Flip_Basics" Then return new Flip_Basics
	if algorithmName = "Flood_Basics" Then return new Flood_Basics
	if algorithmName = "Flood_BasicsMask" Then return new Flood_BasicsMask
	if algorithmName = "Flood_CellStatsPlot" Then return new Flood_CellStatsPlot
	if algorithmName = "Flood_ContainedCells" Then return new Flood_ContainedCells
	if algorithmName = "Flood_LeftRight" Then return new Flood_LeftRight
	if algorithmName = "Flood_MaxDistPoints" Then return new Flood_MaxDistPoints
	if algorithmName = "Flood_Motion" Then return new Flood_Motion
	if algorithmName = "Flood_Motion1" Then return new Flood_Motion1
	if algorithmName = "Flood_Tiers" Then return new Flood_Tiers
	if algorithmName = "Font_FlowText" Then return new Font_FlowText
	if algorithmName = "Font_OpenCV" Then return new Font_OpenCV
	if algorithmName = "Font_TrueType" Then return new Font_TrueType
	if algorithmName = "Foreground_Basics" Then return new Foreground_Basics
	if algorithmName = "Foreground_CellsBack" Then return new Foreground_CellsBack
	if algorithmName = "Foreground_CellsFore" Then return new Foreground_CellsFore
	if algorithmName = "Foreground_Contours" Then return new Foreground_Contours
	if algorithmName = "Foreground_Hist3D" Then return new Foreground_Hist3D
	if algorithmName = "Foreground_KMeans2" Then return new Foreground_KMeans2
	if algorithmName = "Foreground_RedCloud" Then return new Foreground_RedCloud
	if algorithmName = "Fractal_Dimension" Then return new Fractal_Dimension
	if algorithmName = "Fractal_Julia" Then return new Fractal_Julia
	if algorithmName = "Fractal_Mandelbrot" Then return new Fractal_Mandelbrot
	if algorithmName = "Fractal_MandelbrotZoom" Then return new Fractal_MandelbrotZoom
	if algorithmName = "Fractal_MandelbrotZoomColor" Then return new Fractal_MandelbrotZoomColor
	if algorithmName = "FrameRate_Basics" Then return new FrameRate_Basics
	if algorithmName = "FrameRate_BasicsGray" Then return new FrameRate_BasicsGray
	if algorithmName = "FREAK_Basics" Then return new FREAK_Basics
	if algorithmName = "Fuzzy_Basics" Then return new Fuzzy_Basics
	if algorithmName = "Fuzzy_ContoursDepth" Then return new Fuzzy_ContoursDepth
	if algorithmName = "Fuzzy_Filter" Then return new Fuzzy_Filter
	if algorithmName = "Fuzzy_NeighborProof" Then return new Fuzzy_NeighborProof
	if algorithmName = "Fuzzy_TrackerDepth" Then return new Fuzzy_TrackerDepth
	if algorithmName = "Fuzzy_TrackerDepthClick" Then return new Fuzzy_TrackerDepthClick
	if algorithmName = "Gabor_Basics" Then return new Gabor_Basics
	if algorithmName = "Gabor_Basics_MT" Then return new Gabor_Basics_MT
	if algorithmName = "GeneticDrawing_Basics" Then return new GeneticDrawing_Basics
	if algorithmName = "GeneticDrawing_Color" Then return new GeneticDrawing_Color
	if algorithmName = "GeneticDrawing_Photo" Then return new GeneticDrawing_Photo
	if algorithmName = "Gif_Basics" Then return new Gif_Basics
	if algorithmName = "Gif_OpenCVB" Then return new Gif_OpenCVB
	if algorithmName = "Gif_OpenGL" Then return new Gif_OpenGL
	if algorithmName = "Gif_OpenGLwithColor" Then return new Gif_OpenGLwithColor
	if algorithmName = "GrabCut_Basics" Then return new GrabCut_Basics
	if algorithmName = "GrabCut_FineTune" Then return new GrabCut_FineTune
	if algorithmName = "GrabCut_ImageMask" Then return new GrabCut_ImageMask
	if algorithmName = "GrabCut_ImageRect" Then return new GrabCut_ImageRect
	if algorithmName = "Gradient_Basics" Then return new Gradient_Basics
	if algorithmName = "Gradient_CartToPolar" Then return new Gradient_CartToPolar
	if algorithmName = "Gradient_Color" Then return new Gradient_Color
	if algorithmName = "Gradient_Depth" Then return new Gradient_Depth
	if algorithmName = "Gravity_Basics" Then return new Gravity_Basics
	if algorithmName = "Gravity_BasicsFail" Then return new Gravity_BasicsFail
	if algorithmName = "Gravity_BasicsOriginal" Then return new Gravity_BasicsOriginal
	if algorithmName = "Gravity_Horizon" Then return new Gravity_Horizon
	if algorithmName = "Gravity_HorizonCompare" Then return new Gravity_HorizonCompare
	if algorithmName = "GrayToColor_Palette" Then return new GrayToColor_Palette
	if algorithmName = "Grid_Basics" Then return new Grid_Basics
	if algorithmName = "Grid_BasicsTest" Then return new Grid_BasicsTest
	if algorithmName = "Grid_FPS" Then return new Grid_FPS
	if algorithmName = "Grid_List" Then return new Grid_List
	if algorithmName = "Grid_LowRes" Then return new Grid_LowRes
	if algorithmName = "Grid_MinMaxDepth" Then return new Grid_MinMaxDepth
	if algorithmName = "Grid_Neighbors" Then return new Grid_Neighbors
	if algorithmName = "Grid_QuarterRes" Then return new Grid_QuarterRes
	if algorithmName = "Grid_Rectangles" Then return new Grid_Rectangles
	if algorithmName = "Grid_ShowMap" Then return new Grid_ShowMap
	if algorithmName = "Grid_Special" Then return new Grid_Special
	if algorithmName = "Grid_TrackCenter" Then return new Grid_TrackCenter
	if algorithmName = "Guess_Depth_CPP" Then return new Guess_Depth_CPP
	if algorithmName = "Guess_ImageEdges_CPP" Then return new Guess_ImageEdges_CPP
	if algorithmName = "GuidedBP_Basics" Then return new GuidedBP_Basics
	if algorithmName = "GuidedBP_Depth" Then return new GuidedBP_Depth
	if algorithmName = "GuidedBP_HotPoints" Then return new GuidedBP_HotPoints
	if algorithmName = "GuidedBP_HotPointsKNN" Then return new GuidedBP_HotPointsKNN
	if algorithmName = "GuidedBP_Lookup" Then return new GuidedBP_Lookup
	if algorithmName = "GuidedBP_PlanesPlot" Then return new GuidedBP_PlanesPlot
	if algorithmName = "GuidedBP_Points" Then return new GuidedBP_Points
	if algorithmName = "HeatMap_Basics" Then return new HeatMap_Basics
	if algorithmName = "HeatMap_Cell" Then return new HeatMap_Cell
	if algorithmName = "HeatMap_Grid" Then return new HeatMap_Grid
	if algorithmName = "HeatMap_GuidedBP" Then return new HeatMap_GuidedBP
	if algorithmName = "HeatMap_Hot" Then return new HeatMap_Hot
	if algorithmName = "HeatMap_HotNot" Then return new HeatMap_HotNot
	if algorithmName = "Hist_Basics" Then return new Hist_Basics
	if algorithmName = "Hist_Byte_CPP" Then return new Hist_Byte_CPP
	if algorithmName = "Hist_Cell" Then return new Hist_Cell
	if algorithmName = "Hist_Color" Then return new Hist_Color
	if algorithmName = "Hist_ColorsAndGray" Then return new Hist_ColorsAndGray
	if algorithmName = "Hist_CompareEMD_hsv" Then return new Hist_CompareEMD_hsv
	if algorithmName = "Hist_CompareGray" Then return new Hist_CompareGray
	if algorithmName = "Hist_CompareNumber" Then return new Hist_CompareNumber
	if algorithmName = "Hist_ComparePlot" Then return new Hist_ComparePlot
	if algorithmName = "Hist_Depth" Then return new Hist_Depth
	if algorithmName = "Hist_EqualizeColor" Then return new Hist_EqualizeColor
	if algorithmName = "Hist_EqualizeGray" Then return new Hist_EqualizeGray
	if algorithmName = "Hist_FlatSurfaces" Then return new Hist_FlatSurfaces
	if algorithmName = "Hist_Frustrum" Then return new Hist_Frustrum
	if algorithmName = "Hist_Gotcha" Then return new Hist_Gotcha
	if algorithmName = "Hist_Gotcha2D" Then return new Hist_Gotcha2D
	if algorithmName = "Hist_GotchaFixed_CPP" Then return new Hist_GotchaFixed_CPP
	if algorithmName = "Hist_Graph" Then return new Hist_Graph
	if algorithmName = "Hist_Grayscale" Then return new Hist_Grayscale
	if algorithmName = "Hist_Kalman" Then return new Hist_Kalman
	if algorithmName = "Hist_KalmanAuto" Then return new Hist_KalmanAuto
	if algorithmName = "Hist_Lab" Then return new Hist_Lab
	if algorithmName = "Hist_NormalizeGray" Then return new Hist_NormalizeGray
	if algorithmName = "Hist_PeakFinder" Then return new Hist_PeakFinder
	if algorithmName = "Hist_PeakMax" Then return new Hist_PeakMax
	if algorithmName = "Hist_Peaks" Then return new Hist_Peaks
	if algorithmName = "Hist_PeaksDepth" Then return new Hist_PeaksDepth
	if algorithmName = "Hist_PeaksRGB" Then return new Hist_PeaksRGB
	if algorithmName = "Hist_PointCloud" Then return new Hist_PointCloud
	if algorithmName = "Hist_PointCloudXYZ" Then return new Hist_PointCloudXYZ
	if algorithmName = "Hist_ShapeSide" Then return new Hist_ShapeSide
	if algorithmName = "Hist_ShapeTop" Then return new Hist_ShapeTop
	if algorithmName = "Hist_Simple" Then return new Hist_Simple
	if algorithmName = "Hist_Xdimension" Then return new Hist_Xdimension
	if algorithmName = "Hist_Ydimension" Then return new Hist_Ydimension
	if algorithmName = "Hist_Zdimension" Then return new Hist_Zdimension
	if algorithmName = "Hist2D_Basics" Then return new Hist2D_Basics
	if algorithmName = "Hist2D_BGR" Then return new Hist2D_BGR
	if algorithmName = "Hist2D_Cloud" Then return new Hist2D_Cloud
	if algorithmName = "Hist2D_Depth" Then return new Hist2D_Depth
	if algorithmName = "Hist2D_HSV" Then return new Hist2D_HSV
	if algorithmName = "Hist2D_PlotHistogram1D" Then return new Hist2D_PlotHistogram1D
	if algorithmName = "Hist2D_Zoom" Then return new Hist2D_Zoom
	if algorithmName = "Hist3D_Basics" Then return new Hist3D_Basics
	if algorithmName = "Hist3D_BuildHistogram" Then return new Hist3D_BuildHistogram
	if algorithmName = "Hist3D_DepthWithMask" Then return new Hist3D_DepthWithMask
	if algorithmName = "Hist3D_Pixel" Then return new Hist3D_Pixel
	if algorithmName = "Hist3D_PixelCells" Then return new Hist3D_PixelCells
	if algorithmName = "Hist3D_PixelClassify" Then return new Hist3D_PixelClassify
	if algorithmName = "Hist3D_PixelDiffMask" Then return new Hist3D_PixelDiffMask
	if algorithmName = "Hist3D_RedCloud" Then return new Hist3D_RedCloud
	if algorithmName = "Hist3D_RedCloudGrid" Then return new Hist3D_RedCloudGrid
	if algorithmName = "Hist3D_RedColor" Then return new Hist3D_RedColor
	if algorithmName = "Hist3Dcloud_Basics" Then return new Hist3Dcloud_Basics
	if algorithmName = "Hist3Dcloud_BP_Filter" Then return new Hist3Dcloud_BP_Filter
	if algorithmName = "Hist3Dcloud_DepthSplit" Then return new Hist3Dcloud_DepthSplit
	if algorithmName = "Hist3Dcloud_Highlights" Then return new Hist3Dcloud_Highlights
	if algorithmName = "Hist3Dcloud_PlotHist1D" Then return new Hist3Dcloud_PlotHist1D
	if algorithmName = "Hist3Dcolor_Basics" Then return new Hist3Dcolor_Basics
	if algorithmName = "Hist3Dcolor_Basics_CPP" Then return new Hist3Dcolor_Basics_CPP
	if algorithmName = "Hist3Dcolor_Diff" Then return new Hist3Dcolor_Diff
	if algorithmName = "Hist3Dcolor_PlotHist1D" Then return new Hist3Dcolor_PlotHist1D
	if algorithmName = "Hist3Dcolor_Reduction" Then return new Hist3Dcolor_Reduction
	if algorithmName = "Hist3Dcolor_Select" Then return new Hist3Dcolor_Select
	if algorithmName = "Hist3Dcolor_TopXColors" Then return new Hist3Dcolor_TopXColors
	if algorithmName = "Hist3Dcolor_UniqueRGBPixels" Then return new Hist3Dcolor_UniqueRGBPixels
	if algorithmName = "Hist3Dcolor_Vector" Then return new Hist3Dcolor_Vector
	if algorithmName = "Hist3Dcolor_ZeroGroups" Then return new Hist3Dcolor_ZeroGroups
	if algorithmName = "History_Basics" Then return new History_Basics
	if algorithmName = "History_BasicsDiff" Then return new History_BasicsDiff
	if algorithmName = "History_BasicsNoSaturation" Then return new History_BasicsNoSaturation
	if algorithmName = "History_Cloud" Then return new History_Cloud
	if algorithmName = "History_MotionRect" Then return new History_MotionRect
	if algorithmName = "HistPeak2D_Basics" Then return new HistPeak2D_Basics
	if algorithmName = "HistPeak2D_BGR" Then return new HistPeak2D_BGR
	if algorithmName = "HistPeak2D_Edges" Then return new HistPeak2D_Edges
	if algorithmName = "HistPeak2D_HotSide" Then return new HistPeak2D_HotSide
	if algorithmName = "HistPeak2D_HotTop" Then return new HistPeak2D_HotTop
	if algorithmName = "HistPeak2D_HSV" Then return new HistPeak2D_HSV
	if algorithmName = "HistPeak2D_NotHotTop" Then return new HistPeak2D_NotHotTop
	if algorithmName = "HistPeak2D_RGB" Then return new HistPeak2D_RGB
	if algorithmName = "HistPeak2D_TopAndSide" Then return new HistPeak2D_TopAndSide
	if algorithmName = "HistValley_Basics" Then return new HistValley_Basics
	if algorithmName = "HistValley_Colors" Then return new HistValley_Colors
	if algorithmName = "HistValley_Depth" Then return new HistValley_Depth
	if algorithmName = "HistValley_Depth1" Then return new HistValley_Depth1
	if algorithmName = "HistValley_Diff" Then return new HistValley_Diff
	if algorithmName = "HistValley_EdgeDraw" Then return new HistValley_EdgeDraw
	if algorithmName = "HistValley_FromPeaks" Then return new HistValley_FromPeaks
	if algorithmName = "HistValley_GrayKalman" Then return new HistValley_GrayKalman
	if algorithmName = "HistValley_GrayScale1" Then return new HistValley_GrayScale1
	if algorithmName = "HistValley_OptionsAuto" Then return new HistValley_OptionsAuto
	if algorithmName = "HistValley_Peaks" Then return new HistValley_Peaks
	if algorithmName = "HistValley_Simple" Then return new HistValley_Simple
	if algorithmName = "HistValley_Test" Then return new HistValley_Test
	if algorithmName = "HistValley_Tiers" Then return new HistValley_Tiers
	if algorithmName = "HMM_Example_CPP" Then return new HMM_Example_CPP
	if algorithmName = "HOG_Basics" Then return new HOG_Basics
	if algorithmName = "Homography_Basics" Then return new Homography_Basics
	if algorithmName = "Homography_FPoly" Then return new Homography_FPoly
	if algorithmName = "Horizon_Basics" Then return new Horizon_Basics
	if algorithmName = "Horizon_Basics1" Then return new Horizon_Basics1
	if algorithmName = "Horizon_ExternalTest" Then return new Horizon_ExternalTest
	if algorithmName = "Horizon_FindNonZero" Then return new Horizon_FindNonZero
	if algorithmName = "Horizon_FindNonZeroOld" Then return new Horizon_FindNonZeroOld
	if algorithmName = "Horizon_Regress" Then return new Horizon_Regress
	if algorithmName = "Horizon_UnstableResults" Then return new Horizon_UnstableResults
	if algorithmName = "Horizon_Validate" Then return new Horizon_Validate
	if algorithmName = "Hough_Basics" Then return new Hough_Basics
	if algorithmName = "Hough_Circles" Then return new Hough_Circles
	if algorithmName = "Hough_Featureless" Then return new Hough_Featureless
	if algorithmName = "Hough_FeatureLessTopX" Then return new Hough_FeatureLessTopX
	if algorithmName = "Hough_LaneFinder" Then return new Hough_LaneFinder
	if algorithmName = "Hough_Lines_MT" Then return new Hough_Lines_MT
	if algorithmName = "Hough_Sudoku" Then return new Hough_Sudoku
	if algorithmName = "Hull_Basics" Then return new Hull_Basics
	if algorithmName = "Hull_Contour" Then return new Hull_Contour
	if algorithmName = "Image_Basics" Then return new Image_Basics
	if algorithmName = "Image_CellStats" Then return new Image_CellStats
	if algorithmName = "Image_MSER" Then return new Image_MSER
	if algorithmName = "Image_RedCloudColor" Then return new Image_RedCloudColor
	if algorithmName = "Image_RedCloudColorSeries" Then return new Image_RedCloudColorSeries
	if algorithmName = "Image_Series" Then return new Image_Series
	if algorithmName = "ImShow_Basics" Then return new ImShow_Basics
	if algorithmName = "ImShow_CV32FC3" Then return new ImShow_CV32FC3
	if algorithmName = "ImShow_WaitKey" Then return new ImShow_WaitKey
	if algorithmName = "IMU_AllMethods" Then return new IMU_AllMethods
	if algorithmName = "IMU_Average" Then return new IMU_Average
	if algorithmName = "IMU_Basics" Then return new IMU_Basics
	if algorithmName = "IMU_BasicsKalman" Then return new IMU_BasicsKalman
	if algorithmName = "IMU_BasicsWithOptions" Then return new IMU_BasicsWithOptions
	if algorithmName = "IMU_GMatrix" Then return new IMU_GMatrix
	if algorithmName = "IMU_GMatrixWithOptions" Then return new IMU_GMatrixWithOptions
	if algorithmName = "IMU_IscameraStable" Then return new IMU_IscameraStable
	if algorithmName = "IMU_Kalman" Then return new IMU_Kalman
	if algorithmName = "IMU_Lines" Then return new IMU_Lines
	if algorithmName = "IMU_Plot" Then return new IMU_Plot
	if algorithmName = "IMU_PlotAcceleration" Then return new IMU_PlotAcceleration
	if algorithmName = "IMU_PlotAngularVelocity" Then return new IMU_PlotAngularVelocity
	if algorithmName = "IMU_PlotCompareIMU" Then return new IMU_PlotCompareIMU
	if algorithmName = "IMU_PlotGravityAngles" Then return new IMU_PlotGravityAngles
	if algorithmName = "IMU_PlotHostFrameScalar" Then return new IMU_PlotHostFrameScalar
	if algorithmName = "IMU_PlotHostFrameTimes" Then return new IMU_PlotHostFrameTimes
	if algorithmName = "IMU_PlotIMUFrameTime" Then return new IMU_PlotIMUFrameTime
	if algorithmName = "IMU_PlotTotalDelay" Then return new IMU_PlotTotalDelay
	if algorithmName = "IMU_Stabilize" Then return new IMU_Stabilize
	if algorithmName = "IMU_VelocityPlot" Then return new IMU_VelocityPlot
	if algorithmName = "IMU_VerticalAngles" Then return new IMU_VerticalAngles
	if algorithmName = "IMU_VerticalVerify" Then return new IMU_VerticalVerify
	if algorithmName = "InPaint_Basics" Then return new InPaint_Basics
	if algorithmName = "InPaint_Depth" Then return new InPaint_Depth
	if algorithmName = "InPaint_Noise" Then return new InPaint_Noise
	if algorithmName = "Interpolate_Basics" Then return new Interpolate_Basics
	if algorithmName = "Interpolate_Difference" Then return new Interpolate_Difference
	if algorithmName = "Interpolate_Kalman" Then return new Interpolate_Kalman
	if algorithmName = "Interpolate_Lines" Then return new Interpolate_Lines
	if algorithmName = "Interpolate_QuarterBeat" Then return new Interpolate_QuarterBeat
	if algorithmName = "Kalman_Basics" Then return new Kalman_Basics
	if algorithmName = "Kalman_Compare" Then return new Kalman_Compare
	if algorithmName = "Kalman_CVMat" Then return new Kalman_CVMat
	if algorithmName = "Kalman_Depth32f" Then return new Kalman_Depth32f
	if algorithmName = "Kalman_DepthSmall" Then return new Kalman_DepthSmall
	if algorithmName = "Kalman_ImageSmall" Then return new Kalman_ImageSmall
	if algorithmName = "Kalman_MousePredict" Then return new Kalman_MousePredict
	if algorithmName = "Kalman_RotatingPoint" Then return new Kalman_RotatingPoint
	if algorithmName = "Kalman_Single" Then return new Kalman_Single
	if algorithmName = "Kalman_VB" Then return new Kalman_VB
	if algorithmName = "Kalman_VB_Basics" Then return new Kalman_VB_Basics
	if algorithmName = "Keyboard_Basics" Then return new Keyboard_Basics
	if algorithmName = "KLT_Basics" Then return new KLT_Basics
	if algorithmName = "KLT_OpticalFlow" Then return new KLT_OpticalFlow
	if algorithmName = "KMeans_Basics" Then return new KMeans_Basics
	if algorithmName = "KMeans_CompareMulti" Then return new KMeans_CompareMulti
	if algorithmName = "KMeans_CustomData" Then return new KMeans_CustomData
	if algorithmName = "KMeans_Depth" Then return new KMeans_Depth
	if algorithmName = "KMeans_DepthPlusGray" Then return new KMeans_DepthPlusGray
	if algorithmName = "KMeans_Dimensions" Then return new KMeans_Dimensions
	if algorithmName = "KMeans_Edges" Then return new KMeans_Edges
	if algorithmName = "KMeans_Fuzzy" Then return new KMeans_Fuzzy
	if algorithmName = "KMeans_Image" Then return new KMeans_Image
	if algorithmName = "KMeans_k2_to_k8" Then return new KMeans_k2_to_k8
	if algorithmName = "KMeans_MultiChannel" Then return new KMeans_MultiChannel
	if algorithmName = "KMeans_MultiGaussian_CPP" Then return new KMeans_MultiGaussian_CPP
	if algorithmName = "KMeans_SimKColor" Then return new KMeans_SimKColor
	if algorithmName = "KMeans_SimKDepth" Then return new KMeans_SimKDepth
	if algorithmName = "KMeans_Simple_CPP" Then return new KMeans_Simple_CPP
	if algorithmName = "KMeans_TierCount" Then return new KMeans_TierCount
	if algorithmName = "KMeans_Valleys" Then return new KMeans_Valleys
	if algorithmName = "KNN_Basics" Then return new KNN_Basics
	if algorithmName = "KNN_BasicsOld" Then return new KNN_BasicsOld
	if algorithmName = "KNN_ClosestLine" Then return new KNN_ClosestLine
	if algorithmName = "KNN_ClosestTracker" Then return new KNN_ClosestTracker
	if algorithmName = "KNN_ClosestVertical" Then return new KNN_ClosestVertical
	if algorithmName = "KNN_Core" Then return new KNN_Core
	if algorithmName = "KNN_Core2DTest" Then return new KNN_Core2DTest
	if algorithmName = "KNN_Core3D" Then return new KNN_Core3D
	if algorithmName = "KNN_Core3DTest" Then return new KNN_Core3DTest
	if algorithmName = "KNN_Core4D" Then return new KNN_Core4D
	if algorithmName = "KNN_Core4DTest" Then return new KNN_Core4DTest
	if algorithmName = "KNN_CoreN" Then return new KNN_CoreN
	if algorithmName = "KNN_CoreNTest" Then return new KNN_CoreNTest
	if algorithmName = "KNN_Emax" Then return new KNN_Emax
	if algorithmName = "KNN_Farthest" Then return new KNN_Farthest
	if algorithmName = "KNN_TrackEach" Then return new KNN_TrackEach
	if algorithmName = "KNN_TrackMean" Then return new KNN_TrackMean
	if algorithmName = "LaneFinder_Basics" Then return new LaneFinder_Basics
	if algorithmName = "LaneFinder_Edges" Then return new LaneFinder_Edges
	if algorithmName = "LaneFinder_HLSColor" Then return new LaneFinder_HLSColor
	if algorithmName = "LaneFinder_ROI" Then return new LaneFinder_ROI
	if algorithmName = "LaneFinder_SlopeIntercept" Then return new LaneFinder_SlopeIntercept
	if algorithmName = "LaneFinder_Videos" Then return new LaneFinder_Videos
	if algorithmName = "Laplacian_Basics" Then return new Laplacian_Basics
	if algorithmName = "Laplacian_Blur" Then return new Laplacian_Blur
	if algorithmName = "Laplacian_PyramidFilter" Then return new Laplacian_PyramidFilter
	if algorithmName = "LDA_Test" Then return new LDA_Test
	if algorithmName = "LeftRight_Basics" Then return new LeftRight_Basics
	if algorithmName = "LeftRight_BRISK" Then return new LeftRight_BRISK
	if algorithmName = "LeftRight_CompareRaw" Then return new LeftRight_CompareRaw
	if algorithmName = "LeftRight_Edges" Then return new LeftRight_Edges
	if algorithmName = "LeftRight_Features" Then return new LeftRight_Features
	if algorithmName = "LeftRight_Lines" Then return new LeftRight_Lines
	if algorithmName = "LeftRight_Markers" Then return new LeftRight_Markers
	if algorithmName = "LeftRight_Markers1" Then return new LeftRight_Markers1
	if algorithmName = "LeftRight_Palettized" Then return new LeftRight_Palettized
	if algorithmName = "LeftRight_RedCloudBoth" Then return new LeftRight_RedCloudBoth
	if algorithmName = "LeftRight_RedCloudLeft" Then return new LeftRight_RedCloudLeft
	if algorithmName = "LeftRight_RedCloudRight" Then return new LeftRight_RedCloudRight
	if algorithmName = "LeftRight_Reduction" Then return new LeftRight_Reduction
	if algorithmName = "Line_Basics" Then return new Line_Basics
	if algorithmName = "Line_Canny" Then return new Line_Canny
	if algorithmName = "Line_Cells" Then return new Line_Cells
	if algorithmName = "Line_CellsVertHoriz" Then return new Line_CellsVertHoriz
	if algorithmName = "Line_ColorClass" Then return new Line_ColorClass
	if algorithmName = "Line_DisplayInfo" Then return new Line_DisplayInfo
	if algorithmName = "Line_FromContours" Then return new Line_FromContours
	if algorithmName = "Line_GCloud" Then return new Line_GCloud
	if algorithmName = "Line_Gravity" Then return new Line_Gravity
	if algorithmName = "Line_GravityIntersect" Then return new Line_GravityIntersect
	if algorithmName = "Line_InDepthAndBGR" Then return new Line_InDepthAndBGR
	if algorithmName = "Line_Intercepts" Then return new Line_Intercepts
	if algorithmName = "Line_InterceptsUI" Then return new Line_InterceptsUI
	if algorithmName = "Line_Intersection" Then return new Line_Intersection
	if algorithmName = "Line_KNN" Then return new Line_KNN
	if algorithmName = "Line_LeftRightImages" Then return new Line_LeftRightImages
	if algorithmName = "Line_Movement" Then return new Line_Movement
	if algorithmName = "Line_Nearest" Then return new Line_Nearest
	if algorithmName = "Line_Perpendicular" Then return new Line_Perpendicular
	if algorithmName = "Line_PointSlope" Then return new Line_PointSlope
	if algorithmName = "Line_RegionsVB" Then return new Line_RegionsVB
	if algorithmName = "Line_SubsetRect" Then return new Line_SubsetRect
	if algorithmName = "Line_TimeView" Then return new Line_TimeView
	if algorithmName = "Line_TimeViewLines" Then return new Line_TimeViewLines
	if algorithmName = "Line_Verticals" Then return new Line_Verticals
	if algorithmName = "Line_Verts" Then return new Line_Verts
	if algorithmName = "Line_ViewSide" Then return new Line_ViewSide
	if algorithmName = "Line_ViewTop" Then return new Line_ViewTop
	if algorithmName = "Line3D_CandidatesAll" Then return new Line3D_CandidatesAll
	if algorithmName = "Line3D_CandidatesFirstLast" Then return new Line3D_CandidatesFirstLast
	if algorithmName = "Line3D_Checks" Then return new Line3D_Checks
	if algorithmName = "Line3D_Draw" Then return new Line3D_Draw
	if algorithmName = "LinearRegression_Basics" Then return new LinearRegression_Basics
	if algorithmName = "LinearRegression_Random" Then return new LinearRegression_Random
	if algorithmName = "LinearRegression_Test" Then return new LinearRegression_Test
	if algorithmName = "LineCoin_Basics" Then return new LineCoin_Basics
	if algorithmName = "LineCoin_HistoryIntercept" Then return new LineCoin_HistoryIntercept
	if algorithmName = "LineCoin_Parallel" Then return new LineCoin_Parallel
	if algorithmName = "LongLine_Basics" Then return new LongLine_Basics
	if algorithmName = "LongLine_Consistent" Then return new LongLine_Consistent
	if algorithmName = "LongLine_Core" Then return new LongLine_Core
	if algorithmName = "LongLine_Depth" Then return new LongLine_Depth
	if algorithmName = "LongLine_Extend" Then return new LongLine_Extend
	if algorithmName = "LongLine_ExtendAll" Then return new LongLine_ExtendAll
	if algorithmName = "LongLine_ExtendParallel" Then return new LongLine_ExtendParallel
	if algorithmName = "LongLine_ExtendTest" Then return new LongLine_ExtendTest
	if algorithmName = "LongLine_History" Then return new LongLine_History
	if algorithmName = "LongLine_Match" Then return new LongLine_Match
	if algorithmName = "LongLine_NoDepth" Then return new LongLine_NoDepth
	if algorithmName = "LongLine_Point" Then return new LongLine_Point
	if algorithmName = "LUT_Basics" Then return new LUT_Basics
	if algorithmName = "LUT_Create" Then return new LUT_Create
	if algorithmName = "LUT_Custom" Then return new LUT_Custom
	if algorithmName = "LUT_Depth32f" Then return new LUT_Depth32f
	if algorithmName = "LUT_Equalized" Then return new LUT_Equalized
	if algorithmName = "LUT_RedCloud" Then return new LUT_RedCloud
	if algorithmName = "LUT_Reduction" Then return new LUT_Reduction
	if algorithmName = "LUT_RGBDepth" Then return new LUT_RGBDepth
	if algorithmName = "LUT_Sliders" Then return new LUT_Sliders
	if algorithmName = "LUT_Watershed" Then return new LUT_Watershed
	if algorithmName = "Magnify_Basics" Then return new Magnify_Basics
	if algorithmName = "Magnify_Example" Then return new Magnify_Example
	if algorithmName = "Mat_2to1" Then return new Mat_2to1
	if algorithmName = "Mat_4Click" Then return new Mat_4Click
	if algorithmName = "Mat_4to1" Then return new Mat_4to1
	if algorithmName = "Mat_Inverse" Then return new Mat_Inverse
	if algorithmName = "Mat_Managed" Then return new Mat_Managed
	if algorithmName = "Mat_MatToPoint" Then return new Mat_MatToPoint
	if algorithmName = "Mat_MultiplyReview" Then return new Mat_MultiplyReview
	if algorithmName = "Mat_PointToMat" Then return new Mat_PointToMat
	if algorithmName = "Mat_Repeat" Then return new Mat_Repeat
	if algorithmName = "Mat_RowColRange" Then return new Mat_RowColRange
	if algorithmName = "Mat_ToList" Then return new Mat_ToList
	if algorithmName = "Mat_Transpose" Then return new Mat_Transpose
	if algorithmName = "Mat_Tricks" Then return new Mat_Tricks
	if algorithmName = "Match_Basics" Then return new Match_Basics
	if algorithmName = "Match_BasicsTest" Then return new Match_BasicsTest
	if algorithmName = "Match_BestEntropy" Then return new Match_BestEntropy
	if algorithmName = "Match_DrawRect" Then return new Match_DrawRect
	if algorithmName = "Match_GoodFeatureKNN" Then return new Match_GoodFeatureKNN
	if algorithmName = "Match_LinePairTest" Then return new Match_LinePairTest
	if algorithmName = "Match_Lines" Then return new Match_Lines
	if algorithmName = "Match_Motion" Then return new Match_Motion
	if algorithmName = "Match_Point" Then return new Match_Point
	if algorithmName = "Match_Points" Then return new Match_Points
	if algorithmName = "Match_PointSlope" Then return new Match_PointSlope
	if algorithmName = "Match_RandomTest" Then return new Match_RandomTest
	if algorithmName = "Match_tCell" Then return new Match_tCell
	if algorithmName = "Match_TraceRedC" Then return new Match_TraceRedC
	if algorithmName = "MatchLine_Basics" Then return new MatchLine_Basics
	if algorithmName = "MatchLine_Gravity" Then return new MatchLine_Gravity
	if algorithmName = "MatchLine_Horizon" Then return new MatchLine_Horizon
	if algorithmName = "MatchLine_Longest" Then return new MatchLine_Longest
	if algorithmName = "MatchRect_Basics" Then return new MatchRect_Basics
	if algorithmName = "MatchRect_RedCloud" Then return new MatchRect_RedCloud
	if algorithmName = "MatchShapes_Basics" Then return new MatchShapes_Basics
	if algorithmName = "MatchShapes_Contours" Then return new MatchShapes_Contours
	if algorithmName = "MatchShapes_Hulls" Then return new MatchShapes_Hulls
	if algorithmName = "MatchShapes_LeftRight" Then return new MatchShapes_LeftRight
	if algorithmName = "MatchShapes_Nearby" Then return new MatchShapes_Nearby
	if algorithmName = "MatchShapes_NearbyHull" Then return new MatchShapes_NearbyHull
	if algorithmName = "Math_DepthMeanStdev" Then return new Math_DepthMeanStdev
	if algorithmName = "Math_ImageAverage" Then return new Math_ImageAverage
	if algorithmName = "Math_ImageMaskedAverage" Then return new Math_ImageMaskedAverage
	if algorithmName = "Math_Median_CDF" Then return new Math_Median_CDF
	if algorithmName = "Math_ParallelTest" Then return new Math_ParallelTest
	if algorithmName = "Math_RGBCorrelation" Then return new Math_RGBCorrelation
	if algorithmName = "Math_Stdev" Then return new Math_Stdev
	if algorithmName = "Math_StdevBoundary" Then return new Math_StdevBoundary
	if algorithmName = "Math_Subtract" Then return new Math_Subtract
	if algorithmName = "Math_Template" Then return new Math_Template
	if algorithmName = "MatrixInverse_OpenCV" Then return new MatrixInverse_OpenCV
	if algorithmName = "MeanShift_Basics" Then return new MeanShift_Basics
	if algorithmName = "MeanShift_Depth" Then return new MeanShift_Depth
	if algorithmName = "MeanSubtraction_Basics" Then return new MeanSubtraction_Basics
	if algorithmName = "Mesh_Basics" Then return new Mesh_Basics
	if algorithmName = "Mesh_Features" Then return new Mesh_Features
	if algorithmName = "MiniCloud_Basics" Then return new MiniCloud_Basics
	if algorithmName = "MiniCloud_Rotate" Then return new MiniCloud_Rotate
	if algorithmName = "MiniCloud_RotateAngle" Then return new MiniCloud_RotateAngle
	if algorithmName = "MiniCloud_RotateSinglePass" Then return new MiniCloud_RotateSinglePass
	if algorithmName = "ML_Basics" Then return new ML_Basics
	if algorithmName = "ML_Color2Depth" Then return new ML_Color2Depth
	if algorithmName = "ML_ColorInTier2Depth" Then return new ML_ColorInTier2Depth
	if algorithmName = "ML_DepthFromColor" Then return new ML_DepthFromColor
	if algorithmName = "ML_DepthFromXYColor" Then return new ML_DepthFromXYColor
	if algorithmName = "ML_FillRGBDepth_MT" Then return new ML_FillRGBDepth_MT
	if algorithmName = "ML_RemoveDups_CPP" Then return new ML_RemoveDups_CPP
	if algorithmName = "Model_Basics" Then return new Model_Basics
	if algorithmName = "Model_CellZoom" Then return new Model_CellZoom
	if algorithmName = "Model_FlatSurfaces" Then return new Model_FlatSurfaces
	if algorithmName = "Model_OpenGL_Sliders" Then return new Model_OpenGL_Sliders
	if algorithmName = "Model_RedCloud" Then return new Model_RedCloud
	if algorithmName = "Moments_Basics" Then return new Moments_Basics
	if algorithmName = "Moments_CentroidKalman" Then return new Moments_CentroidKalman
	if algorithmName = "Motion_Basics" Then return new Motion_Basics
	if algorithmName = "Motion_Basics_QT" Then return new Motion_Basics_QT
	if algorithmName = "Motion_BasicsNew" Then return new Motion_BasicsNew
	if algorithmName = "Motion_BasicsQuarterRes" Then return new Motion_BasicsQuarterRes
	if algorithmName = "Motion_CCmerge" Then return new Motion_CCmerge
	if algorithmName = "Motion_Color" Then return new Motion_Color
	if algorithmName = "Motion_Contours" Then return new Motion_Contours
	if algorithmName = "Motion_Depth" Then return new Motion_Depth
	if algorithmName = "Motion_DepthReconstructed" Then return new Motion_DepthReconstructed
	if algorithmName = "Motion_Diff" Then return new Motion_Diff
	if algorithmName = "Motion_Enclosing" Then return new Motion_Enclosing
	if algorithmName = "Motion_Grayscale" Then return new Motion_Grayscale
	if algorithmName = "Motion_Grid" Then return new Motion_Grid
	if algorithmName = "Motion_Grid_MP" Then return new Motion_Grid_MP
	if algorithmName = "Motion_History" Then return new Motion_History
	if algorithmName = "Motion_HistoryTest" Then return new Motion_HistoryTest
	if algorithmName = "Motion_Intersect" Then return new Motion_Intersect
	if algorithmName = "Motion_MinRect" Then return new Motion_MinRect
	if algorithmName = "Motion_PixelDiff" Then return new Motion_PixelDiff
	if algorithmName = "Motion_PointCloud" Then return new Motion_PointCloud
	if algorithmName = "Motion_RectTest" Then return new Motion_RectTest
	if algorithmName = "Motion_RedCloud" Then return new Motion_RedCloud
	if algorithmName = "Motion_Simple" Then return new Motion_Simple
	if algorithmName = "Motion_ThruCorrelation" Then return new Motion_ThruCorrelation
	if algorithmName = "Mouse_Basics" Then return new Mouse_Basics
	if algorithmName = "Mouse_ClickPointUsage" Then return new Mouse_ClickPointUsage
	if algorithmName = "Mouse_LeftClickZoom" Then return new Mouse_LeftClickZoom
	if algorithmName = "MSER_Basics" Then return new MSER_Basics
	if algorithmName = "MSER_Basics1" Then return new MSER_Basics1
	if algorithmName = "MSER_Basics2" Then return new MSER_Basics2
	if algorithmName = "MSER_BasicsNew" Then return new MSER_BasicsNew
	if algorithmName = "MSER_Binarize" Then return new MSER_Binarize
	if algorithmName = "MSER_CPP" Then return new MSER_CPP
	if algorithmName = "MSER_Detect" Then return new MSER_Detect
	if algorithmName = "MSER_Grayscale" Then return new MSER_Grayscale
	if algorithmName = "MSER_Hulls" Then return new MSER_Hulls
	if algorithmName = "MSER_Left" Then return new MSER_Left
	if algorithmName = "MSER_LeftRight" Then return new MSER_LeftRight
	if algorithmName = "MSER_Mask_CPP" Then return new MSER_Mask_CPP
	if algorithmName = "MSER_RedCloud" Then return new MSER_RedCloud
	if algorithmName = "MSER_ReducedRGB" Then return new MSER_ReducedRGB
	if algorithmName = "MSER_RegionLeft" Then return new MSER_RegionLeft
	if algorithmName = "MSER_RegionLeftRight" Then return new MSER_RegionLeftRight
	if algorithmName = "MSER_RegionRight" Then return new MSER_RegionRight
	if algorithmName = "MSER_Regions" Then return new MSER_Regions
	if algorithmName = "MSER_Right" Then return new MSER_Right
	if algorithmName = "MSER_ROI" Then return new MSER_ROI
	if algorithmName = "MSER_SyntheticInput" Then return new MSER_SyntheticInput
	if algorithmName = "MSER_TestExample" Then return new MSER_TestExample
	if algorithmName = "MSER_TestSynthetic" Then return new MSER_TestSynthetic
	if algorithmName = "MultiDimensionScaling_Cities" Then return new MultiDimensionScaling_Cities
	if algorithmName = "Neighbors_Basics" Then return new Neighbors_Basics
	if algorithmName = "Neighbors_ColorOnly" Then return new Neighbors_ColorOnly
	if algorithmName = "Neighbors_Intersects" Then return new Neighbors_Intersects
	if algorithmName = "Neighbors_Precise" Then return new Neighbors_Precise
	if algorithmName = "Neighbors_PreciseTest" Then return new Neighbors_PreciseTest
	if algorithmName = "OEX_BasicLinearTransforms" Then return new OEX_BasicLinearTransforms
	if algorithmName = "OEX_BasicLinearTransformsTrackBar" Then return new OEX_BasicLinearTransformsTrackBar
	if algorithmName = "OEX_bgfg_segm" Then return new OEX_bgfg_segm
	if algorithmName = "OEX_bgSub" Then return new OEX_bgSub
	if algorithmName = "OEX_CalcBackProject_Demo1" Then return new OEX_CalcBackProject_Demo1
	if algorithmName = "OEX_CalcBackProject_Demo2" Then return new OEX_CalcBackProject_Demo2
	if algorithmName = "OEX_Core_Reduce" Then return new OEX_Core_Reduce
	if algorithmName = "OEX_Core_Split" Then return new OEX_Core_Split
	if algorithmName = "OEX_delaunay2" Then return new OEX_delaunay2
	if algorithmName = "OEX_Filter2D" Then return new OEX_Filter2D
	if algorithmName = "OEX_FitEllipse" Then return new OEX_FitEllipse
	if algorithmName = "OEX_GoodFeaturesToTrackDemo" Then return new OEX_GoodFeaturesToTrackDemo
	if algorithmName = "OEX_MeanShift" Then return new OEX_MeanShift
	if algorithmName = "OEX_PointPolygonTest_demo" Then return new OEX_PointPolygonTest_demo
	if algorithmName = "OEX_Points_Classifier" Then return new OEX_Points_Classifier
	if algorithmName = "OEX_Remap" Then return new OEX_Remap
	if algorithmName = "OEX_Threshold" Then return new OEX_Threshold
	if algorithmName = "OEX_Threshold_Inrange" Then return new OEX_Threshold_Inrange
	if algorithmName = "OilPaint_ManualVB" Then return new OilPaint_ManualVB
	if algorithmName = "OilPaint_Pointilism" Then return new OilPaint_Pointilism
	if algorithmName = "OpAuto_FloorCeiling" Then return new OpAuto_FloorCeiling
	if algorithmName = "OpAuto_MSER" Then return new OpAuto_MSER
	if algorithmName = "OpAuto_Peaks2D" Then return new OpAuto_Peaks2D
	if algorithmName = "OpAuto_Peaks2DGrid" Then return new OpAuto_Peaks2DGrid
	if algorithmName = "OpAuto_PixelDifference" Then return new OpAuto_PixelDifference
	if algorithmName = "OpAuto_Valley" Then return new OpAuto_Valley
	if algorithmName = "OpAuto_XRange" Then return new OpAuto_XRange
	if algorithmName = "OpAuto_YRange" Then return new OpAuto_YRange
	if algorithmName = "OpenGL_Basics" Then return new OpenGL_Basics
	if algorithmName = "OpenGL_BasicsMouse" Then return new OpenGL_BasicsMouse
	if algorithmName = "OpenGL_BasicsSliders" Then return new OpenGL_BasicsSliders
	if algorithmName = "OpenGL_Bricks" Then return new OpenGL_Bricks
	if algorithmName = "OpenGL_CloudHistory" Then return new OpenGL_CloudHistory
	if algorithmName = "OpenGL_CloudMisses" Then return new OpenGL_CloudMisses
	if algorithmName = "OpenGL_Color3D" Then return new OpenGL_Color3D
	if algorithmName = "OpenGL_ColorBin4Way" Then return new OpenGL_ColorBin4Way
	if algorithmName = "OpenGL_ColorRaw" Then return new OpenGL_ColorRaw
	if algorithmName = "OpenGL_ColorReduced3D" Then return new OpenGL_ColorReduced3D
	if algorithmName = "OpenGL_Contours" Then return new OpenGL_Contours
	if algorithmName = "OpenGL_Density2D" Then return new OpenGL_Density2D
	if algorithmName = "OpenGL_DiffDepth" Then return new OpenGL_DiffDepth
	if algorithmName = "OpenGL_DrawCube" Then return new OpenGL_DrawCube
	if algorithmName = "OpenGL_DrawHull" Then return new OpenGL_DrawHull
	if algorithmName = "OpenGL_DrawHulls" Then return new OpenGL_DrawHulls
	if algorithmName = "OpenGL_Duster" Then return new OpenGL_Duster
	if algorithmName = "OpenGL_DusterY" Then return new OpenGL_DusterY
	if algorithmName = "OpenGL_Filtered3D" Then return new OpenGL_Filtered3D
	if algorithmName = "OpenGL_FilteredBoth" Then return new OpenGL_FilteredBoth
	if algorithmName = "OpenGL_FilteredSideView" Then return new OpenGL_FilteredSideView
	if algorithmName = "OpenGL_FilteredTopView" Then return new OpenGL_FilteredTopView
	if algorithmName = "OpenGL_FlatCeiling" Then return new OpenGL_FlatCeiling
	if algorithmName = "OpenGL_FlatFloor" Then return new OpenGL_FlatFloor
	if algorithmName = "OpenGL_FlatStudy1" Then return new OpenGL_FlatStudy1
	if algorithmName = "OpenGL_FlatStudy2" Then return new OpenGL_FlatStudy2
	if algorithmName = "OpenGL_FlatStudy3" Then return new OpenGL_FlatStudy3
	if algorithmName = "OpenGL_FlatSurfaces" Then return new OpenGL_FlatSurfaces
	if algorithmName = "OpenGL_FPolyCloud" Then return new OpenGL_FPolyCloud
	if algorithmName = "OpenGL_GradientPhase" Then return new OpenGL_GradientPhase
	if algorithmName = "OpenGL_GravityAverage" Then return new OpenGL_GravityAverage
	if algorithmName = "OpenGL_GravityKalman" Then return new OpenGL_GravityKalman
	if algorithmName = "OpenGL_GravityTransform" Then return new OpenGL_GravityTransform
	if algorithmName = "OpenGL_HistDepth3D" Then return new OpenGL_HistDepth3D
	if algorithmName = "OpenGL_HistNorm3D" Then return new OpenGL_HistNorm3D
	if algorithmName = "OpenGL_NoSolo" Then return new OpenGL_NoSolo
	if algorithmName = "OpenGL_OnlyPlanes" Then return new OpenGL_OnlyPlanes
	if algorithmName = "OpenGL_PatchHorizontal" Then return new OpenGL_PatchHorizontal
	if algorithmName = "OpenGL_PCLineCandidates" Then return new OpenGL_PCLineCandidates
	if algorithmName = "OpenGL_PClinesAll" Then return new OpenGL_PClinesAll
	if algorithmName = "OpenGL_PClinesFirstLast" Then return new OpenGL_PClinesFirstLast
	if algorithmName = "OpenGL_PCpoints" Then return new OpenGL_PCpoints
	if algorithmName = "OpenGL_PCpointsPlane" Then return new OpenGL_PCpointsPlane
	if algorithmName = "OpenGL_PeakFlat" Then return new OpenGL_PeakFlat
	if algorithmName = "OpenGL_PlaneClusters3D" Then return new OpenGL_PlaneClusters3D
	if algorithmName = "OpenGL_Profile" Then return new OpenGL_Profile
	if algorithmName = "OpenGL_ProfileSweep" Then return new OpenGL_ProfileSweep
	if algorithmName = "OpenGL_Pyramid" Then return new OpenGL_Pyramid
	if algorithmName = "OpenGL_QuadHulls" Then return new OpenGL_QuadHulls
	if algorithmName = "OpenGL_QuadMinMax" Then return new OpenGL_QuadMinMax
	if algorithmName = "OpenGL_QuadSimple" Then return new OpenGL_QuadSimple
	if algorithmName = "OpenGL_Rebuilt" Then return new OpenGL_Rebuilt
	if algorithmName = "OpenGL_RedCloud" Then return new OpenGL_RedCloud
	if algorithmName = "OpenGL_RedCloudCell" Then return new OpenGL_RedCloudCell
	if algorithmName = "OpenGL_RedCloudSpectrum" Then return new OpenGL_RedCloudSpectrum
	if algorithmName = "OpenGL_RedTrack" Then return new OpenGL_RedTrack
	if algorithmName = "OpenGL_ReducedSideView" Then return new OpenGL_ReducedSideView
	if algorithmName = "OpenGL_ReducedXYZ" Then return new OpenGL_ReducedXYZ
	if algorithmName = "OpenGL_Reduction" Then return new OpenGL_Reduction
	if algorithmName = "OpenGL_Sierpinski" Then return new OpenGL_Sierpinski
	if algorithmName = "OpenGL_SoloPointsRemoved" Then return new OpenGL_SoloPointsRemoved
	if algorithmName = "OpenGL_StableMinMax" Then return new OpenGL_StableMinMax
	if algorithmName = "OpenGL_StructuredCloud" Then return new OpenGL_StructuredCloud
	if algorithmName = "OpenGL_Tessellate" Then return new OpenGL_Tessellate
	if algorithmName = "OpenGL_TessellateCell" Then return new OpenGL_TessellateCell
	if algorithmName = "OpenGL_TessellateRGB" Then return new OpenGL_TessellateRGB
	if algorithmName = "OpenGL_TextureShuffle" Then return new OpenGL_TextureShuffle
	if algorithmName = "OpenGL_Tiles" Then return new OpenGL_Tiles
	if algorithmName = "OpenGL_TilesQuad" Then return new OpenGL_TilesQuad
	if algorithmName = "OpenGL_VerticalOrHorizontal" Then return new OpenGL_VerticalOrHorizontal
	if algorithmName = "OpenGL_VerticalSingle" Then return new OpenGL_VerticalSingle
	if algorithmName = "OpenGL_ViewObjects" Then return new OpenGL_ViewObjects
	if algorithmName = "OpenGL_World" Then return new OpenGL_World
	if algorithmName = "Options_AddWeighted" Then return new Options_AddWeighted
	if algorithmName = "Options_AddWeightedAccum" Then return new Options_AddWeightedAccum
	if algorithmName = "Options_Annealing" Then return new Options_Annealing
	if algorithmName = "Options_ApproxPoly" Then return new Options_ApproxPoly
	if algorithmName = "Options_AsciiArt" Then return new Options_AsciiArt
	if algorithmName = "Options_BackProject2D" Then return new Options_BackProject2D
	if algorithmName = "Options_Bernson" Then return new Options_Bernson
	if algorithmName = "Options_BGSubtract" Then return new Options_BGSubtract
	if algorithmName = "Options_BGSubtractSynthetic" Then return new Options_BGSubtractSynthetic
	if algorithmName = "Options_Bin2WayRedCloud" Then return new Options_Bin2WayRedCloud
	if algorithmName = "Options_Bin3WayRedCloud" Then return new Options_Bin3WayRedCloud
	if algorithmName = "Options_Binarize" Then return new Options_Binarize
	if algorithmName = "Options_BinarizeNiBlack" Then return new Options_BinarizeNiBlack
	if algorithmName = "Options_Blob" Then return new Options_Blob
	if algorithmName = "Options_BlockMatching" Then return new Options_BlockMatching
	if algorithmName = "Options_Blur" Then return new Options_Blur
	if algorithmName = "Options_BlurTopo" Then return new Options_BlurTopo
	if algorithmName = "Options_Boundary" Then return new Options_Boundary
	if algorithmName = "Options_BoundaryRect" Then return new Options_BoundaryRect
	if algorithmName = "Options_BrightnessContrast" Then return new Options_BrightnessContrast
	if algorithmName = "Options_CamShift" Then return new Options_CamShift
	if algorithmName = "Options_Canny" Then return new Options_Canny
	if algorithmName = "Options_Cartoonify" Then return new Options_Cartoonify
	if algorithmName = "Options_CComp" Then return new Options_CComp
	if algorithmName = "Options_CellAutomata" Then return new Options_CellAutomata
	if algorithmName = "Options_Classifier" Then return new Options_Classifier
	if algorithmName = "Options_Clone" Then return new Options_Clone
	if algorithmName = "Options_Coherence" Then return new Options_Coherence
	if algorithmName = "Options_Color" Then return new Options_Color
	if algorithmName = "Options_Color8UTopX" Then return new Options_Color8UTopX
	if algorithmName = "Options_ColorMatch" Then return new Options_ColorMatch
	if algorithmName = "Options_Colors" Then return new Options_Colors
	if algorithmName = "Options_Complexity" Then return new Options_Complexity
	if algorithmName = "Options_Contours" Then return new Options_Contours
	if algorithmName = "Options_Contours2" Then return new Options_Contours2
	if algorithmName = "Options_Convex" Then return new Options_Convex
	if algorithmName = "Options_Corners" Then return new Options_Corners
	if algorithmName = "Options_Databases" Then return new Options_Databases
	if algorithmName = "Options_DCT" Then return new Options_DCT
	if algorithmName = "Options_Denoise" Then return new Options_Denoise
	if algorithmName = "Options_Depth" Then return new Options_Depth
	if algorithmName = "Options_DepthColor" Then return new Options_DepthColor
	if algorithmName = "Options_DepthEdges" Then return new Options_DepthEdges
	if algorithmName = "Options_DepthHoles" Then return new Options_DepthHoles
	if algorithmName = "Options_Derivative" Then return new Options_Derivative
	if algorithmName = "Options_DFT" Then return new Options_DFT
	if algorithmName = "Options_DFTShape" Then return new Options_DFTShape
	if algorithmName = "Options_Dilate" Then return new Options_Dilate
	if algorithmName = "Options_Distance" Then return new Options_Distance
	if algorithmName = "Options_Dither" Then return new Options_Dither
	if algorithmName = "Options_DNN" Then return new Options_DNN
	if algorithmName = "Options_Draw" Then return new Options_Draw
	if algorithmName = "Options_DrawArc" Then return new Options_DrawArc
	if algorithmName = "Options_DrawNoise" Then return new Options_DrawNoise
	if algorithmName = "Options_EdgeOverlay" Then return new Options_EdgeOverlay
	if algorithmName = "Options_Edges" Then return new Options_Edges
	if algorithmName = "Options_Edges_All" Then return new Options_Edges_All
	if algorithmName = "Options_Edges2" Then return new Options_Edges2
	if algorithmName = "Options_Edges3" Then return new Options_Edges3
	if algorithmName = "Options_Edges4" Then return new Options_Edges4
	if algorithmName = "Options_Eigen" Then return new Options_Eigen
	if algorithmName = "Options_Emax" Then return new Options_Emax
	if algorithmName = "Options_EmaxInputClusters" Then return new Options_EmaxInputClusters
	if algorithmName = "Options_Encode" Then return new Options_Encode
	if algorithmName = "Options_Erode" Then return new Options_Erode
	if algorithmName = "Options_Etch_ASketch" Then return new Options_Etch_ASketch
	if algorithmName = "Options_Extrinsics" Then return new Options_Extrinsics
	if algorithmName = "Options_FeatureGather" Then return new Options_FeatureGather
	if algorithmName = "Options_FeatureMatch" Then return new Options_FeatureMatch
	if algorithmName = "Options_Features" Then return new Options_Features
	if algorithmName = "Options_Filter" Then return new Options_Filter
	if algorithmName = "Options_FilterNorm" Then return new Options_FilterNorm
	if algorithmName = "Options_FitEllipse" Then return new Options_FitEllipse
	if algorithmName = "Options_FitLine" Then return new Options_FitLine
	if algorithmName = "Options_FlatLand" Then return new Options_FlatLand
	if algorithmName = "Options_Flood" Then return new Options_Flood
	if algorithmName = "Options_ForeGround" Then return new Options_ForeGround
	if algorithmName = "Options_FPoly" Then return new Options_FPoly
	if algorithmName = "Options_Fractal" Then return new Options_Fractal
	if algorithmName = "Options_GeneticDrawing" Then return new Options_GeneticDrawing
	if algorithmName = "Options_Gif" Then return new Options_Gif
	if algorithmName = "Options_Grayscale8U" Then return new Options_Grayscale8U
	if algorithmName = "Options_GuidedBPDepth" Then return new Options_GuidedBPDepth
	if algorithmName = "Options_Harris" Then return new Options_Harris
	if algorithmName = "Options_HarrisCorners" Then return new Options_HarrisCorners
	if algorithmName = "Options_HeatMap" Then return new Options_HeatMap
	if algorithmName = "Options_HistCompare" Then return new Options_HistCompare
	if algorithmName = "Options_HistPointCloud" Then return new Options_HistPointCloud
	if algorithmName = "Options_HistXD" Then return new Options_HistXD
	if algorithmName = "Options_Homography" Then return new Options_Homography
	if algorithmName = "Options_Hough" Then return new Options_Hough
	if algorithmName = "Options_IMU" Then return new Options_IMU
	if algorithmName = "Options_IMUFrameTime" Then return new Options_IMUFrameTime
	if algorithmName = "Options_InPaint" Then return new Options_InPaint
	if algorithmName = "Options_Intercepts" Then return new Options_Intercepts
	if algorithmName = "Options_Interpolate" Then return new Options_Interpolate
	if algorithmName = "Options_JpegQuality" Then return new Options_JpegQuality
	if algorithmName = "Options_Kalman_VB" Then return new Options_Kalman_VB
	if algorithmName = "Options_Kaze" Then return new Options_Kaze
	if algorithmName = "Options_KLT" Then return new Options_KLT
	if algorithmName = "Options_KMeans" Then return new Options_KMeans
	if algorithmName = "Options_KNN" Then return new Options_KNN
	if algorithmName = "Options_Laplacian" Then return new Options_Laplacian
	if algorithmName = "Options_LaplacianKernels" Then return new Options_LaplacianKernels
	if algorithmName = "Options_LUT" Then return new Options_LUT
	if algorithmName = "Options_MatchCell" Then return new Options_MatchCell
	if algorithmName = "Options_MatchShapes" Then return new Options_MatchShapes
	if algorithmName = "Options_MinArea" Then return new Options_MinArea
	if algorithmName = "Options_MinMaxNone" Then return new Options_MinMaxNone
	if algorithmName = "Options_Morphology" Then return new Options_Morphology
	if algorithmName = "Options_Motion" Then return new Options_Motion
	if algorithmName = "Options_MotionBlur" Then return new Options_MotionBlur
	if algorithmName = "Options_MotionDetect" Then return new Options_MotionDetect
	if algorithmName = "Options_MSER" Then return new Options_MSER
	if algorithmName = "Options_Neighbors" Then return new Options_Neighbors
	if algorithmName = "Options_OilPaint" Then return new Options_OilPaint
	if algorithmName = "Options_OpenGL" Then return new Options_OpenGL
	if algorithmName = "Options_OpenGL_Contours" Then return new Options_OpenGL_Contours
	if algorithmName = "Options_OpenGL_Duster" Then return new Options_OpenGL_Duster
	if algorithmName = "Options_OpenGLFunctions" Then return new Options_OpenGLFunctions
	if algorithmName = "Options_OpticalFlow" Then return new Options_OpticalFlow
	if algorithmName = "Options_OpticalFlowSparse" Then return new Options_OpticalFlowSparse
	if algorithmName = "Options_Photoshop" Then return new Options_Photoshop
	if algorithmName = "Options_Plane" Then return new Options_Plane
	if algorithmName = "Options_PlaneEstimation" Then return new Options_PlaneEstimation
	if algorithmName = "Options_PNGCompression" Then return new Options_PNGCompression
	if algorithmName = "Options_Pointilism" Then return new Options_Pointilism
	if algorithmName = "Options_PreCorners" Then return new Options_PreCorners
	if algorithmName = "Options_ProCon" Then return new Options_ProCon
	if algorithmName = "Options_Quaternion" Then return new Options_Quaternion
	if algorithmName = "Options_Random" Then return new Options_Random
	if algorithmName = "Options_Resize" Then return new Options_Resize
	if algorithmName = "Options_RotatePoly" Then return new Options_RotatePoly
	if algorithmName = "Options_SepFilter2D" Then return new Options_SepFilter2D
	if algorithmName = "Options_ShapeDetect" Then return new Options_ShapeDetect
	if algorithmName = "Options_ShiTomasi" Then return new Options_ShiTomasi
	if algorithmName = "Options_Sift" Then return new Options_Sift
	if algorithmName = "Options_SLR" Then return new Options_SLR
	if algorithmName = "Options_Smoothing" Then return new Options_Smoothing
	if algorithmName = "Options_Sobel" Then return new Options_Sobel
	if algorithmName = "Options_SOM" Then return new Options_SOM
	if algorithmName = "Options_Sort" Then return new Options_Sort
	if algorithmName = "Options_Spectrum" Then return new Options_Spectrum
	if algorithmName = "Options_StdevGrid" Then return new Options_StdevGrid
	if algorithmName = "Options_Structured" Then return new Options_Structured
	if algorithmName = "Options_SuperRes" Then return new Options_SuperRes
	if algorithmName = "Options_SURF" Then return new Options_SURF
	if algorithmName = "Options_SVM" Then return new Options_SVM
	if algorithmName = "Options_SVM2" Then return new Options_SVM2
	if algorithmName = "Options_Swarm" Then return new Options_Swarm
	if algorithmName = "Options_SymmetricalShapes" Then return new Options_SymmetricalShapes
	if algorithmName = "Options_Threshold" Then return new Options_Threshold
	if algorithmName = "Options_Threshold_Adaptive" Then return new Options_Threshold_Adaptive
	if algorithmName = "Options_Threshold_AdaptiveMin" Then return new Options_Threshold_AdaptiveMin
	if algorithmName = "Options_ThresholdAll" Then return new Options_ThresholdAll
	if algorithmName = "Options_TopX" Then return new Options_TopX
	if algorithmName = "Options_Translation" Then return new Options_Translation
	if algorithmName = "Options_Uncertainty" Then return new Options_Uncertainty
	if algorithmName = "Options_Warp" Then return new Options_Warp
	if algorithmName = "Options_WarpModel" Then return new Options_WarpModel
	if algorithmName = "Options_WarpModel2" Then return new Options_WarpModel2
	if algorithmName = "Options_Wavelet" Then return new Options_Wavelet
	if algorithmName = "Options_XNeighbors" Then return new Options_XNeighbors
	if algorithmName = "Options_XPhoto" Then return new Options_XPhoto
	if algorithmName = "ORB_Basics" Then return new ORB_Basics
	if algorithmName = "ORB_Match" Then return new ORB_Match
	if algorithmName = "Palette_Basics" Then return new Palette_Basics
	if algorithmName = "Palette_Color" Then return new Palette_Color
	if algorithmName = "Palette_Create" Then return new Palette_Create
	if algorithmName = "Palette_CustomColorMap" Then return new Palette_CustomColorMap
	if algorithmName = "Palette_DepthColorMap" Then return new Palette_DepthColorMap
	if algorithmName = "Palette_DrawTest" Then return new Palette_DrawTest
	if algorithmName = "Palette_Gradient" Then return new Palette_Gradient
	if algorithmName = "Palette_GrayToColor" Then return new Palette_GrayToColor
	if algorithmName = "Palette_Layout2D" Then return new Palette_Layout2D
	if algorithmName = "Palette_LeftRightImages" Then return new Palette_LeftRightImages
	if algorithmName = "Palette_LinearPolar" Then return new Palette_LinearPolar
	if algorithmName = "Palette_LoadColorMap" Then return new Palette_LoadColorMap
	if algorithmName = "Palette_Random" Then return new Palette_Random
	if algorithmName = "Palette_RandomColorMap" Then return new Palette_RandomColorMap
	if algorithmName = "Palette_Reduction" Then return new Palette_Reduction
	if algorithmName = "Palette_RGBDepth" Then return new Palette_RGBDepth
	if algorithmName = "Palette_TaskColors" Then return new Palette_TaskColors
	if algorithmName = "Palette_Variable" Then return new Palette_Variable
	if algorithmName = "ParticleFilter_Example" Then return new ParticleFilter_Example
	if algorithmName = "PCA_Basics" Then return new PCA_Basics
	if algorithmName = "PCA_CellMask" Then return new PCA_CellMask
	if algorithmName = "PCA_Depth" Then return new PCA_Depth
	if algorithmName = "PCA_DrawImage" Then return new PCA_DrawImage
	if algorithmName = "PCA_Prep_CPP" Then return new PCA_Prep_CPP
	if algorithmName = "PCA_Reconstruct" Then return new PCA_Reconstruct
	if algorithmName = "Pendulum_Basics" Then return new Pendulum_Basics
	if algorithmName = "PhaseCorrelate_Basics" Then return new PhaseCorrelate_Basics
	if algorithmName = "PhaseCorrelate_BasicsTest" Then return new PhaseCorrelate_BasicsTest
	if algorithmName = "PhaseCorrelate_Depth" Then return new PhaseCorrelate_Depth
	if algorithmName = "PhaseCorrelate_HanningWindow" Then return new PhaseCorrelate_HanningWindow
	if algorithmName = "Photon_Basics" Then return new Photon_Basics
	if algorithmName = "Photon_Subtraction" Then return new Photon_Subtraction
	if algorithmName = "Photon_Test" Then return new Photon_Test
	if algorithmName = "PhotoShop_AlphaBeta" Then return new PhotoShop_AlphaBeta
	if algorithmName = "PhotoShop_ChangeMask" Then return new PhotoShop_ChangeMask
	if algorithmName = "PhotoShop_Clahe" Then return new PhotoShop_Clahe
	if algorithmName = "PhotoShop_DuoTone" Then return new PhotoShop_DuoTone
	if algorithmName = "PhotoShop_Emboss" Then return new PhotoShop_Emboss
	if algorithmName = "PhotoShop_EmbossAll" Then return new PhotoShop_EmbossAll
	if algorithmName = "PhotoShop_Gamma" Then return new PhotoShop_Gamma
	if algorithmName = "PhotoShop_Hue" Then return new PhotoShop_Hue
	if algorithmName = "PhotoShop_Pencil_Basics" Then return new PhotoShop_Pencil_Basics
	if algorithmName = "PhotoShop_Pencil_Manual" Then return new PhotoShop_Pencil_Manual
	if algorithmName = "PhotoShop_PlotHist" Then return new PhotoShop_PlotHist
	if algorithmName = "PhotoShop_Sepia" Then return new PhotoShop_Sepia
	if algorithmName = "PhotoShop_SharpenDetail" Then return new PhotoShop_SharpenDetail
	if algorithmName = "PhotoShop_SharpenStylize" Then return new PhotoShop_SharpenStylize
	if algorithmName = "PhotoShop_UnsharpMask" Then return new PhotoShop_UnsharpMask
	if algorithmName = "PhotoShop_Vignetting" Then return new PhotoShop_Vignetting
	if algorithmName = "PhotoShop_WhiteBalance" Then return new PhotoShop_WhiteBalance
	if algorithmName = "PhotoShop_WhiteBalancePlot" Then return new PhotoShop_WhiteBalancePlot
	if algorithmName = "Pixel_ColorGuess" Then return new Pixel_ColorGuess
	if algorithmName = "Pixel_Display" Then return new Pixel_Display
	if algorithmName = "Pixel_GetSet" Then return new Pixel_GetSet
	if algorithmName = "Pixel_MapDistance" Then return new Pixel_MapDistance
	if algorithmName = "Pixel_MapLeftRight" Then return new Pixel_MapLeftRight
	if algorithmName = "Pixel_Mapper" Then return new Pixel_Mapper
	if algorithmName = "Pixel_Measure" Then return new Pixel_Measure
	if algorithmName = "Pixel_NeighborsHorizontal" Then return new Pixel_NeighborsHorizontal
	if algorithmName = "Pixel_NeighborsMask" Then return new Pixel_NeighborsMask
	if algorithmName = "Pixel_NeighborsMaskH" Then return new Pixel_NeighborsMaskH
	if algorithmName = "Pixel_NeighborsMaskV" Then return new Pixel_NeighborsMaskV
	if algorithmName = "Pixel_NeighborsPatchNeighbors" Then return new Pixel_NeighborsPatchNeighbors
	if algorithmName = "Pixel_NeighborsVertical" Then return new Pixel_NeighborsVertical
	if algorithmName = "Pixel_SampleColor" Then return new Pixel_SampleColor
	if algorithmName = "Pixel_Sampler" Then return new Pixel_Sampler
	if algorithmName = "Pixel_SubPixel" Then return new Pixel_SubPixel
	if algorithmName = "Pixel_Unique_CPP" Then return new Pixel_Unique_CPP
	if algorithmName = "Pixel_Unstable" Then return new Pixel_Unstable
	if algorithmName = "Pixel_Vector3D" Then return new Pixel_Vector3D
	if algorithmName = "Pixel_Vectors" Then return new Pixel_Vectors
	if algorithmName = "Pixel_Viewer" Then return new Pixel_Viewer
	if algorithmName = "Pixel_Zoom" Then return new Pixel_Zoom
	if algorithmName = "Plane_Basics" Then return new Plane_Basics
	if algorithmName = "Plane_CellColor" Then return new Plane_CellColor
	if algorithmName = "Plane_EqCorrelation" Then return new Plane_EqCorrelation
	if algorithmName = "Plane_Equation" Then return new Plane_Equation
	if algorithmName = "Plane_FlatSurfaces" Then return new Plane_FlatSurfaces
	if algorithmName = "Plane_FloorStudy" Then return new Plane_FloorStudy
	if algorithmName = "Plane_From3Points" Then return new Plane_From3Points
	if algorithmName = "Plane_Histogram" Then return new Plane_Histogram
	if algorithmName = "Plane_Horizontals" Then return new Plane_Horizontals
	if algorithmName = "Plane_OnlyPlanes" Then return new Plane_OnlyPlanes
	if algorithmName = "Plane_Points" Then return new Plane_Points
	if algorithmName = "Plane_Verticals" Then return new Plane_Verticals
	if algorithmName = "Plot_Basics" Then return new Plot_Basics
	if algorithmName = "Plot_Basics_CPP" Then return new Plot_Basics_CPP
	if algorithmName = "Plot_Beats" Then return new Plot_Beats
	if algorithmName = "Plot_Depth" Then return new Plot_Depth
	if algorithmName = "Plot_Dots" Then return new Plot_Dots
	if algorithmName = "Plot_Histogram" Then return new Plot_Histogram
	if algorithmName = "Plot_Histogram2D" Then return new Plot_Histogram2D
	if algorithmName = "Plot_OverTime" Then return new Plot_OverTime
	if algorithmName = "Plot_OverTimeFixedScale" Then return new Plot_OverTimeFixedScale
	if algorithmName = "Plot_OverTimeScalar" Then return new Plot_OverTimeScalar
	if algorithmName = "Plot_OverTimeSingle" Then return new Plot_OverTimeSingle
	if algorithmName = "PlyFormat_Basics" Then return new PlyFormat_Basics
	if algorithmName = "PlyFormat_PlusRGB" Then return new PlyFormat_PlusRGB
	if algorithmName = "PointCloud_Average" Then return new PointCloud_Average
	if algorithmName = "PointCloud_Basics" Then return new PointCloud_Basics
	if algorithmName = "PointCloud_Continuous_VB" Then return new PointCloud_Continuous_VB
	if algorithmName = "PointCloud_FrustrumSide" Then return new PointCloud_FrustrumSide
	if algorithmName = "PointCloud_FrustrumTop" Then return new PointCloud_FrustrumTop
	if algorithmName = "PointCloud_Histograms" Then return new PointCloud_Histograms
	if algorithmName = "PointCloud_Inspector" Then return new PointCloud_Inspector
	if algorithmName = "PointCloud_NeighborV" Then return new PointCloud_NeighborV
	if algorithmName = "PointCloud_PCPoints" Then return new PointCloud_PCPoints
	if algorithmName = "PointCloud_PCpointsMask" Then return new PointCloud_PCpointsMask
	if algorithmName = "PointCloud_PCPointsPlane" Then return new PointCloud_PCPointsPlane
	if algorithmName = "PointCloud_Point3f" Then return new PointCloud_Point3f
	if algorithmName = "PointCloud_Raw" Then return new PointCloud_Raw
	if algorithmName = "PointCloud_Raw_CPP" Then return new PointCloud_Raw_CPP
	if algorithmName = "PointCloud_ReducedSideView" Then return new PointCloud_ReducedSideView
	if algorithmName = "PointCloud_ReducedTopView" Then return new PointCloud_ReducedTopView
	if algorithmName = "PointCloud_ReducedViews" Then return new PointCloud_ReducedViews
	if algorithmName = "PointCloud_ReduceSplit2" Then return new PointCloud_ReduceSplit2
	if algorithmName = "PointCloud_SetupSide" Then return new PointCloud_SetupSide
	if algorithmName = "PointCloud_SetupTop" Then return new PointCloud_SetupTop
	if algorithmName = "PointCloud_Solo" Then return new PointCloud_Solo
	if algorithmName = "PointCloud_SoloRegions" Then return new PointCloud_SoloRegions
	if algorithmName = "PointCloud_Spin" Then return new PointCloud_Spin
	if algorithmName = "PointCloud_Spin2" Then return new PointCloud_Spin2
	if algorithmName = "PointCloud_SurfaceH" Then return new PointCloud_SurfaceH
	if algorithmName = "PointCloud_SurfaceH_CPP" Then return new PointCloud_SurfaceH_CPP
	if algorithmName = "PointCloud_Visualize" Then return new PointCloud_Visualize
	if algorithmName = "PointCloud_XRangeTest" Then return new PointCloud_XRangeTest
	if algorithmName = "PointCloud_YRangeTest" Then return new PointCloud_YRangeTest
	if algorithmName = "PointPolygonTest_Basics" Then return new PointPolygonTest_Basics
	if algorithmName = "Polylines_IEnumerableExample" Then return new Polylines_IEnumerableExample
	if algorithmName = "Polylines_Random" Then return new Polylines_Random
	if algorithmName = "PongWars_Basics" Then return new PongWars_Basics
	if algorithmName = "PongWars_Two" Then return new PongWars_Two
	if algorithmName = "ProCon_Basics" Then return new ProCon_Basics
	if algorithmName = "ProCon_Variation" Then return new ProCon_Variation
	if algorithmName = "Profile_Basics" Then return new Profile_Basics
	if algorithmName = "Profile_ConcentrationSide" Then return new Profile_ConcentrationSide
	if algorithmName = "Profile_ConcentrationTop" Then return new Profile_ConcentrationTop
	if algorithmName = "Profile_Derivative" Then return new Profile_Derivative
	if algorithmName = "Profile_Kalman" Then return new Profile_Kalman
	if algorithmName = "Profile_OpenGL" Then return new Profile_OpenGL
	if algorithmName = "Profile_Rotation" Then return new Profile_Rotation
	if algorithmName = "Projection_Basics" Then return new Projection_Basics
	if algorithmName = "Projection_Cell" Then return new Projection_Cell
	if algorithmName = "Projection_Floor" Then return new Projection_Floor
	if algorithmName = "Projection_HistSide" Then return new Projection_HistSide
	if algorithmName = "Projection_HistTop" Then return new Projection_HistTop
	if algorithmName = "Projection_Lines" Then return new Projection_Lines
	if algorithmName = "Projection_Object" Then return new Projection_Object
	if algorithmName = "Projection_ObjectIsolate" Then return new Projection_ObjectIsolate
	if algorithmName = "Projection_Side" Then return new Projection_Side
	if algorithmName = "Projection_Top" Then return new Projection_Top
	if algorithmName = "Puzzle_Basics" Then return new Puzzle_Basics
	if algorithmName = "Puzzle_Solver" Then return new Puzzle_Solver
	if algorithmName = "Puzzle_SolverDynamic" Then return new Puzzle_SolverDynamic
	if algorithmName = "Pyramid_Basics" Then return new Pyramid_Basics
	if algorithmName = "Pyramid_Filter" Then return new Pyramid_Filter
	if algorithmName = "PyrFilter_Basics" Then return new PyrFilter_Basics
	if algorithmName = "PyrFilter_RedCloud" Then return new PyrFilter_RedCloud
	if algorithmName = "Python_Basics" Then return new Python_Basics
	if algorithmName = "Python_MemMap" Then return new Python_MemMap
	if algorithmName = "Python_Run" Then return new Python_Run
	if algorithmName = "Python_Stream" Then return new Python_Stream
	if algorithmName = "QRcode_Basics" Then return new QRcode_Basics
	if algorithmName = "Quadrant_Basics" Then return new Quadrant_Basics
	if algorithmName = "Quaterion_Basics" Then return new Quaterion_Basics
	if algorithmName = "Quaterion_IMUPrediction" Then return new Quaterion_IMUPrediction
	if algorithmName = "Random_Basics" Then return new Random_Basics
	if algorithmName = "Random_Basics3D" Then return new Random_Basics3D
	if algorithmName = "Random_Basics4D" Then return new Random_Basics4D
	if algorithmName = "Random_CheckNormalDist" Then return new Random_CheckNormalDist
	if algorithmName = "Random_CheckNormalDistSmoothed" Then return new Random_CheckNormalDistSmoothed
	if algorithmName = "Random_CheckUniformDist" Then return new Random_CheckUniformDist
	if algorithmName = "Random_CheckUniformSmoothed" Then return new Random_CheckUniformSmoothed
	if algorithmName = "Random_Clusters" Then return new Random_Clusters
	if algorithmName = "Random_CustomDistribution" Then return new Random_CustomDistribution
	if algorithmName = "Random_CustomHistogram" Then return new Random_CustomHistogram
	if algorithmName = "Random_Enumerable" Then return new Random_Enumerable
	if algorithmName = "Random_KalmanPoints" Then return new Random_KalmanPoints
	if algorithmName = "Random_LUTMask" Then return new Random_LUTMask
	if algorithmName = "Random_MonteCarlo" Then return new Random_MonteCarlo
	if algorithmName = "Random_NormalDist" Then return new Random_NormalDist
	if algorithmName = "Random_PatternGenerator_CPP" Then return new Random_PatternGenerator_CPP
	if algorithmName = "Random_Point2d" Then return new Random_Point2d
	if algorithmName = "Random_Shuffle" Then return new Random_Shuffle
	if algorithmName = "Random_StaticTV" Then return new Random_StaticTV
	if algorithmName = "Random_StaticTVFaster" Then return new Random_StaticTVFaster
	if algorithmName = "Random_StaticTVFastSimple" Then return new Random_StaticTVFastSimple
	if algorithmName = "Random_UniformDist" Then return new Random_UniformDist
	if algorithmName = "Rectangle_Basics" Then return new Rectangle_Basics
	if algorithmName = "Rectangle_EnclosingPoints" Then return new Rectangle_EnclosingPoints
	if algorithmName = "Rectangle_Intersection" Then return new Rectangle_Intersection
	if algorithmName = "Rectangle_MultiOverlap" Then return new Rectangle_MultiOverlap
	if algorithmName = "Rectangle_Overlap" Then return new Rectangle_Overlap
	if algorithmName = "Rectangle_Rotated" Then return new Rectangle_Rotated
	if algorithmName = "Rectangle_Union" Then return new Rectangle_Union
	if algorithmName = "RecursiveBilateralFilter_CPP" Then return new RecursiveBilateralFilter_CPP
	if algorithmName = "RedCloud_Basics" Then return new RedCloud_Basics
	if algorithmName = "RedCloud_BProject3D" Then return new RedCloud_BProject3D
	if algorithmName = "RedCloud_CCompColor" Then return new RedCloud_CCompColor
	if algorithmName = "RedCloud_CellChanges" Then return new RedCloud_CellChanges
	if algorithmName = "RedCloud_Cells" Then return new RedCloud_Cells
	if algorithmName = "RedCloud_CellsAtDepth" Then return new RedCloud_CellsAtDepth
	if algorithmName = "RedCloud_CellStatsPlot" Then return new RedCloud_CellStatsPlot
	if algorithmName = "RedCloud_ColorAndDepth" Then return new RedCloud_ColorAndDepth
	if algorithmName = "RedCloud_Combine" Then return new RedCloud_Combine
	if algorithmName = "RedCloud_Consistent" Then return new RedCloud_Consistent
	if algorithmName = "RedCloud_Consistent1" Then return new RedCloud_Consistent1
	if algorithmName = "RedCloud_Consistent2" Then return new RedCloud_Consistent2
	if algorithmName = "RedCloud_ContourUpdate" Then return new RedCloud_ContourUpdate
	if algorithmName = "RedCloud_ContourVsFeatureLess" Then return new RedCloud_ContourVsFeatureLess
	if algorithmName = "RedCloud_CPP" Then return new RedCloud_CPP
	if algorithmName = "RedCloud_Delaunay" Then return new RedCloud_Delaunay
	if algorithmName = "RedCloud_DelaunayGuidedFeatures" Then return new RedCloud_DelaunayGuidedFeatures
	if algorithmName = "RedCloud_Depth" Then return new RedCloud_Depth
	if algorithmName = "RedCloud_DepthOutline" Then return new RedCloud_DepthOutline
	if algorithmName = "RedCloud_Diff" Then return new RedCloud_Diff
	if algorithmName = "RedCloud_Equations" Then return new RedCloud_Equations
	if algorithmName = "RedCloud_FeatureLess" Then return new RedCloud_FeatureLess
	if algorithmName = "RedCloud_FeatureLessReduce" Then return new RedCloud_FeatureLessReduce
	if algorithmName = "RedCloud_Features" Then return new RedCloud_Features
	if algorithmName = "RedCloud_FindCells" Then return new RedCloud_FindCells
	if algorithmName = "RedCloud_Flippers" Then return new RedCloud_Flippers
	if algorithmName = "RedCloud_FloodPoint" Then return new RedCloud_FloodPoint
	if algorithmName = "RedCloud_FourColor" Then return new RedCloud_FourColor
	if algorithmName = "RedCloud_FPS" Then return new RedCloud_FPS
	if algorithmName = "RedCloud_Gaps" Then return new RedCloud_Gaps
	if algorithmName = "RedCloud_GenCellContains" Then return new RedCloud_GenCellContains
	if algorithmName = "RedCloud_Hue" Then return new RedCloud_Hue
	if algorithmName = "RedCloud_Hulls" Then return new RedCloud_Hulls
	if algorithmName = "RedCloud_JoinCells" Then return new RedCloud_JoinCells
	if algorithmName = "RedCloud_KMeans" Then return new RedCloud_KMeans
	if algorithmName = "RedCloud_LeftRight" Then return new RedCloud_LeftRight
	if algorithmName = "RedCloud_LikelyFlatSurfaces" Then return new RedCloud_LikelyFlatSurfaces
	if algorithmName = "RedCloud_MaxDist" Then return new RedCloud_MaxDist
	if algorithmName = "RedCloud_MaxDist_CPP" Then return new RedCloud_MaxDist_CPP
	if algorithmName = "RedCloud_MeterByMeter" Then return new RedCloud_MeterByMeter
	if algorithmName = "RedCloud_MostlyColor" Then return new RedCloud_MostlyColor
	if algorithmName = "RedCloud_MotionBasics" Then return new RedCloud_MotionBasics
	if algorithmName = "RedCloud_MotionBGsubtract" Then return new RedCloud_MotionBGsubtract
	if algorithmName = "RedCloud_NaturalColor" Then return new RedCloud_NaturalColor
	if algorithmName = "RedCloud_NaturalGray" Then return new RedCloud_NaturalGray
	if algorithmName = "RedCloud_OnlyColorAlt" Then return new RedCloud_OnlyColorAlt
	if algorithmName = "RedCloud_OnlyColorHist3D" Then return new RedCloud_OnlyColorHist3D
	if algorithmName = "RedCloud_OutlineColor" Then return new RedCloud_OutlineColor
	if algorithmName = "RedCloud_Overlaps" Then return new RedCloud_Overlaps
	if algorithmName = "RedCloud_PlaneColor" Then return new RedCloud_PlaneColor
	if algorithmName = "RedCloud_PlaneEq3D" Then return new RedCloud_PlaneEq3D
	if algorithmName = "RedCloud_PlaneFromContour" Then return new RedCloud_PlaneFromContour
	if algorithmName = "RedCloud_PlaneFromMask" Then return new RedCloud_PlaneFromMask
	if algorithmName = "RedCloud_Planes" Then return new RedCloud_Planes
	if algorithmName = "RedCloud_PlusTiers" Then return new RedCloud_PlusTiers
	if algorithmName = "RedCloud_ProjectCell" Then return new RedCloud_ProjectCell
	if algorithmName = "RedCloud_Reduce" Then return new RedCloud_Reduce
	if algorithmName = "RedCloud_Reduction" Then return new RedCloud_Reduction
	if algorithmName = "RedCloud_ShapeCorrelation" Then return new RedCloud_ShapeCorrelation
	if algorithmName = "RedCloud_SizeOrder" Then return new RedCloud_SizeOrder
	if algorithmName = "RedCloud_StructuredH" Then return new RedCloud_StructuredH
	if algorithmName = "RedCloud_StructuredV" Then return new RedCloud_StructuredV
	if algorithmName = "RedCloud_Tiers" Then return new RedCloud_Tiers
	if algorithmName = "RedCloud_TiersBinarize" Then return new RedCloud_TiersBinarize
	if algorithmName = "RedCloud_TopX" Then return new RedCloud_TopX
	if algorithmName = "RedCloud_TopXHulls" Then return new RedCloud_TopXHulls
	if algorithmName = "RedCloud_TopXNeighbors" Then return new RedCloud_TopXNeighbors
	if algorithmName = "RedCloud_UnmatchedCount" Then return new RedCloud_UnmatchedCount
	if algorithmName = "RedCloud_UnstableCells" Then return new RedCloud_UnstableCells
	if algorithmName = "RedCloud_UnstableHulls" Then return new RedCloud_UnstableHulls
	if algorithmName = "RedCloud_World" Then return new RedCloud_World
	if algorithmName = "RedCloud_XZ" Then return new RedCloud_XZ
	if algorithmName = "RedCloud_YZ" Then return new RedCloud_YZ
	if algorithmName = "RedTrack_Basics" Then return new RedTrack_Basics
	if algorithmName = "RedTrack_Features" Then return new RedTrack_Features
	if algorithmName = "RedTrack_FeaturesKNN" Then return new RedTrack_FeaturesKNN
	if algorithmName = "RedTrack_GoodCell" Then return new RedTrack_GoodCell
	if algorithmName = "RedTrack_GoodCellInput" Then return new RedTrack_GoodCellInput
	if algorithmName = "RedTrack_GoodCells" Then return new RedTrack_GoodCells
	if algorithmName = "RedTrack_Lines" Then return new RedTrack_Lines
	if algorithmName = "RedTrack_LineSingle" Then return new RedTrack_LineSingle
	if algorithmName = "RedTrack_Points" Then return new RedTrack_Points
	if algorithmName = "Reduction_Basics" Then return new Reduction_Basics
	if algorithmName = "Reduction_BGR" Then return new Reduction_BGR
	if algorithmName = "Reduction_Edges" Then return new Reduction_Edges
	if algorithmName = "Reduction_Floodfill" Then return new Reduction_Floodfill
	if algorithmName = "Reduction_HeatMapLines" Then return new Reduction_HeatMapLines
	if algorithmName = "Reduction_Histogram" Then return new Reduction_Histogram
	if algorithmName = "Reduction_PointCloud" Then return new Reduction_PointCloud
	if algorithmName = "Reduction_XYZ" Then return new Reduction_XYZ
	if algorithmName = "Remap_Basics" Then return new Remap_Basics
	if algorithmName = "Remap_Flip" Then return new Remap_Flip
	if algorithmName = "Replay_OpenGL" Then return new Replay_OpenGL
	if algorithmName = "Replay_Play" Then return new Replay_Play
	if algorithmName = "Replay_Record" Then return new Replay_Record
	if algorithmName = "Resize_Basics" Then return new Resize_Basics
	if algorithmName = "Resize_Preserve" Then return new Resize_Preserve
	if algorithmName = "Resize_Proportional" Then return new Resize_Proportional
	if algorithmName = "Resize_Smaller" Then return new Resize_Smaller
	if algorithmName = "Retina_Basics_CPP" Then return new Retina_Basics_CPP
	if algorithmName = "Retina_Depth" Then return new Retina_Depth
	if algorithmName = "ROI_Accumulate" Then return new ROI_Accumulate
	if algorithmName = "ROI_AccumulateOld" Then return new ROI_AccumulateOld
	if algorithmName = "ROI_Basics" Then return new ROI_Basics
	if algorithmName = "ROI_FindNonZeroNoSingle" Then return new ROI_FindNonZeroNoSingle
	if algorithmName = "Rotate_Basics" Then return new Rotate_Basics
	if algorithmName = "Rotate_BasicsQT" Then return new Rotate_BasicsQT
	if algorithmName = "Rotate_Box" Then return new Rotate_Box
	if algorithmName = "Rotate_Example" Then return new Rotate_Example
	if algorithmName = "Rotate_Horizon" Then return new Rotate_Horizon
	if algorithmName = "Rotate_Poly" Then return new Rotate_Poly
	if algorithmName = "Rotate_PolyQT" Then return new Rotate_PolyQT
	if algorithmName = "Salience_Basics_CPP" Then return new Salience_Basics_CPP
	if algorithmName = "Salience_Basics_MT" Then return new Salience_Basics_MT
	if algorithmName = "SemiGlobalMatching_CPP" Then return new SemiGlobalMatching_CPP
	if algorithmName = "Sides_Basics" Then return new Sides_Basics
	if algorithmName = "Sides_ColorC" Then return new Sides_ColorC
	if algorithmName = "Sides_Corner" Then return new Sides_Corner
	if algorithmName = "Sides_Profile" Then return new Sides_Profile
	if algorithmName = "Sieve_BasicsVB" Then return new Sieve_BasicsVB
	if algorithmName = "Sieve_Image" Then return new Sieve_Image
	if algorithmName = "SLR_Data" Then return new SLR_Data
	if algorithmName = "SLR_SurfaceH" Then return new SLR_SurfaceH
	if algorithmName = "SLR_TrendImages" Then return new SLR_TrendImages
	if algorithmName = "SLR_Trends" Then return new SLR_Trends
	if algorithmName = "Smoothing_Exterior" Then return new Smoothing_Exterior
	if algorithmName = "Smoothing_Interior" Then return new Smoothing_Interior
	if algorithmName = "Solve_ByArray" Then return new Solve_ByArray
	if algorithmName = "Solve_ByMat" Then return new Solve_ByMat
	if algorithmName = "Sort_1Channel" Then return new Sort_1Channel
	if algorithmName = "Sort_3Channel" Then return new Sort_3Channel
	if algorithmName = "Sort_Basics" Then return new Sort_Basics
	if algorithmName = "Sort_FeatureLess" Then return new Sort_FeatureLess
	if algorithmName = "Sort_GrayScale" Then return new Sort_GrayScale
	if algorithmName = "Sort_GrayScale1" Then return new Sort_GrayScale1
	if algorithmName = "Sort_Integer" Then return new Sort_Integer
	if algorithmName = "Sort_MLPrepTest_CPP" Then return new Sort_MLPrepTest_CPP
	if algorithmName = "Sort_RectAndMask" Then return new Sort_RectAndMask
	if algorithmName = "Sound_Basics" Then return new Sound_Basics
	if algorithmName = "Sound_Display" Then return new Sound_Display
	if algorithmName = "Sound_GenWaveDisplay" Then return new Sound_GenWaveDisplay
	if algorithmName = "Sound_SignalGenerator" Then return new Sound_SignalGenerator
	if algorithmName = "Sound_WaveDisplay" Then return new Sound_WaveDisplay
	if algorithmName = "Spectrum_Basics" Then return new Spectrum_Basics
	if algorithmName = "Spectrum_Breakdown" Then return new Spectrum_Breakdown
	if algorithmName = "Spectrum_CellZoom" Then return new Spectrum_CellZoom
	if algorithmName = "Spectrum_Cloud" Then return new Spectrum_Cloud
	if algorithmName = "Spectrum_Gray" Then return new Spectrum_Gray
	if algorithmName = "Spectrum_GrayAndCloud" Then return new Spectrum_GrayAndCloud
	if algorithmName = "Spectrum_Mask" Then return new Spectrum_Mask
	if algorithmName = "Spectrum_RedCloud" Then return new Spectrum_RedCloud
	if algorithmName = "Spectrum_RGB" Then return new Spectrum_RGB
	if algorithmName = "Spectrum_X" Then return new Spectrum_X
	if algorithmName = "Spectrum_Y" Then return new Spectrum_Y
	if algorithmName = "Spectrum_Z" Then return new Spectrum_Z
	if algorithmName = "Stabilizer_Basics" Then return new Stabilizer_Basics
	if algorithmName = "Stabilizer_BasicsRandomInput" Then return new Stabilizer_BasicsRandomInput
	if algorithmName = "Stabilizer_BasicsTest" Then return new Stabilizer_BasicsTest
	if algorithmName = "Stabilizer_CornerPoints" Then return new Stabilizer_CornerPoints
	if algorithmName = "Stabilizer_OpticalFlow" Then return new Stabilizer_OpticalFlow
	if algorithmName = "Stabilizer_VerticalIMU" Then return new Stabilizer_VerticalIMU
	if algorithmName = "Stable_Basics" Then return new Stable_Basics
	if algorithmName = "Stable_BasicsCount" Then return new Stable_BasicsCount
	if algorithmName = "Stable_FAST" Then return new Stable_FAST
	if algorithmName = "Stable_GoodFeatures" Then return new Stable_GoodFeatures
	if algorithmName = "Stable_Lines" Then return new Stable_Lines
	if algorithmName = "Stitch_Basics" Then return new Stitch_Basics
	if algorithmName = "Structured_Cloud" Then return new Structured_Cloud
	if algorithmName = "Structured_Cloud2" Then return new Structured_Cloud2
	if algorithmName = "Structured_CountSide" Then return new Structured_CountSide
	if algorithmName = "Structured_CountSideSum" Then return new Structured_CountSideSum
	if algorithmName = "Structured_CountTop" Then return new Structured_CountTop
	if algorithmName = "Structured_Crosshairs" Then return new Structured_Crosshairs
	if algorithmName = "Structured_Depth" Then return new Structured_Depth
	if algorithmName = "Structured_FeatureLines" Then return new Structured_FeatureLines
	if algorithmName = "Structured_FloorCeiling" Then return new Structured_FloorCeiling
	if algorithmName = "Structured_LinearizeFloor" Then return new Structured_LinearizeFloor
	if algorithmName = "Structured_MouseSlice" Then return new Structured_MouseSlice
	if algorithmName = "Structured_MultiSlice" Then return new Structured_MultiSlice
	if algorithmName = "Structured_MultiSliceH" Then return new Structured_MultiSliceH
	if algorithmName = "Structured_MultiSliceLines" Then return new Structured_MultiSliceLines
	if algorithmName = "Structured_MultiSlicePolygon" Then return new Structured_MultiSlicePolygon
	if algorithmName = "Structured_MultiSliceV" Then return new Structured_MultiSliceV
	if algorithmName = "Structured_Rebuild" Then return new Structured_Rebuild
	if algorithmName = "Structured_ROI" Then return new Structured_ROI
	if algorithmName = "Structured_SliceEither" Then return new Structured_SliceEither
	if algorithmName = "Structured_SliceH" Then return new Structured_SliceH
	if algorithmName = "Structured_SliceV" Then return new Structured_SliceV
	if algorithmName = "Structured_SliceXPlot" Then return new Structured_SliceXPlot
	if algorithmName = "Structured_SliceYPlot" Then return new Structured_SliceYPlot
	if algorithmName = "Structured_SurveyH" Then return new Structured_SurveyH
	if algorithmName = "Structured_SurveyV" Then return new Structured_SurveyV
	if algorithmName = "Structured_Tiles" Then return new Structured_Tiles
	if algorithmName = "Structured_TilesQuad" Then return new Structured_TilesQuad
	if algorithmName = "Structured_TransformH" Then return new Structured_TransformH
	if algorithmName = "Structured_TransformV" Then return new Structured_TransformV
	if algorithmName = "SuperPixel_Basics" Then return new SuperPixel_Basics
	if algorithmName = "SuperPixel_Basics_CPP" Then return new SuperPixel_Basics_CPP
	if algorithmName = "SuperPixel_BinarizedImage" Then return new SuperPixel_BinarizedImage
	if algorithmName = "SuperPixel_Depth" Then return new SuperPixel_Depth
	if algorithmName = "SuperPixel_WithCanny" Then return new SuperPixel_WithCanny
	if algorithmName = "SuperPixel_WithLineDetector" Then return new SuperPixel_WithLineDetector
	if algorithmName = "SuperRes_Basics" Then return new SuperRes_Basics
	if algorithmName = "SuperRes_Input" Then return new SuperRes_Input
	if algorithmName = "SuperRes_SubPixelZoom" Then return new SuperRes_SubPixelZoom
	if algorithmName = "SVD_Example" Then return new SVD_Example
	if algorithmName = "SVD_Example2" Then return new SVD_Example2
	if algorithmName = "SVD_Gaussian" Then return new SVD_Gaussian
	if algorithmName = "SVM_Basics" Then return new SVM_Basics
	if algorithmName = "SVM_ReuseBasics" Then return new SVM_ReuseBasics
	if algorithmName = "SVM_ReuseRandom" Then return new SVM_ReuseRandom
	if algorithmName = "SVM_SampleData" Then return new SVM_SampleData
	if algorithmName = "SVM_TestCase" Then return new SVM_TestCase
	if algorithmName = "Swarm_Basics" Then return new Swarm_Basics
	if algorithmName = "Swarm_Flood" Then return new Swarm_Flood
	if algorithmName = "Swarm_Flood2" Then return new Swarm_Flood2
	if algorithmName = "Swarm_Flood3" Then return new Swarm_Flood3
	if algorithmName = "Swarm_LeftRight" Then return new Swarm_LeftRight
	if algorithmName = "Swarm_LeftRightFeatures" Then return new Swarm_LeftRightFeatures
	if algorithmName = "Swarm_Percentage" Then return new Swarm_Percentage
	if algorithmName = "Tessallate_Basics" Then return new Tessallate_Basics
	if algorithmName = "Tessallate_Bricks" Then return new Tessallate_Bricks
	if algorithmName = "Tessallate_QuadHulls" Then return new Tessallate_QuadHulls
	if algorithmName = "Tessallate_QuadMinMax" Then return new Tessallate_QuadMinMax
	if algorithmName = "Tessallate_QuadSimple" Then return new Tessallate_QuadSimple
	if algorithmName = "Tessallate_Triangles" Then return new Tessallate_Triangles
	if algorithmName = "Texture_Basics" Then return new Texture_Basics
	if algorithmName = "Texture_Flow" Then return new Texture_Flow
	if algorithmName = "Texture_Flow_Depth" Then return new Texture_Flow_Depth
	if algorithmName = "Texture_Flow_Reduction" Then return new Texture_Flow_Reduction
	if algorithmName = "Thickness_Basics" Then return new Thickness_Basics
	if algorithmName = "Threading_Test" Then return new Threading_Test
	if algorithmName = "Threading_Test1" Then return new Threading_Test1
	if algorithmName = "Threshold_Adaptive" Then return new Threshold_Adaptive
	if algorithmName = "Threshold_Basics" Then return new Threshold_Basics
	if algorithmName = "Threshold_ByChannels" Then return new Threshold_ByChannels
	if algorithmName = "Threshold_ColorSource" Then return new Threshold_ColorSource
	if algorithmName = "Threshold_Definitions" Then return new Threshold_Definitions
	if algorithmName = "Tracker_Basics" Then return new Tracker_Basics
	if algorithmName = "Transform_Affine3D" Then return new Transform_Affine3D
	if algorithmName = "Transform_Resize" Then return new Transform_Resize
	if algorithmName = "Transform_Rotate" Then return new Transform_Rotate
	if algorithmName = "TransformationMatrix_Basics" Then return new TransformationMatrix_Basics
	if algorithmName = "Triangle_Basics" Then return new Triangle_Basics
	if algorithmName = "Triangle_Cell" Then return new Triangle_Cell
	if algorithmName = "Triangle_HullContour" Then return new Triangle_HullContour
	if algorithmName = "Triangle_Mask" Then return new Triangle_Mask
	if algorithmName = "Triangle_RedCloud" Then return new Triangle_RedCloud
	if algorithmName = "VB_Controls_CSharp" Then return new VB_Controls_CSharp
	if algorithmName = "Vector_Magnitude" Then return new Vector_Magnitude
	if algorithmName = "Video_Basics" Then return new Video_Basics
	if algorithmName = "Video_CarCComp" Then return new Video_CarCComp
	if algorithmName = "Video_CarCounting" Then return new Video_CarCounting
	if algorithmName = "Video_MinCircle" Then return new Video_MinCircle
	if algorithmName = "Video_MinRect" Then return new Video_MinRect
	if algorithmName = "Vignetting_Basics" Then return new Vignetting_Basics
	if algorithmName = "Vignetting_Devignetting" Then return new Vignetting_Devignetting
	if algorithmName = "Vignetting_Removal" Then return new Vignetting_Removal
	if algorithmName = "Vignetting_VB" Then return new Vignetting_VB
	if algorithmName = "Volume_Basics" Then return new Volume_Basics
	if algorithmName = "WarpAffine_3Points" Then return new WarpAffine_3Points
	if algorithmName = "WarpAffine_4Points" Then return new WarpAffine_4Points
	if algorithmName = "WarpAffine_Basics" Then return new WarpAffine_Basics
	if algorithmName = "WarpAffine_BasicsQT" Then return new WarpAffine_BasicsQT
	if algorithmName = "WarpAffine_Captcha" Then return new WarpAffine_Captcha
	if algorithmName = "WarpAffine_Repeated" Then return new WarpAffine_Repeated
	if algorithmName = "WarpAffine_RepeatedExample8" Then return new WarpAffine_RepeatedExample8
	if algorithmName = "WarpModel_Basics" Then return new WarpModel_Basics
	if algorithmName = "WarpModel_ECC" Then return new WarpModel_ECC
	if algorithmName = "WarpModel_Input" Then return new WarpModel_Input
	if algorithmName = "WarpPerspective_Basics" Then return new WarpPerspective_Basics
	if algorithmName = "WarpPerspective_WidthHeight" Then return new WarpPerspective_WidthHeight
	if algorithmName = "Watershed_Basics" Then return new Watershed_Basics
	if algorithmName = "Watershed_DepthAuto" Then return new Watershed_DepthAuto
	if algorithmName = "Watershed_DepthReduction" Then return new Watershed_DepthReduction
	if algorithmName = "XFeatures2D_StarDetector" Then return new XFeatures2D_StarDetector
	if algorithmName = "XPhoto_Bm3dDenoise" Then return new XPhoto_Bm3dDenoise
	if algorithmName = "XPhoto_Bm3dDenoiseDepthImage" Then return new XPhoto_Bm3dDenoiseDepthImage
	if algorithmName = "XPhoto_Inpaint" Then return new XPhoto_Inpaint
	if algorithmName = "XPhoto_Inpaint_CPP" Then return new XPhoto_Inpaint_CPP
	if algorithmName = "XPhoto_OilPaint_CPP" Then return new XPhoto_OilPaint_CPP
return nothing
End Function
End Class
