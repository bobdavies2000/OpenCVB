Imports cv = OpenCvSharp
Public Class HullLine_Basics : Inherits TaskParent
    Public hulls As New Contour_Hulls
    Public minDistance As Integer = dst2.Width * 0.02
    Public lpList As New List(Of lpData)
    Public Sub New()
        task.gOptions.DebugSlider.Value = 50
        desc = "Find all the lines generated by Contour_Hulls"
    End Sub
    Public Overrides Sub RunAlg(src As cv.Mat)
        hulls.Run(src)
        dst3 = hulls.dst3
        labels(3) = hulls.labels(3)

        lpList.Clear()
        dst2 = dst3.Clone
        Dim maxLines = task.gOptions.DebugSlider.Value * 2
        For Each contour In hulls.contourList
            If contour.hull.Count < 5 Then Continue For

            Dim ptLast As cv.Point = contour.hull(0)

            For Each pt In contour.hull
                Dim lp = New lpData(pt, ptLast)
                If lp.slope >= 100000 Then Continue For ' likely just the edge of the image.
                If Math.Abs(lp.slope) < 0.0001 Then Continue For ' likely just the edge of the image

                lpList.Add(lp)
                ptLast = pt
                DrawLine(dst2, lp.p1, lp.p2)
                If lpList.Count >= maxLines Then Exit For
            Next
            If lpList.Count >= maxLines Then Exit For
        Next

        labels(2) = CStr(lpList.Count) + " hull lines"
    End Sub
End Class






Public Class HullLine_EdgePoints : Inherits TaskParent
    Dim hullLines As New HullLine_Basics
    Public Sub New()
        desc = "Find the edge points for the current and last frm for the hull lines."
    End Sub
    Public Shared Function EdgePointOffset(lpIn As lpData, offset As Integer) As lpData
        Dim lp = New lpData(lpIn.p1, lpIn.p2)
        If lp.pE1.X <= 1 Then lp.pE1.X += offset
        If lp.pE1.Y <= 1 Then lp.pE1.Y += offset
        If lp.pE2.X <= 1 Then lp.pE2.X += offset
        If lp.pE2.Y <= 1 Then lp.pE2.Y += offset
        If lp.pE1.X >= task.workRes.Width - 1 Then lp.pE1.X -= offset
        If lp.pE1.Y >= task.workRes.Height - 1 Then lp.pE1.Y -= offset
        If lp.pE2.X >= task.workRes.Width - 1 Then lp.pE2.X -= offset
        If lp.pE2.Y >= task.workRes.Height - 1 Then lp.pE2.Y -= offset
        Return lp
    End Function
    Public Overrides Sub RunAlg(src As cv.Mat)
        hullLines.Run(src)
        dst3 = hullLines.dst2
        labels(3) = hullLines.labels(3)

        dst2 = src.Clone
        For Each lpIn In hullLines.lpList
            Dim lp = EdgePointOffset(lpIn, 1)
            DrawCircle(dst2, New cv.Point(CInt(lp.pE1.X), CInt(lp.pE1.Y)))
            DrawCircle(dst2, New cv.Point(CInt(lp.pE2.X), CInt(lp.pE2.Y)))
        Next
        labels(2) = hullLines.labels(2)
    End Sub
End Class





Public Class HullLine_SelectHull : Inherits TaskParent
    Dim hullLines As New HullLine_Basics
    Public Sub New()
        dst1 = New cv.Mat(dst1.Size, cv.MatType.CV_8U, 0)
        labels(3) = "Click on any hull to see it below with its edge points."
        desc = "Display the contour hull selected."
    End Sub
    Public Overrides Sub RunAlg(src As cv.Mat)
        hullLines.Run(src)

        dst2 = hullLines.dst2
        labels(2) = hullLines.labels(3)

        Dim contour = hullLines.hulls.getSelectedHull()

        dst1.SetTo(0)
        DrawContour(dst1, contour.hull, (contour.ID) Mod 255, -1)
        dst3 = ShowPaletteNoZero(dst1)
    End Sub
End Class