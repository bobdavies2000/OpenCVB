// this file is automatically generated in a pre-build step.  Do not waste your time modifying manually.
using VB_Classes;
using CS_Classes;
namespace CS_Classes
{
	public class CSAlgorithmList
	{
		public CS_Parent createCSAlgorithm( string algorithmName, VB_Classes.VBtask task)
		{
			if (algorithmName == "CSharp_AddWeighted_Basics") return new CSharp_AddWeighted_Basics(task);
			if (algorithmName == "CSharp_AddWeighted_Edges") return new CSharp_AddWeighted_Edges(task);
			if (algorithmName == "CSharp_AddWeighted_ImageAccumulate") return new CSharp_AddWeighted_ImageAccumulate(task);
			if (algorithmName == "CSharp_AddWeighted_InfraRed") return new CSharp_AddWeighted_InfraRed(task);
			if (algorithmName == "CSharp_AlphaChannel_Basics") return new CSharp_AlphaChannel_Basics(task);
			if (algorithmName == "CSharp_Annealing_Basics_CPP") return new CSharp_Annealing_Basics_CPP(task);
			if (algorithmName == "CSharp_Annealing_MultiThreaded_CPP") return new CSharp_Annealing_MultiThreaded_CPP(task);
			if (algorithmName == "CSharp_ApproxPoly_Basics") return new CSharp_ApproxPoly_Basics(task);
			if (algorithmName == "CSharp_ApproxPoly_FindandDraw") return new CSharp_ApproxPoly_FindandDraw(task);
			if (algorithmName == "CSharp_ApproxPoly_Hull") return new CSharp_ApproxPoly_Hull(task);
			if (algorithmName == "CSharp_Area_FindNonZero") return new CSharp_Area_FindNonZero(task);
			if (algorithmName == "CSharp_Area_MinMotionRect") return new CSharp_Area_MinMotionRect(task);
			if (algorithmName == "CSharp_Area_MinRect") return new CSharp_Area_MinRect(task);
			if (algorithmName == "CSharp_Area_MinTriangle_CPP") return new CSharp_Area_MinTriangle_CPP(task);
			if (algorithmName == "CSharp_Area_SoloPoints") return new CSharp_Area_SoloPoints(task);
			if (algorithmName == "CSharp_AsciiArt_Basics") return new CSharp_AsciiArt_Basics(task);
			if (algorithmName == "CSharp_AsciiArt_Color") return new CSharp_AsciiArt_Color(task);
			if (algorithmName == "CSharp_AsciiArt_Diff") return new CSharp_AsciiArt_Diff(task);
			if (algorithmName == "CSharp_BackProject_Basics") return new CSharp_BackProject_Basics(task);
			if (algorithmName == "CSharp_BackProject_BasicsKeyboard") return new CSharp_BackProject_BasicsKeyboard(task);
			if (algorithmName == "CSharp_BackProject_Display") return new CSharp_BackProject_Display(task);
			if (algorithmName == "CSharp_BackProject_FeatureLess") return new CSharp_BackProject_FeatureLess(task);
			if (algorithmName == "CSharp_BackProject_Full") return new CSharp_BackProject_Full(task);
			if (algorithmName == "CSharp_BackProject_FullEqualized") return new CSharp_BackProject_FullEqualized(task);
			if (algorithmName == "CSharp_BackProject_FullLines") return new CSharp_BackProject_FullLines(task);
			if (algorithmName == "CSharp_BackProject_Horizontal") return new CSharp_BackProject_Horizontal(task);
			if (algorithmName == "CSharp_BackProject_MaskLines") return new CSharp_BackProject_MaskLines(task);
			if (algorithmName == "CSharp_BackProject_Masks") return new CSharp_BackProject_Masks(task);
			if (algorithmName == "CSharp_BackProject_PointCloud") return new CSharp_BackProject_PointCloud(task);
			if (algorithmName == "CSharp_BackProject_Reduction") return new CSharp_BackProject_Reduction(task);
			if (algorithmName == "CSharp_BackProject_Side") return new CSharp_BackProject_Side(task);
			if (algorithmName == "CSharp_BackProject_SoloSide") return new CSharp_BackProject_SoloSide(task);
			if (algorithmName == "CSharp_BackProject_SoloTop") return new CSharp_BackProject_SoloTop(task);
			if (algorithmName == "CSharp_BackProject_Top") return new CSharp_BackProject_Top(task);
			if (algorithmName == "CSharp_BackProject_Unstable") return new CSharp_BackProject_Unstable(task);
			if (algorithmName == "CSharp_BackProject_Vertical") return new CSharp_BackProject_Vertical(task);
			if (algorithmName == "CSharp_Diff_Basics") return new CSharp_Diff_Basics(task);
			if (algorithmName == "CSharp_Line_Basics") return new CSharp_Line_Basics(task);
			if (algorithmName == "CSharp_Random_Basics") return new CSharp_Random_Basics(task);
			return new CSharp_AddWeighted_Basics(task);
		}
	}
}
